trace on

let wemp =   
let w_cont = 1 
let wconse = 1 
let wzero = 0 
let wfec_pagox = 2022-07-22 17:57:44.000 
let wnum_linea = 0 

delete from info_satn
  where (in id_empleado, "158125", "181101", "188183", "204660", "207734", "210854", "213910", "294916", "314354", "357353", "359675", "360077", "369725", "391239", "394276", "396397", "403072", "403166", "404283", "405500", "409802", "410217", "411003", "411789", "411790", "411791", "411792", "502391", "503316");

delete from valida_timbrado_mejoras_query
  where (in id_empleado, "158125", "181101", "188183", "204660", "207734", "210854", "213910", "294916", "314354", "357353", "359675", "360077", "369725", "391239", "394276", "396397", "403072", "403166", "404283", "405500", "409802", "410217", "411003", "411789", "411790", "411791", "411792", "502391", "503316");
let w_tipcont = 01-TiemInd 
let w_period = 04-Quincen 
let w_tipnom = O-Ordinari 
let w_tipcont1 = 01 
let w_period1 = 04 
let w_tipnom1 = O 
let w_nomdes = O 
expression:
  (select fec_inicio, fec_fin
    from m4sys_hist_pagas
    where (= fec_paga, wfec_pago))
evaluates to 15/07/2022 ; 01/07/2022 ; 
let wfec_inicio = 01/07/2022 
let wfec_fin = 15/07/2022 
let wdescrip = Pago de nÃ³mina 
expression:(= wfec_pago, "15/01/2019")
evaluates to f 
let wnum_consv = 0 
expression:
  (select (count *)
    from timb_cons20
    where (and (and (and (= fec_pago, wfec_pago), (= fec_crea, wfec_pagox)), (= empresa, wempresa)), (= descripcion, w_nomdes)))
evaluates to 0 ; 
let wnum_consv = 0 
expression:(= wnum_consv, 0)
evaluates to t 
let wnum_consv = 1 
expression:
  (select (max num_consf)
    from timb_cons20
    where (and (>= fec_pago, "15/01/2019"), (= empresa, wempresa)))
evaluates to 2324309 ; 
let wnum_consi = 2324309 
expression:(= wnum_consi, 0)
evaluates to f 
expression:(+ wnum_consi, 1)
evaluates to 2324310 
let wnum_consi = 2324310 
expression:wnum_consi
evaluates to 2324310 
let wnum_cons2 = 2324310 

insert into timb_cons20
  values (wempresa, w_nomdes, wnum_consi, 0, wnum_consv, wfec_pago, wfec_pagox);
let wramo = 637 
expression:(= wempresa, "01")
evaluates to t 
expression:(|| (|| (|| (|| (|| "E03", (<procedure> rpad, "JOSE MARIA LAFRAGUA", 50, " ")), (<procedure> rpad, "4", 20, " ")), (<procedure> rpad, " ", 50, " ")), (<procedure> rpad, "TABACALERA", 50, " ")), (<procedure> rpad, " ", 50, " "))
evaluates to E03JOSE MARIA LAFRAGUA                               4                                                                     TABACALERA                                                                                           
let cade03a = E03JOSE MARIA LAFRAGUA                               4                                                                     TABACALERA                                                                                           
expression:(|| (|| (|| (<procedure> rpad, " ", 50, " "), (<procedure> rpad, "CUAUHTEMOC", 50, " ")), (<procedure> rpad, "DISTRITO FEDERAL", 50, " ")), (<procedure> rpad, "MEXICO", 50, " "))
evaluates to                                                   CUAUHTEMOC                                        DISTRITO FEDERAL                                  MEXICO                                             
let cade03b =                                                   CUAUHTEMOC                                        DISTRITO FEDERAL                                  MEXICO                                             
start select cursor.
select c.id_empresa, c.rfc[1, 6], num_cons, tot_net_cheque, tot_ded_cheque, tot_perc_cheque, TRIM ( BOTH ' ' FROM nom_emp), id_banco, (nvl cuenta, ""), id_div_geografica, adscripcion, id_servicio, puesto, p1, c1, i1, p2, c2, i2, p3, c3, i3, p4, c4, i4, p5, c5, i5, p6, c6, i6, p7, c7, i7, p8, c8, i8, p9, c9, i9, p10, c10, i10, p11, c11, i11, p12, c12, i12, p13, c13, i13, p14, c14, i14, p15, c15, i15, p16, c16, i16, p17, c17, i17, p18, c18, i18, p19, c19, i19, p20, c20, i20, p21, c21, i21, p22, c22, i22, p23, c23, i23, p24, c24, i24, p25, c25, i25, p26, c26, i26, p27, c27, i27, p28, c28, i28, p29, c29, i29, p30, c30, i30, p31, c31, i31, p32, c32, i32, p33, c33, i33, p34, c34, i34, p35, c35, i35, p36, c36, i36, p37, c37, i37, p38, c38, i38, p39, c39, i39, p40, c40, i40, TRIM ( BOTH ' ' FROM id_c_u_r_p_st), (nvl numero_ss, ""), TRIM ( BOTH ' ' FROM id_legal), (|| (|| (|| (|| (nvl TRIM ( BOTH ' ' FROM apellido_1), " "), " "), (nvl TRIM ( BOTH ' ' FROM apellido_2), " ")), " "), (nvl TRIM ( BOTH ' ' FROM nombre), " ")), (nvl n_puesto_plaza, "") as n_puesto_plaza, (nvl n_clave_servicio, "") as n_clave_servicio, sem_trabajadas, antig_anio, antig_meses, antig_dias, (nvl pagaduria, "ERROR") as pagaduria, case  when (and (null cp), (= c.id_empresa, "01")) then "06080" else "" end as cp
  from cosif_timbrado_2022 as c, outer(m4t_puestos_plaza as p), outer(m4t_clave_servicio as s), m4t_empleados as e, ramo_ct_tim as r, outer(m4t_domicilios_issste as d), outer( table((<unknown op>: 129 
    (select id_empleado, (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 7)) as sem_trabajadas, (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)) as antig_anio, (<procedure> trunc, (/ (- (- (sum dias), (sum dias_descuento)), (* (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), 365)), 30.4)) as antig_meses, (<procedure> trunc, (* (- (/ (- (- (sum dias), (sum dias_descuento)), (* (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), 365)), 30.4), (<procedure> trunc, (/ (- (- (sum dias), (sum dias_descuento)), (* (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), 365)), 30.4))), 30.4)) as antig_dias
      from m4_antiguedades
      where (<> tipo_incidencia, "ANTIGUEDAD FEDERAL")
      group by id_empleado)) )  as a)
  where (and (and (and (and (= fec_pago, wfec_pago), (= c.id_empresa, wempresa)), (= tipo, wtipo)), (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<> c1, "26"), (<> c2, "26")), (<> c3, "26")), (<> c4, "26")), (<> c5, "26")), (<> c6, "26")), (<> c7, "26")), (<> c8, "26")), (<> c9, "26")), (<> c10, "26")), (<> c11, "26")), (<> c12, "26")), (<> c13, "26")), (<> c14, "26")), (<> c15, "26")), (<> c16, "26")), (<> c17, "26")), (<> c18, "26")), (<> c19, "26")), (<> c20, "26")), (<> c21, "26")), (<> c22, "26")), (<> c23, "26")), (<> c24, "26")), (<> c25, "26")), (<> c26, "26")), (<> c27, "26")), (<> c28, "26")), (<> c29, "26")), (<> c30, "26")), (<> c31, "26")), (<> c32, "26")), (<> c33, "26")), (<> c34, "26")), (<> c35, "26")), (<> c36, "26")), (<> c37, "26")), (<> c38, "26")), (<> c39, "26")), (<> c40, "26"))), (in c.rfc, "158125", "181101", "188183", "204660", "207734", "210854", "213910", "294916", "314354", "357353", "359675", "360077", "369725", "391239", "394276", "396397", "403072", "403166", "404283", "405500", "409802", "410217", "411003", "411789", "411790", "411791", "411792", "502391", "503316"))
  order by 2
select cursor iteration.
select cursor returns 01 , 158125 , 5339890 , $61236.82 , $25053.50 , $86290.32 , RAMON COLORADO FRANCISCO , BNTE ,  , 27 , 2702120100 , 17200 , M01010 , P  , 23 , $41290.32 , P  , 27 , $45000.00 , D                    , 53 , $25053.50 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , RACF520312HTCMLR06 , 80915230454 , RACF5203123P5 , RAMON COLORADO FRANCISCO , MEDICO ESPECIALISTA "B" , CONSULTA EXTERNA , 1832 , 35 , 1 , 20 , 27000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 1 158125 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 1 158125 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324311 
let wnum_cons2 = 2324311 
expression:wnum_cons2
evaluates to 2324311 
let wnum_cons = 2324311 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to t 
expression:wi3
evaluates to $25053.50 
let wispt = $25053.50 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 0.00 
let wimporte = 0.00 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324311@2022-07-22T17:57:44@99@86290.32@25053.50@MXN@@61236.82@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324311@2022-07-22T17:57:44@99@86290.32@25053.50@MXN@@61236.82@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 1 
let wnum_linea = 1 
expression:wnum_linea
evaluates to 1 
let wnum_lini = 1 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 2 
let wnum_linea = 2 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63727000@@@ 
let cadenac2 = CNE@603@@63727000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 3 
let wnum_linea = 3 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to RACF5203123P5 ; RACF520312HTCMLR06 ; 80915230454 ; 
let wnumero_ss_bmex = 80915230454 
let wcurp_bmex = RACF520312HTCMLR06 
let wid_legal_bmex = RACF5203123P5 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 4 
let wnum_linea = 4 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@RACF5203123P5@RAMON COLORADO FRANCISCO@P01 
let cadenae02 = RC@RACF5203123P5@RAMON COLORADO FRANCISCO@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 34.00 ; 
let wporcent = 34.00 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/05/2022 ; 15/05/2022 ; 3 ; 8 ; 20 ; 
let wid_nivel_wid_grupo_grado_nivel = 20 
let wid_sub_nivel_wid_integracion = 8 
let wid_zona = 3 
let wfec_imputacion = 15/05/2022 
let wfecha_ini_ts = 01/05/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to TAB ; 
let westado_c = TAB 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 000000000665660982 ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = 000000000665660982 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 5 
let wnum_linea = 5 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 6 
let wnum_linea = 6 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@86290.32@86290.32@25053.50@@                                                                                                                                                                         
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@86290.32@86290.32@25053.50@@                                                                                                                                                                         
expression:(+ wnum_linea, 1)
evaluates to 7 
let wnum_linea = 7 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@86290.32@@@86290.32@0.00@@@@@@@@@@ 
let cadenak = CNP@86290.32@@@86290.32@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 8 
let wnum_linea = 8 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 158125 ,  xp1 = P ,  xi1 = 41290.32 ,  xc1 = 23 ,  wnum_linea = 8 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Premio por Antiguedad ; 
let xn_concepto = Premio por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 41290.32 
let ximp_gra = 41290.32 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@023@Premio por Antiguedad@41290.32@0.00 
let xcadenanoi = NPD@@038@023@Premio por Antiguedad@41290.32@0.00 
expression:(+ wnum_linea, 1)
evaluates to 9 
let wnum_linea = 9 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 9 
procedure genlinsatn returns 9 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 9 
let wnum_linea = 9 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 158125 ,  xp1 = P ,  xi1 = 45000.00 ,  xc1 = 27 ,  wnum_linea = 9 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Premio Moneda de Oro ; 
let xn_concepto = Premio Moneda de Oro 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 45000.00 
let ximp_gra = 45000.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@027@Premio Moneda de Oro@45000.00@0.00 
let xcadenanoi = NPD@@038@027@Premio Moneda de Oro@45000.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 10 
let wnum_linea = 10 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 10 
procedure genlinsatn returns 10 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 10 
let wnum_linea = 10 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@0.00@25053.50 
let cadenaq = CND@0.00@25053.50 
expression:(+ wnum_linea, 1)
evaluates to 11 
let wnum_linea = 11 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 158125 ,  xp1 = D ,  xi1 = 25053.50 ,  xc1 = 53 ,  wnum_linea = 11 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25053.50 
let ximp_exe = 25053.50 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@25053.50 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@25053.50 
expression:(+ wnum_linea, 1)
evaluates to 12 
let wnum_linea = 12 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 12 
procedure genlinsatn returns 12 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 12 
let wnum_linea = 12 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
evaluates to 13 
let wnum_linea = 13 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 2 
let w_cont = 2 
select cursor iteration.
select cursor returns 01 , 181101 , 5299221 , $1139.65 , $62.50 , $1202.15 , ARREOLA MARTINEZ MA DEL CARMEN , BNTE ,  , 22 , 2202120100 , 02400 , M02085 , P  , 05 , $1202.15 , D  , 53 , $62.50 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , AEMC670919MQTRRR04 , 80946709500 , AEMC670919R67 , ARREOLA MARTINEZ MA DEL CARMEN , TRABAJADORA SOCIAL EN AREA MEDICA "B" , TRABAJO SOCIAL , 1734 , 33 , 3 , 1 , 22000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 2 181101 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 2 181101 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324312 
let wnum_cons2 = 2324312 
expression:wnum_cons2
evaluates to 2324312 
let wnum_cons = 2324312 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to t 
expression:wi2
evaluates to $62.50 
let wispt = $62.50 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 0.00 
let wimporte = 0.00 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324312@2022-07-22T17:57:44@99@1202.15@62.50@MXN@@1139.65@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324312@2022-07-22T17:57:44@99@1202.15@62.50@MXN@@1139.65@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 14 
let wnum_linea = 14 
expression:wnum_linea
evaluates to 14 
let wnum_lini = 14 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 15 
let wnum_linea = 15 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63722000@@@ 
let cadenac2 = CNE@603@@63722000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 16 
let wnum_linea = 16 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to AEMC670919R67 ; AEMC670919MQTRRR04 ; 80946709500 ; 
let wnumero_ss_bmex = 80946709500 
let wcurp_bmex = AEMC670919MQTRRR04 
let wid_legal_bmex = AEMC670919R67 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 17 
let wnum_linea = 17 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@AEMC670919R67@ARREOLA MARTINEZ MA DEL CARMEN@P01 
let cadenae02 = RC@AEMC670919R67@ARREOLA MARTINEZ MA DEL CARMEN@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 6.40 ; 
let wporcent = 6.40 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/12/2021 ; 15/12/2021 ; 2 ; 1 ; 18 ; 
let wid_nivel_wid_grupo_grado_nivel = 18 
let wid_sub_nivel_wid_integracion = 1 
let wid_zona = 2 
let wfec_imputacion = 15/12/2021 
let wfecha_ini_ts = 01/12/2021 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to QUE ; 
let westado_c = QUE 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to RECLAMO ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = RECLAMO 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 18 
let wnum_linea = 18 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 19 
let wnum_linea = 19 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@1202.15@1202.15@62.50@@                                                                                                                                                                              
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@1202.15@1202.15@62.50@@                                                                                                                                                                              
expression:(+ wnum_linea, 1)
evaluates to 20 
let wnum_linea = 20 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@1202.15@@@1202.15@0.00@@@@@@@@@@ 
let cadenak = CNP@1202.15@@@1202.15@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 21 
let wnum_linea = 21 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 181101 ,  xp1 = P ,  xi1 = 1202.15 ,  xc1 = 05 ,  wnum_linea = 21 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Antiguedad ; 
let xn_concepto = Compensacion por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1202.15 
let ximp_gra = 1202.15 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@005@Compensacion por Antiguedad@1202.15@0.00 
let xcadenanoi = NPD@@038@005@Compensacion por Antiguedad@1202.15@0.00 
expression:(+ wnum_linea, 1)
evaluates to 22 
let wnum_linea = 22 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 22 
procedure genlinsatn returns 22 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 22 
let wnum_linea = 22 
expression:(= wp2, "P")
evaluates to f 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@0.00@62.50 
let cadenaq = CND@0.00@62.50 
expression:(+ wnum_linea, 1)
evaluates to 23 
let wnum_linea = 23 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 181101 ,  xp1 = D ,  xi1 = 62.50 ,  xc1 = 53 ,  wnum_linea = 23 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 62.50 
let ximp_exe = 62.50 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@62.50 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@62.50 
expression:(+ wnum_linea, 1)
evaluates to 24 
let wnum_linea = 24 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 24 
procedure genlinsatn returns 24 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 24 
let wnum_linea = 24 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 25 
let wnum_linea = 25 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 3 
let w_cont = 3 
select cursor iteration.
select cursor returns 01 , 188183 , 5298159 , $4270.41 , $5775.99 , $10046.40 , CATALAN GONZALEZ ROCIO , BNMX ,  , 17 , 1720000000 , 12400 , M03021 , P  , 01 , $4168.50 , P  , 02 , $387.50 , P                    , 05 , $14.07 , P  , 06 , $142.50 , P  , 07 , $1930.42 , P  , 10 , $542.50 , D  , 1S , $31.28 , P  , 33 , $55.91 , P                    , 35 , $1855.00 , P  , 48 , $950.00 , D  , 4S , $383.15 , D  , 53 , $1425.33 , D  , 54 , $62.74 , D  , 60 , $1731.58 , D  , 61 , $81.48 , D  , 65 , $116.72 , D  , 66 , $3.95 , D  , 77 , $286.53 , D  , ET , $1315.00 , D  , PP , $88.00 , D  , S7 , $172.03 , D  , S8 , $39.10 , D  , S9 , $39.10 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , CAGR650605MMSTNC14 , 80986530352 , CAGR650605P24 , CATALAN GONZALEZ ROCIO , APOYO ADMINISTRATIVO EN SALUD - A5 , REGISTRO Y CONTROL DE ASISTENCIA , 1735 , 33 , 3 , 14 , 17000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 3 188183 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 3 188183 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324313 
let wnum_cons2 = 2324313 
expression:wnum_cons2
evaluates to 2324313 
let wnum_cons = 2324313 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to f 
expression:(= wc11, "53")
evaluates to f 
expression:(= wc12, "53")
evaluates to t 
expression:wi12
evaluates to $1425.33 
let wispt = $1425.33 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 4350.66 
let wimporte = 4350.66 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324313@2022-07-22T17:57:44@99@10046.40@5775.99@MXN@@4270.41@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324313@2022-07-22T17:57:44@99@10046.40@5775.99@MXN@@4270.41@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 26 
let wnum_linea = 26 
expression:wnum_linea
evaluates to 26 
let wnum_lini = 26 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 27 
let wnum_linea = 27 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63717000@@@ 
let cadenac2 = CNE@603@@63717000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 28 
let wnum_linea = 28 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
exception : looking for handler
SQL error = -284 ISAM error = 0  error string =  = ""
exception : handler FOUND
expression:(|| (|| (|| (|| (|| "error en  ---> ", w_cont), " "), wemp), " "), error_num)
evaluates to error en  ---> 3 188183 -284 
procedure spm4_layoutsatn_pruebas_2022_mq returns error en  ---> 3 188183 -284 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_linea, 1)
evaluates to 29 
let wnum_linea = 29 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| (|| (|| (|| (|| (|| (|| "Error-", desc_err), ":"), error_num), "-emp:"), wemp), "-Cons:"), wnum_cons2));
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 30 
let wnum_linea = 30 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@CAGR650605P24@CATALAN GONZALEZ ROCIO@P01 
let cadenae02 = RC@CAGR650605P24@CATALAN GONZALEZ ROCIO@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/07/2022 ; 15/07/2022 ; 2 ; 5 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 01/07/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 01/08/2008 ; 04865 ; 04865 ; M03021 ;   ; 13.0000000000000000 ; 48.0000000000000000 ; 16/04/1989 ; 16960.0000 ; 0.0000 ; 62.7400 ; 
let wsindl = 62.7400 
let wsindn = 0.0000 
let wdiaantig = 16960.0000 
let wfec_alta = 16/04/1989 
let wcont_des_tot = 48.0000000000000000 
let wcon_pag = 13.0000000000000000 
let wfal_ret =   
let wi2puesto = M03021 
let wcen_trab = 04865 
let wcen_pago = 04865 
let wfec_alta_empleado = 01/08/2008 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to APOYO ADMINISTRATIVO EN SALUD - A5 ; 
let wd2puesto = APOYO ADMINISTRATIVO EN SALUD - A5 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 16/04/1989 
let wfec_alta2 = 16/04/1989 
expression:(> wsindl, 0)
evaluates to t 
let wsindl_c = SÃ­ 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to MOR ; 
let westado_c = MOR 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 5256788176875797 ; BNMX ; TD ; 
let wforpago = TD 
let wbanco = BNMX 
let wcuenta = 5256788176875797 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to f 
let desc_err = NOE DatosPago04 
expression:
  (select (count *)
    from c_banco
    where (= id_banco, wbanco))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaTD 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 16, "0")
evaluates to 5256788176875797 
let wcuenta = 5256788176875797 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 1734.8571428571428571 
let wsem_ant = 1734.8571428571428571 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P1734W 
let wantigf = P1734W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -BNMX-5256788176875797 
let desc_err = NOE Arma-TD    -BNMX-5256788176875797 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-07-01@2022-07-15@15@10046.40@5775.99@0.00@CAGR650605MMSTNC14@80986530352@1989-04-16@P1734W@01@Sï¿½@01@02@188183@ 
let cadnoea = CNR@O@2022-07-15@2022-07-01@2022-07-15@15@10046.40@5775.99@0.00@CAGR650605MMSTNC14@80986530352@1989-04-16@P1734W@01@Sï¿½@01@02@188183@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to REGISTRO Y CONTROL DE ASISTENCIA@APOYO ADMINISTRATIVO EN SALUD - A5@1@04@002@5256788176875797@@0.00@MOR@ 
let cadnoeb = REGISTRO Y CONTROL DE ASISTENCIA@APOYO ADMINISTRATIVO EN SALUD - A5@1@04@002@5256788176875797@@0.00@MOR@ 
expression:(+ wnum_linea, 1)
evaluates to 31 
let wnum_linea = 31 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to CNR2@13 DE 48@@M03021@04865@04865@27/5@2/0@33@3@14@01/08/2008@1735@                                                                                                                                                                                        
let cadnoec = CNR2@13 DE 48@@M03021@04865@04865@27/5@2/0@33@3@14@01/08/2008@1735@                                                                                                                                                                                        
expression:(+ wnum_linea, 1)
evaluates to 32 
let wnum_linea = 32 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@10046.40@10046.40@5775.99@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@10046.40@10046.40@5775.99@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 33 
let wnum_linea = 33 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@10046.40@@@10046.40@0.00@@@@@@@@@@ 
let cadenak = CNP@10046.40@@@10046.40@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 34 
let wnum_linea = 34 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 4168.50 ,  xc1 = 01 ,  wnum_linea = 34 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4168.50 
let ximp_gra = 4168.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4168.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4168.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 35 
let wnum_linea = 35 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 35 
procedure genlinsatn returns 35 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 35 
let wnum_linea = 35 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 35 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 36 
let wnum_linea = 36 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 36 
procedure genlinsatn returns 36 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 36 
let wnum_linea = 36 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 14.07 ,  xc1 = 05 ,  wnum_linea = 36 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Antiguedad ; 
let xn_concepto = Compensacion por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 14.07 
let ximp_gra = 14.07 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@005@Compensacion por Antiguedad@14.07@0.00 
let xcadenanoi = NPD@@038@005@Compensacion por Antiguedad@14.07@0.00 
expression:(+ wnum_linea, 1)
evaluates to 37 
let wnum_linea = 37 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 37 
procedure genlinsatn returns 37 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 37 
let wnum_linea = 37 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 142.50 ,  xc1 = 06 ,  wnum_linea = 37 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Quinquenios ; 
let xn_concepto = Quinquenios 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 142.50 
let ximp_gra = 142.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@006@Quinquenios@142.50@0.00 
let xcadenanoi = NPD@@038@006@Quinquenios@142.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 38 
let wnum_linea = 38 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 38 
procedure genlinsatn returns 38 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 38 
let wnum_linea = 38 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 1930.42 ,  xc1 = 07 ,  wnum_linea = 38 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Turno Opcional ; 
let xn_concepto = Turno Opcional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1930.42 
let ximp_gra = 1930.42 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@007@Turno Opcional@1930.42@0.00 
let xcadenanoi = NPD@@038@007@Turno Opcional@1930.42@0.00 
expression:(+ wnum_linea, 1)
evaluates to 39 
let wnum_linea = 39 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 39 
procedure genlinsatn returns 39 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 39 
let wnum_linea = 39 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 39 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 40 
let wnum_linea = 40 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 40 
procedure genlinsatn returns 40 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 40 
let wnum_linea = 40 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 40 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 41 
let wnum_linea = 41 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 41 
procedure genlinsatn returns 41 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 41 
let wnum_linea = 41 
expression:(= wp9, "P")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 1855.00 ,  xc1 = 35 ,  wnum_linea = 41 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1855.00 
let ximp_gra = 1855.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1855.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1855.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 42 
let wnum_linea = 42 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 42 
procedure genlinsatn returns 42 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 42 
let wnum_linea = 42 
expression:(= wp10, "P")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 42 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 43 
let wnum_linea = 43 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 43 
procedure genlinsatn returns 43 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 43 
let wnum_linea = 43 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@4350.66@1425.33 
let cadenaq = CND@4350.66@1425.33 
expression:(+ wnum_linea, 1)
evaluates to 44 
let wnum_linea = 44 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 31.28 ,  xc1 = 1S ,  wnum_linea = 44 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 31.28 
let ximp_exe = 31.28 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@31.28 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@31.28 
expression:(+ wnum_linea, 1)
evaluates to 45 
let wnum_linea = 45 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 45 
procedure genlinsatn returns 45 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 45 
let wnum_linea = 45 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 383.15 ,  xc1 = 4S ,  wnum_linea = 45 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 383.15 
let ximp_exe = 383.15 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@383.15 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@383.15 
expression:(+ wnum_linea, 1)
evaluates to 46 
let wnum_linea = 46 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 46 
procedure genlinsatn returns 46 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 46 
let wnum_linea = 46 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 1425.33 ,  xc1 = 53 ,  wnum_linea = 46 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1425.33 
let ximp_exe = 1425.33 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1425.33 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1425.33 
expression:(+ wnum_linea, 1)
evaluates to 47 
let wnum_linea = 47 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 47 
procedure genlinsatn returns 47 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 47 
let wnum_linea = 47 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 62.74 ,  xc1 = 54 ,  wnum_linea = 47 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 019 ; 0 ; Cuota sindical Local ; 
let xn_concepto = Cuota sindical Local 
let xgrav = 0 
let xtip_perc = 019 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 62.74 
let ximp_exe = 62.74 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@019@054@Cuota sindical Local@62.74 
let xcadenanoi = NDD@019@054@Cuota sindical Local@62.74 
expression:(+ wnum_linea, 1)
evaluates to 48 
let wnum_linea = 48 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 48 
procedure genlinsatn returns 48 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 48 
let wnum_linea = 48 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 1731.58 ,  xc1 = 60 ,  wnum_linea = 48 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Prestamo Personal ; 
let xn_concepto = Prestamo Personal 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1731.58 
let ximp_exe = 1731.58 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@060@Prestamo Personal@1731.58 
let xcadenanoi = NDD@004@060@Prestamo Personal@1731.58 
expression:(+ wnum_linea, 1)
evaluates to 49 
let wnum_linea = 49 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 49 
procedure genlinsatn returns 49 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 49 
let wnum_linea = 49 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 81.48 ,  xc1 = 61 ,  wnum_linea = 49 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Comision de Auxilio ; 
let xn_concepto = Comision de Auxilio 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 81.48 
let ximp_exe = 81.48 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@061@Comision de Auxilio@81.48 
let xcadenanoi = NDD@004@061@Comision de Auxilio@81.48 
expression:(+ wnum_linea, 1)
evaluates to 50 
let wnum_linea = 50 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 50 
procedure genlinsatn returns 50 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 50 
let wnum_linea = 50 
expression:(= wp16, "D")
evaluates to t 
expression:(and (<> wi16, 0), (= flg16, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 116.72 ,  xc1 = 65 ,  wnum_linea = 50 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 116.72 
let ximp_exe = 116.72 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@116.72 
let xcadenanoi = NDD@004@065@Seguro Institucional@116.72 
expression:(+ wnum_linea, 1)
evaluates to 51 
let wnum_linea = 51 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 51 
procedure genlinsatn returns 51 

expression:(<procedure> genlinsatn, wemp, wp16, wi16, wc16, wnum_linea, wid_empresa)
evaluates to 51 
let wnum_linea = 51 
expression:(= wp17, "D")
evaluates to t 
expression:(and (<> wi17, 0), (= flg17, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 3.95 ,  xc1 = 66 ,  wnum_linea = 51 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Colectivo de Retiro ; 
let xn_concepto = Seguro Colectivo de Retiro 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 3.95 
let ximp_exe = 3.95 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@066@Seguro Colectivo de Retiro@3.95 
let xcadenanoi = NDD@004@066@Seguro Colectivo de Retiro@3.95 
expression:(+ wnum_linea, 1)
evaluates to 52 
let wnum_linea = 52 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 52 
procedure genlinsatn returns 52 

expression:(<procedure> genlinsatn, wemp, wp17, wi17, wc17, wnum_linea, wid_empresa)
evaluates to 52 
let wnum_linea = 52 
expression:(= wp18, "D")
evaluates to t 
expression:(and (<> wi18, 0), (= flg18, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 286.53 ,  xc1 = 77 ,  wnum_linea = 52 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 018 ; 0 ; Fondo de Ahorro Capitalizable ; 
let xn_concepto = Fondo de Ahorro Capitalizable 
let xgrav = 0 
let xtip_perc = 018 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 286.53 
let ximp_exe = 286.53 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@018@077@Fondo de Ahorro Capitalizable@286.53 
let xcadenanoi = NDD@018@077@Fondo de Ahorro Capitalizable@286.53 
expression:(+ wnum_linea, 1)
evaluates to 53 
let wnum_linea = 53 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 53 
procedure genlinsatn returns 53 

expression:(<procedure> genlinsatn, wemp, wp18, wi18, wc18, wnum_linea, wid_empresa)
evaluates to 53 
let wnum_linea = 53 
expression:(= wp19, "D")
evaluates to t 
expression:(and (<> wi19, 0), (= flg19, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 1315.00 ,  xc1 = ET ,  wnum_linea = 53 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Credito etesa ; 
let xn_concepto = Credito etesa 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1315.00 
let ximp_exe = 1315.00 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0ET@Credito etesa@1315.00 
let xcadenanoi = NDD@004@0ET@Credito etesa@1315.00 
expression:(+ wnum_linea, 1)
evaluates to 54 
let wnum_linea = 54 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 54 
procedure genlinsatn returns 54 

expression:(<procedure> genlinsatn, wemp, wp19, wi19, wc19, wnum_linea, wid_empresa)
evaluates to 54 
let wnum_linea = 54 
expression:(= wp20, "D")
evaluates to t 
expression:(and (<> wi20, 0), (= flg20, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 88.00 ,  xc1 = PP ,  wnum_linea = 54 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Previsora Plenitud ; 
let xn_concepto = Previsora Plenitud 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 88.00 
let ximp_exe = 88.00 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0PP@Previsora Plenitud@88.00 
let xcadenanoi = NDD@004@0PP@Previsora Plenitud@88.00 
expression:(+ wnum_linea, 1)
evaluates to 55 
let wnum_linea = 55 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 55 
procedure genlinsatn returns 55 

expression:(<procedure> genlinsatn, wemp, wp20, wi20, wc20, wnum_linea, wid_empresa)
evaluates to 55 
let wnum_linea = 55 
expression:(= wp21, "D")
evaluates to t 
expression:(and (<> wi21, 0), (= flg21, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 172.03 ,  xc1 = S7 ,  wnum_linea = 55 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 172.03 
let ximp_exe = 172.03 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@172.03 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@172.03 
expression:(+ wnum_linea, 1)
evaluates to 56 
let wnum_linea = 56 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 56 
procedure genlinsatn returns 56 

expression:(<procedure> genlinsatn, wemp, wp21, wi21, wc21, wnum_linea, wid_empresa)
evaluates to 56 
let wnum_linea = 56 
expression:(= wp22, "D")
evaluates to t 
expression:(and (<> wi22, 0), (= flg22, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 39.10 ,  xc1 = S8 ,  wnum_linea = 56 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 39.10 
let ximp_exe = 39.10 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@39.10 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@39.10 
expression:(+ wnum_linea, 1)
evaluates to 57 
let wnum_linea = 57 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 57 
procedure genlinsatn returns 57 

expression:(<procedure> genlinsatn, wemp, wp22, wi22, wc22, wnum_linea, wid_empresa)
evaluates to 57 
let wnum_linea = 57 
expression:(= wp23, "D")
evaluates to t 
expression:(and (<> wi23, 0), (= flg23, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 188183 ,  xp1 = D ,  xi1 = 39.10 ,  xc1 = S9 ,  wnum_linea = 57 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 39.10 
let ximp_exe = 39.10 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@39.10 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@39.10 
expression:(+ wnum_linea, 1)
evaluates to 58 
let wnum_linea = 58 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 58 
procedure genlinsatn returns 58 

expression:(<procedure> genlinsatn, wemp, wp23, wi23, wc23, wnum_linea, wid_empresa)
evaluates to 58 
let wnum_linea = 58 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 59 
let wnum_linea = 59 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 4 
let w_cont = 4 
select cursor iteration.
select cursor returns 01 , 204660 , 5310478 , $143.83 , $2.82 , $146.65 , REGALADO CAMACHO JAQUELINE , BNMX ,  , 15 , 1502140200 , 10000 , M03018 , P  , 05 , $146.65 , D  , 53 , $2.82 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , RECJ670306MDFGMQ03 , 80926794506 , RECJ670306GL4 , REGALADO CAMACHO JAQUELINE , APOYO ADMINISTRATIVO EN SALUD - A8 , DIRECCION C M F , 1628 , 31 , 2 , 25 , 15000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 4 204660 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 4 204660 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324314 
let wnum_cons2 = 2324314 
expression:wnum_cons2
evaluates to 2324314 
let wnum_cons = 2324314 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to t 
expression:wi2
evaluates to $2.82 
let wispt = $2.82 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 0.00 
let wimporte = 0.00 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324314@2022-07-22T17:57:44@99@146.65@2.82@MXN@@143.83@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324314@2022-07-22T17:57:44@99@146.65@2.82@MXN@@143.83@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 60 
let wnum_linea = 60 
expression:wnum_linea
evaluates to 60 
let wnum_lini = 60 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 61 
let wnum_linea = 61 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63715000@@@ 
let cadenac2 = CNE@603@@63715000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 62 
let wnum_linea = 62 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to RECJ670306GL4 ; RECJ670306MDFGMQ03 ; 80926794506 ; 
let wnumero_ss_bmex = 80926794506 
let wcurp_bmex = RECJ670306MDFGMQ03 
let wid_legal_bmex = RECJ670306GL4 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 63 
let wnum_linea = 63 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@RECJ670306GL4@REGALADO CAMACHO JAQUELINE@P01 
let cadenae02 = RC@RECJ670306GL4@REGALADO CAMACHO JAQUELINE@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 1.92 ; 
let wporcent = 1.92 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/12/2021 ; 15/12/2021 ; 2 ; 8 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 8 
let wid_zona = 2 
let wfec_imputacion = 15/12/2021 
let wfecha_ini_ts = 01/12/2021 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to MEX ; 
let westado_c = MEX 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 000000000851336923 ; BNTE ; TD ; 
let wforpago = TD 
let wbanco = BNTE 
let wcuenta = 000000000851336923 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to f 
let desc_err = NOE DatosPago04 
expression:
  (select (count *)
    from c_banco
    where (= id_banco, wbanco))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaTD 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 072 ; 
let wbanco_c = 072 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to t 
expression:(substring wcuenta, 6, (- (<procedure> length, wcuenta), 5))
evaluates to 0000851336923 
let wcuenta = 0000851336923 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to t 
expression:(substring wcuenta, 5, (- (<procedure> length, wcuenta), 4))
evaluates to 851336923 
let wcuenta = 851336923 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 10, "0")
evaluates to 0851336923 
let wcuenta = 0851336923 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -BNTE-0851336923 
let desc_err = NOE Arma-TD    -BNTE-0851336923 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 64 
let wnum_linea = 64 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 65 
let wnum_linea = 65 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@146.65@146.65@2.82@@                                                                                                                                                                                 
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@146.65@146.65@2.82@@                                                                                                                                                                                 
expression:(+ wnum_linea, 1)
evaluates to 66 
let wnum_linea = 66 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@146.65@@@146.65@0.00@@@@@@@@@@ 
let cadenak = CNP@146.65@@@146.65@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 67 
let wnum_linea = 67 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 204660 ,  xp1 = P ,  xi1 = 146.65 ,  xc1 = 05 ,  wnum_linea = 67 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Antiguedad ; 
let xn_concepto = Compensacion por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 146.65 
let ximp_gra = 146.65 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@005@Compensacion por Antiguedad@146.65@0.00 
let xcadenanoi = NPD@@038@005@Compensacion por Antiguedad@146.65@0.00 
expression:(+ wnum_linea, 1)
evaluates to 68 
let wnum_linea = 68 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 68 
procedure genlinsatn returns 68 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 68 
let wnum_linea = 68 
expression:(= wp2, "P")
evaluates to f 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@0.00@2.82 
let cadenaq = CND@0.00@2.82 
expression:(+ wnum_linea, 1)
evaluates to 69 
let wnum_linea = 69 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 204660 ,  xp1 = D ,  xi1 = 2.82 ,  xc1 = 53 ,  wnum_linea = 69 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 2.82 
let ximp_exe = 2.82 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@2.82 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@2.82 
expression:(+ wnum_linea, 1)
evaluates to 70 
let wnum_linea = 70 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 70 
procedure genlinsatn returns 70 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 70 
let wnum_linea = 70 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 71 
let wnum_linea = 71 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 5 
let w_cont = 5 
select cursor iteration.
select cursor returns 01 , 207734 , 5263205 , $11044.97 , $2842.20 , $13887.17 , LOPEZ RAMIREZ CRISTINA GUADALUPE , BNMX ,  , 09 , 4702110102 , 09511 , M02082 , P  , 01 , $5167.50 , P  , 02 , $387.50 , P                    , 04 , $516.75 , P  , 05 , $384.51 , P  , 06 , $142.50 , P  , 10 , $542.50 , D  , 1S , $31.06 , P  , 20 , $1800.00 , P                    , 33 , $55.91 , P  , 35 , $2748.00 , P  , 48 , $2142.00 , D  , 4S , $380.44 , D  , 53 , $1861.24 , D  , 54 , $83.28 , D  , 61 , $81.48 , D  , 65 , $144.69 , D  , 66 , $3.95 , D  , D5 , $7.61 , D  , S7 , $170.81 , D  , S8 , $38.82 , D  , S9 , $38.82 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , LORC641205MDFPMR05 , 80896457530 , LORC6412056HA , LOPEZ RAMIREZ CRISTINA GUADALUPE , AUXILIAR DE ENFERMERIA "B" , CONSULTA EXTERNA , 1619 , 31 , 0 , 22 , 50002 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 5 207734 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 5 207734 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324315 
let wnum_cons2 = 2324315 
expression:wnum_cons2
evaluates to 2324315 
let wnum_cons = 2324315 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to f 
expression:(= wc11, "53")
evaluates to f 
expression:(= wc12, "53")
evaluates to f 
expression:(= wc13, "53")
evaluates to t 
expression:wi13
evaluates to $1861.24 
let wispt = $1861.24 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 980.96 
let wimporte = 980.96 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324315@2022-07-22T17:57:44@99@13887.17@2842.20@MXN@@11044.97@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324315@2022-07-22T17:57:44@99@13887.17@2842.20@MXN@@11044.97@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 72 
let wnum_linea = 72 
expression:wnum_linea
evaluates to 72 
let wnum_lini = 72 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 73 
let wnum_linea = 73 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63750002@@@ 
let cadenac2 = CNE@603@@63750002@@@ 
expression:(+ wnum_linea, 1)
evaluates to 74 
let wnum_linea = 74 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to LORC6412058W5 ; LORC641205MDFPMR05 ; 80896457530 ; 
let wnumero_ss_bmex = 80896457530 
let wcurp_bmex = LORC641205MDFPMR05 
let wid_legal_bmex = LORC6412058W5 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 75 
let wnum_linea = 75 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@LORC6412056HA@LOPEZ RAMIREZ CRISTINA GUADALUPE@P01 
let cadenae02 = RC@LORC6412056HA@LOPEZ RAMIREZ CRISTINA GUADALUPE@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/02/2022 ; 15/02/2022 ; 2 ; 5 ; 03 ; 
let wid_nivel_wid_grupo_grado_nivel = 03 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 2 
let wfec_imputacion = 15/02/2022 
let wfecha_ini_ts = 01/02/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to A SOLICITUD DEL AREA ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = A SOLICITUD DEL AREA 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 76 
let wnum_linea = 76 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 77 
let wnum_linea = 77 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@13887.17@13887.17@2842.20@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@13887.17@13887.17@2842.20@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 78 
let wnum_linea = 78 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@13887.17@@@13887.17@0.00@@@@@@@@@@ 
let cadenak = CNP@13887.17@@@13887.17@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 79 
let wnum_linea = 79 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 5167.50 ,  xc1 = 01 ,  wnum_linea = 79 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 5167.50 
let ximp_gra = 5167.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@5167.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@5167.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 80 
let wnum_linea = 80 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 80 
procedure genlinsatn returns 80 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 80 
let wnum_linea = 80 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 80 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 81 
let wnum_linea = 81 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 81 
procedure genlinsatn returns 81 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 81 
let wnum_linea = 81 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 516.75 ,  xc1 = 04 ,  wnum_linea = 81 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 516.75 
let ximp_gra = 516.75 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@516.75@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@516.75@0.00 
expression:(+ wnum_linea, 1)
evaluates to 82 
let wnum_linea = 82 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 82 
procedure genlinsatn returns 82 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 82 
let wnum_linea = 82 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 384.51 ,  xc1 = 05 ,  wnum_linea = 82 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Antiguedad ; 
let xn_concepto = Compensacion por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 384.51 
let ximp_gra = 384.51 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@005@Compensacion por Antiguedad@384.51@0.00 
let xcadenanoi = NPD@@038@005@Compensacion por Antiguedad@384.51@0.00 
expression:(+ wnum_linea, 1)
evaluates to 83 
let wnum_linea = 83 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 83 
procedure genlinsatn returns 83 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 83 
let wnum_linea = 83 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 142.50 ,  xc1 = 06 ,  wnum_linea = 83 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Quinquenios ; 
let xn_concepto = Quinquenios 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 142.50 
let ximp_gra = 142.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@006@Quinquenios@142.50@0.00 
let xcadenanoi = NPD@@038@006@Quinquenios@142.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 84 
let wnum_linea = 84 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 84 
procedure genlinsatn returns 84 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 84 
let wnum_linea = 84 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 84 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 85 
let wnum_linea = 85 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 85 
procedure genlinsatn returns 85 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 85 
let wnum_linea = 85 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 1800.00 ,  xc1 = 20 ,  wnum_linea = 85 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 035 ; 0 ; Ayudas de Lentes ; 
let xn_concepto = Ayudas de Lentes 
let xgrav = 0 
let xtip_perc = 035 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1800.00 
let ximp_exe = 1800.00 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@035@020@Ayudas de Lentes@0.00@1800.00 
let xcadenanoi = NPD@@035@020@Ayudas de Lentes@0.00@1800.00 
expression:(+ wnum_linea, 1)
evaluates to 86 
let wnum_linea = 86 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 86 
procedure genlinsatn returns 86 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 86 
let wnum_linea = 86 
expression:(= wp9, "P")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 86 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 87 
let wnum_linea = 87 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 87 
procedure genlinsatn returns 87 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 87 
let wnum_linea = 87 
expression:(= wp10, "P")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 2748.00 ,  xc1 = 35 ,  wnum_linea = 87 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2748.00 
let ximp_gra = 2748.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@2748.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@2748.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 88 
let wnum_linea = 88 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 88 
procedure genlinsatn returns 88 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 88 
let wnum_linea = 88 
expression:(= wp11, "P")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = P ,  xi1 = 2142.00 ,  xc1 = 48 ,  wnum_linea = 88 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2142.00 
let ximp_gra = 2142.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@2142.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@2142.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 89 
let wnum_linea = 89 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 89 
procedure genlinsatn returns 89 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 89 
let wnum_linea = 89 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@980.96@1861.24 
let cadenaq = CND@980.96@1861.24 
expression:(+ wnum_linea, 1)
evaluates to 90 
let wnum_linea = 90 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 31.06 ,  xc1 = 1S ,  wnum_linea = 90 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 31.06 
let ximp_exe = 31.06 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@31.06 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@31.06 
expression:(+ wnum_linea, 1)
evaluates to 91 
let wnum_linea = 91 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 91 
procedure genlinsatn returns 91 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 91 
let wnum_linea = 91 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 380.44 ,  xc1 = 4S ,  wnum_linea = 91 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 380.44 
let ximp_exe = 380.44 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@380.44 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@380.44 
expression:(+ wnum_linea, 1)
evaluates to 92 
let wnum_linea = 92 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 92 
procedure genlinsatn returns 92 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 92 
let wnum_linea = 92 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 1861.24 ,  xc1 = 53 ,  wnum_linea = 92 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1861.24 
let ximp_exe = 1861.24 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1861.24 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1861.24 
expression:(+ wnum_linea, 1)
evaluates to 93 
let wnum_linea = 93 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 93 
procedure genlinsatn returns 93 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 93 
let wnum_linea = 93 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 83.28 ,  xc1 = 54 ,  wnum_linea = 93 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 019 ; 0 ; Cuota sindical Local ; 
let xn_concepto = Cuota sindical Local 
let xgrav = 0 
let xtip_perc = 019 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 83.28 
let ximp_exe = 83.28 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@019@054@Cuota sindical Local@83.28 
let xcadenanoi = NDD@019@054@Cuota sindical Local@83.28 
expression:(+ wnum_linea, 1)
evaluates to 94 
let wnum_linea = 94 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 94 
procedure genlinsatn returns 94 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 94 
let wnum_linea = 94 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 81.48 ,  xc1 = 61 ,  wnum_linea = 94 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Comision de Auxilio ; 
let xn_concepto = Comision de Auxilio 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 81.48 
let ximp_exe = 81.48 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@061@Comision de Auxilio@81.48 
let xcadenanoi = NDD@004@061@Comision de Auxilio@81.48 
expression:(+ wnum_linea, 1)
evaluates to 95 
let wnum_linea = 95 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 95 
procedure genlinsatn returns 95 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 95 
let wnum_linea = 95 
expression:(= wp16, "D")
evaluates to t 
expression:(and (<> wi16, 0), (= flg16, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 144.69 ,  xc1 = 65 ,  wnum_linea = 95 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 144.69 
let ximp_exe = 144.69 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@144.69 
let xcadenanoi = NDD@004@065@Seguro Institucional@144.69 
expression:(+ wnum_linea, 1)
evaluates to 96 
let wnum_linea = 96 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 96 
procedure genlinsatn returns 96 

expression:(<procedure> genlinsatn, wemp, wp16, wi16, wc16, wnum_linea, wid_empresa)
evaluates to 96 
let wnum_linea = 96 
expression:(= wp17, "D")
evaluates to t 
expression:(and (<> wi17, 0), (= flg17, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 3.95 ,  xc1 = 66 ,  wnum_linea = 96 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Colectivo de Retiro ; 
let xn_concepto = Seguro Colectivo de Retiro 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 3.95 
let ximp_exe = 3.95 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@066@Seguro Colectivo de Retiro@3.95 
let xcadenanoi = NDD@004@066@Seguro Colectivo de Retiro@3.95 
expression:(+ wnum_linea, 1)
evaluates to 97 
let wnum_linea = 97 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 97 
procedure genlinsatn returns 97 

expression:(<procedure> genlinsatn, wemp, wp17, wi17, wc17, wnum_linea, wid_empresa)
evaluates to 97 
let wnum_linea = 97 
expression:(= wp18, "D")
evaluates to t 
expression:(and (<> wi18, 0), (= flg18, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 7.61 ,  xc1 = D5 ,  wnum_linea = 97 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 7.61 
let ximp_exe = 7.61 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@7.61 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@7.61 
expression:(+ wnum_linea, 1)
evaluates to 98 
let wnum_linea = 98 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 98 
procedure genlinsatn returns 98 

expression:(<procedure> genlinsatn, wemp, wp18, wi18, wc18, wnum_linea, wid_empresa)
evaluates to 98 
let wnum_linea = 98 
expression:(= wp19, "D")
evaluates to t 
expression:(and (<> wi19, 0), (= flg19, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 170.81 ,  xc1 = S7 ,  wnum_linea = 98 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 170.81 
let ximp_exe = 170.81 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@170.81 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@170.81 
expression:(+ wnum_linea, 1)
evaluates to 99 
let wnum_linea = 99 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 99 
procedure genlinsatn returns 99 

expression:(<procedure> genlinsatn, wemp, wp19, wi19, wc19, wnum_linea, wid_empresa)
evaluates to 99 
let wnum_linea = 99 
expression:(= wp20, "D")
evaluates to t 
expression:(and (<> wi20, 0), (= flg20, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 38.82 ,  xc1 = S8 ,  wnum_linea = 99 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 38.82 
let ximp_exe = 38.82 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@38.82 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@38.82 
expression:(+ wnum_linea, 1)
evaluates to 100 
let wnum_linea = 100 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 100 
procedure genlinsatn returns 100 

expression:(<procedure> genlinsatn, wemp, wp20, wi20, wc20, wnum_linea, wid_empresa)
evaluates to 100 
let wnum_linea = 100 
expression:(= wp21, "D")
evaluates to t 
expression:(and (<> wi21, 0), (= flg21, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 207734 ,  xp1 = D ,  xi1 = 38.82 ,  xc1 = S9 ,  wnum_linea = 100 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 38.82 
let ximp_exe = 38.82 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@38.82 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@38.82 
expression:(+ wnum_linea, 1)
evaluates to 101 
let wnum_linea = 101 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 101 
procedure genlinsatn returns 101 

expression:(<procedure> genlinsatn, wemp, wp21, wi21, wc21, wnum_linea, wid_empresa)
evaluates to 101 
let wnum_linea = 101 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 102 
let wnum_linea = 102 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 6 
let w_cont = 6 
select cursor iteration.
select cursor returns 01 , 210854 , 5319544 , $45469.44 , $16930.92 , $62400.36 , SEICA CASTRO ELENA DEL SOCORRO , SR ,  , 25 , 2504000000 , RB010 , AA00300 , P  , 23 , $17400.36 , P  , 27 , $45000.00 , D                    , 53 , $16930.92 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , SECE471220MSLCSL03 , 80886839861 , SECE471220AW0 , SEICA CASTRO ELENA DEL SOCORRO , ADMINISTRATIVO ESPECIALIZADO , DEPTO DE AFILIACION Y PREST ECON , 1581 , 30 , 3 , 26 , 25000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 6 210854 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 6 210854 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324316 
let wnum_cons2 = 2324316 
expression:wnum_cons2
evaluates to 2324316 
let wnum_cons = 2324316 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to t 
expression:wi3
evaluates to $16930.92 
let wispt = $16930.92 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 0.00 
let wimporte = 0.00 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324316@2022-07-22T17:57:44@99@62400.36@16930.92@MXN@@45469.44@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324316@2022-07-22T17:57:44@99@62400.36@16930.92@MXN@@45469.44@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 103 
let wnum_linea = 103 
expression:wnum_linea
evaluates to 103 
let wnum_lini = 103 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 104 
let wnum_linea = 104 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63725000@@@ 
let cadenac2 = CNE@603@@63725000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 105 
let wnum_linea = 105 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to SECE471220QW4 ; SECE471220MSLCSL03 ; 80886839861 ; 
let wnumero_ss_bmex = 80886839861 
let wcurp_bmex = SECE471220MSLCSL03 
let wid_legal_bmex = SECE471220QW4 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 106 
let wnum_linea = 106 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@SECE471220AW0@SEICA CASTRO ELENA DEL SOCORRO@P01 
let cadenae02 = RC@SECE471220AW0@SEICA CASTRO ELENA DEL SOCORRO@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 34.00 ; 
let wporcent = 34.00 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/01/2022 ; 31/01/2022 ; 2 ; 0 ; 02 ; 
let wid_nivel_wid_grupo_grado_nivel = 02 
let wid_sub_nivel_wid_integracion = 0 
let wid_zona = 2 
let wfec_imputacion = 31/01/2022 
let wfecha_ini_ts = 16/01/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to SIN ; 
let westado_c = SIN 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 0239360937 ; SR ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = SR 
let wcuenta = 0239360937 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 107 
let wnum_linea = 107 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 108 
let wnum_linea = 108 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@62400.36@62400.36@16930.92@@                                                                                                                                                                         
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@62400.36@62400.36@16930.92@@                                                                                                                                                                         
expression:(+ wnum_linea, 1)
evaluates to 109 
let wnum_linea = 109 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@62400.36@@@62400.36@0.00@@@@@@@@@@ 
let cadenak = CNP@62400.36@@@62400.36@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 110 
let wnum_linea = 110 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 210854 ,  xp1 = P ,  xi1 = 17400.36 ,  xc1 = 23 ,  wnum_linea = 110 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Premio por Antiguedad ; 
let xn_concepto = Premio por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 17400.36 
let ximp_gra = 17400.36 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@023@Premio por Antiguedad@17400.36@0.00 
let xcadenanoi = NPD@@038@023@Premio por Antiguedad@17400.36@0.00 
expression:(+ wnum_linea, 1)
evaluates to 111 
let wnum_linea = 111 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 111 
procedure genlinsatn returns 111 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 111 
let wnum_linea = 111 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 210854 ,  xp1 = P ,  xi1 = 45000.00 ,  xc1 = 27 ,  wnum_linea = 111 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Premio Moneda de Oro ; 
let xn_concepto = Premio Moneda de Oro 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 45000.00 
let ximp_gra = 45000.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@027@Premio Moneda de Oro@45000.00@0.00 
let xcadenanoi = NPD@@038@027@Premio Moneda de Oro@45000.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 112 
let wnum_linea = 112 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 112 
procedure genlinsatn returns 112 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 112 
let wnum_linea = 112 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@0.00@16930.92 
let cadenaq = CND@0.00@16930.92 
expression:(+ wnum_linea, 1)
evaluates to 113 
let wnum_linea = 113 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 210854 ,  xp1 = D ,  xi1 = 16930.92 ,  xc1 = 53 ,  wnum_linea = 113 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 16930.92 
let ximp_exe = 16930.92 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@16930.92 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@16930.92 
expression:(+ wnum_linea, 1)
evaluates to 114 
let wnum_linea = 114 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 114 
procedure genlinsatn returns 114 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 114 
let wnum_linea = 114 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 115 
let wnum_linea = 115 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 7 
let w_cont = 7 
select cursor iteration.
select cursor returns 01 , 213910 , 5281399 , $986.94 , $5.19 , $992.13 , BENITEZ VILLARREAL GABRIELA JUDITH , SR ,  , 25 , 2513000000 , R0100 , HE00200 , P  , 18 , $992.13 , P  , Y3 , $0.00 , D                    , 53 , $5.19 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , BEVG720331MSLNLB09 , 80947297851 , BEVG720331LJ5 , BENITEZ VILLARREAL GABRIELA JUDITH , RECEPTOR PRODUCTOS VENTA , U AT N AL DERECHOAHAB Y COM SOC , 1543 , 29 , 7 , 4 , 25000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 7 213910 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 7 213910 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324317 
let wnum_cons2 = 2324317 
expression:wnum_cons2
evaluates to 2324317 
let wnum_cons = 2324317 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to t 
expression:wi3
evaluates to $5.19 
let wispt = $5.19 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 0.00 
let wimporte = 0.00 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to t 
let flg1 = 3 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324317@2022-07-22T17:57:44@99@992.13@5.19@MXN@@986.94@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324317@2022-07-22T17:57:44@99@992.13@5.19@MXN@@986.94@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 116 
let wnum_linea = 116 
expression:wnum_linea
evaluates to 116 
let wnum_lini = 116 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 117 
let wnum_linea = 117 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63725000@@@ 
let cadenac2 = CNE@603@@63725000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 118 
let wnum_linea = 118 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to BEVG720331DE6 ; BEVG720331MSLNLB09 ; 80947297851 ; 
let wnumero_ss_bmex = 80947297851 
let wcurp_bmex = BEVG720331MSLNLB09 
let wid_legal_bmex = BEVG720331DE6 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 119 
let wnum_linea = 119 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@BEVG720331LJ5@BENITEZ VILLARREAL GABRIELA JUDITH@P01 
let cadenae02 = RC@BEVG720331LJ5@BENITEZ VILLARREAL GABRIELA JUDITH@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 6.40 ; 
let wporcent = 6.40 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/12/2021 ; 15/12/2021 ; 2 ; 0 ; 02 ; 
let wid_nivel_wid_grupo_grado_nivel = 02 
let wid_sub_nivel_wid_integracion = 0 
let wid_zona = 2 
let wfec_imputacion = 15/12/2021 
let wfecha_ini_ts = 01/12/2021 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to SIN ; 
let westado_c = SIN 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to INCORPORA A DEBITO ; SR ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = SR 
let wcuenta = INCORPORA A DEBITO 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 120 
let wnum_linea = 120 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 121 
let wnum_linea = 121 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@992.13@992.13@5.19@@                                                                                                                                                                                 
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@992.13@992.13@5.19@@                                                                                                                                                                                 
expression:(+ wnum_linea, 1)
evaluates to 122 
let wnum_linea = 122 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@992.13@@@992.13@0.00@@@@@@@@@@ 
let cadenak = CNP@992.13@@@992.13@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 123 
let wnum_linea = 123 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to f 
expression:(= flg1, 3)
evaluates to t 

execute function m4prod.genlinsatne[procid=39148] ( xemp = 213910 ,  xp1 = P ,  xi1 = 992.13 ,  xc1 = 18 ,  xi2 = 0.00 ,  xc2 = Y3 ,  wnum_linea = 123 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 021 ; -1 ; Prima Vacacional ; 
let xn_concepto = Prima Vacacional 
let xgrav = -1 
let xtip_perc = 021 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 992.13 
let ximp_gra = 992.13 
expression:xi2
evaluates to 0.00 
let ximp_exe = 0.00 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@021@018@Prima Vacacional@992.13@0.00 
let xcadenanoi = NPD@@021@018@Prima Vacacional@992.13@0.00 
expression:(+ wnum_linea, 1)
evaluates to 124 
let wnum_linea = 124 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 124 
procedure genlinsatne returns 124 

expression:(<procedure> genlinsatne, wemp, wp1, wi1, wc1, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 124 
let wnum_linea = 124 
let flg2 = 2 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to f 
expression:(= flg2, 3)
evaluates to f 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@0.00@5.19 
let cadenaq = CND@0.00@5.19 
expression:(+ wnum_linea, 1)
evaluates to 125 
let wnum_linea = 125 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 213910 ,  xp1 = D ,  xi1 = 5.19 ,  xc1 = 53 ,  wnum_linea = 125 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 5.19 
let ximp_exe = 5.19 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@5.19 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@5.19 
expression:(+ wnum_linea, 1)
evaluates to 126 
let wnum_linea = 126 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 126 
procedure genlinsatn returns 126 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 126 
let wnum_linea = 126 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 127 
let wnum_linea = 127 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 8 
let w_cont = 8 
select cursor iteration.
select cursor returns 01 , 294916 , 5271202 , $7726.66 , $5295.25 , $13021.91 , BADILLO VEGA MA. DEL CARMEN , BNTE ,  , 24 , 2402130200 , 17700 , M02034 , P  , 01 , $6033.50 , P  , 02 , $387.50 , P                    , 06 , $117.50 , P  , 10 , $542.50 , D  , 1S , $30.76 , P  , 33 , $55.91 , P  , 35 , $3329.50 , P  , 48 , $2555.50 , D                    , 4S , $376.75 , D  , 53 , $2060.90 , D  , 54 , $90.50 , D  , 61 , $81.48 , D  , 62 , $1845.30 , D  , 65 , $168.94 , D  , 66 , $3.95 , D  , 77 , $286.53 , D  , 86 , $8.50 , D  , D5 , $7.61 , D  , PP , $88.00 , D  , S7 , $169.15 , D  , S8 , $38.44 , D  , S9 , $38.44 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , BAVC700205MSPDGR07 , 80047003829 , BAVC700205V92 , BADILLO VEGA MA. DEL CARMEN , ENFERMERA ESPECIALISTA "A" , HOSPITALIZACION , 1035 , 19 , 10 , 10 , 24000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 8 294916 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 8 294916 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324318 
let wnum_cons2 = 2324318 
expression:wnum_cons2
evaluates to 2324318 
let wnum_cons = 2324318 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $2060.90 
let wispt = $2060.90 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 3234.35 
let wimporte = 3234.35 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324318@2022-07-22T17:57:44@99@13021.91@5295.25@MXN@@7726.66@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324318@2022-07-22T17:57:44@99@13021.91@5295.25@MXN@@7726.66@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 128 
let wnum_linea = 128 
expression:wnum_linea
evaluates to 128 
let wnum_lini = 128 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 129 
let wnum_linea = 129 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63724000@@@ 
let cadenac2 = CNE@603@@63724000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 130 
let wnum_linea = 130 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
exception : looking for handler
SQL error = -284 ISAM error = 0  error string =  = ""
exception : handler FOUND
expression:(|| (|| (|| (|| (|| "error en  ---> ", w_cont), " "), wemp), " "), error_num)
evaluates to error en  ---> 8 294916 -284 
procedure spm4_layoutsatn_pruebas_2022_mq returns error en  ---> 8 294916 -284 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_linea, 1)
evaluates to 131 
let wnum_linea = 131 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| (|| (|| (|| (|| (|| (|| "Error-", desc_err), ":"), error_num), "-emp:"), wemp), "-Cons:"), wnum_cons2));
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 132 
let wnum_linea = 132 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@BAVC700205V92@BADILLO VEGA MA. DEL CARMEN@P01 
let cadenae02 = RC@BAVC700205V92@BADILLO VEGA MA. DEL CARMEN@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/07/2022 ; 15/07/2022 ; 2 ; 8 ; 08 ; 
let wid_nivel_wid_grupo_grado_nivel = 08 
let wid_sub_nivel_wid_integracion = 8 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 01/07/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 16/09/2002 ; 02251 ; 02251 ; M02034 ;   ; 0.0000000000000000 ; 0.0000000000000000 ; 16/09/2002 ; 7243.0000 ; 0.0000 ; 90.5000 ; 
let wsindl = 90.5000 
let wsindn = 0.0000 
let wdiaantig = 7243.0000 
let wfec_alta = 16/09/2002 
let wcont_des_tot = 0.0000000000000000 
let wcon_pag = 0.0000000000000000 
let wfal_ret =   
let wi2puesto = M02034 
let wcen_trab = 02251 
let wcen_pago = 02251 
let wfec_alta_empleado = 16/09/2002 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to ENFERMERA ESPECIALISTA "A" ; 
let wd2puesto = ENFERMERA ESPECIALISTA "A" 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 16/09/2002 
let wfec_alta2 = 16/09/2002 
expression:(> wsindl, 0)
evaluates to t 
let wsindl_c = SÃ­ 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to SLP ; 
let westado_c = SLP 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 000000000496384237 ; BNTE ; TD ; 
let wforpago = TD 
let wbanco = BNTE 
let wcuenta = 000000000496384237 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to f 
let desc_err = NOE DatosPago04 
expression:
  (select (count *)
    from c_banco
    where (= id_banco, wbanco))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaTD 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 072 ; 
let wbanco_c = 072 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to t 
expression:(substring wcuenta, 6, (- (<procedure> length, wcuenta), 5))
evaluates to 0000496384237 
let wcuenta = 0000496384237 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to t 
expression:(substring wcuenta, 5, (- (<procedure> length, wcuenta), 4))
evaluates to 496384237 
let wcuenta = 496384237 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 10, "0")
evaluates to 0496384237 
let wcuenta = 0496384237 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 1034.7142857142857143 
let wsem_ant = 1034.7142857142857143 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P1034W 
let wantigf = P1034W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -BNTE-0496384237 
let desc_err = NOE Arma-TD    -BNTE-0496384237 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-07-01@2022-07-15@15@13021.91@5295.25@0.00@BAVC700205MSPDGR07@80047003829@2002-09-16@P1034W@01@Sï¿½@01@02@294916@ 
let cadnoea = CNR@O@2022-07-15@2022-07-01@2022-07-15@15@13021.91@5295.25@0.00@BAVC700205MSPDGR07@80047003829@2002-09-16@P1034W@01@Sï¿½@01@02@294916@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to HOSPITALIZACION@ENFERMERA ESPECIALISTA "A"@1@04@072@0496384237@@0.00@SLP@ 
let cadnoeb = HOSPITALIZACION@ENFERMERA ESPECIALISTA "A"@1@04@072@0496384237@@0.00@SLP@ 
expression:(+ wnum_linea, 1)
evaluates to 133 
let wnum_linea = 133 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to CNR2@0 DE 0@@M02034@02251@02251@08/8@2/0@19@10@10@16/09/2002@1035@                                                                                                                                                                                         
let cadnoec = CNR2@0 DE 0@@M02034@02251@02251@08/8@2/0@19@10@10@16/09/2002@1035@                                                                                                                                                                                         
expression:(+ wnum_linea, 1)
evaluates to 134 
let wnum_linea = 134 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@13021.91@13021.91@5295.25@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@13021.91@13021.91@5295.25@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 135 
let wnum_linea = 135 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@13021.91@@@13021.91@0.00@@@@@@@@@@ 
let cadenak = CNP@13021.91@@@13021.91@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 136 
let wnum_linea = 136 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 6033.50 ,  xc1 = 01 ,  wnum_linea = 136 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 6033.50 
let ximp_gra = 6033.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@6033.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@6033.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 137 
let wnum_linea = 137 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 137 
procedure genlinsatn returns 137 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 137 
let wnum_linea = 137 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 137 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 138 
let wnum_linea = 138 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 138 
procedure genlinsatn returns 138 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 138 
let wnum_linea = 138 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 117.50 ,  xc1 = 06 ,  wnum_linea = 138 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Quinquenios ; 
let xn_concepto = Quinquenios 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 117.50 
let ximp_gra = 117.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@006@Quinquenios@117.50@0.00 
let xcadenanoi = NPD@@038@006@Quinquenios@117.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 139 
let wnum_linea = 139 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 139 
procedure genlinsatn returns 139 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 139 
let wnum_linea = 139 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 139 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 140 
let wnum_linea = 140 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 140 
procedure genlinsatn returns 140 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 140 
let wnum_linea = 140 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 140 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 141 
let wnum_linea = 141 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 141 
procedure genlinsatn returns 141 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 141 
let wnum_linea = 141 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 3329.50 ,  xc1 = 35 ,  wnum_linea = 141 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3329.50 
let ximp_gra = 3329.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@3329.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@3329.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 142 
let wnum_linea = 142 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 142 
procedure genlinsatn returns 142 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 142 
let wnum_linea = 142 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = P ,  xi1 = 2555.50 ,  xc1 = 48 ,  wnum_linea = 142 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2555.50 
let ximp_gra = 2555.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@2555.50@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@2555.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 143 
let wnum_linea = 143 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 143 
procedure genlinsatn returns 143 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 143 
let wnum_linea = 143 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@3234.35@2060.90 
let cadenaq = CND@3234.35@2060.90 
expression:(+ wnum_linea, 1)
evaluates to 144 
let wnum_linea = 144 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 30.76 ,  xc1 = 1S ,  wnum_linea = 144 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 30.76 
let ximp_exe = 30.76 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@30.76 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@30.76 
expression:(+ wnum_linea, 1)
evaluates to 145 
let wnum_linea = 145 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 145 
procedure genlinsatn returns 145 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 145 
let wnum_linea = 145 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 376.75 ,  xc1 = 4S ,  wnum_linea = 145 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 376.75 
let ximp_exe = 376.75 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@376.75 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@376.75 
expression:(+ wnum_linea, 1)
evaluates to 146 
let wnum_linea = 146 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 146 
procedure genlinsatn returns 146 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 146 
let wnum_linea = 146 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 2060.90 ,  xc1 = 53 ,  wnum_linea = 146 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 2060.90 
let ximp_exe = 2060.90 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@2060.90 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@2060.90 
expression:(+ wnum_linea, 1)
evaluates to 147 
let wnum_linea = 147 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 147 
procedure genlinsatn returns 147 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 147 
let wnum_linea = 147 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 90.50 ,  xc1 = 54 ,  wnum_linea = 147 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 019 ; 0 ; Cuota sindical Local ; 
let xn_concepto = Cuota sindical Local 
let xgrav = 0 
let xtip_perc = 019 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 90.50 
let ximp_exe = 90.50 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@019@054@Cuota sindical Local@90.50 
let xcadenanoi = NDD@019@054@Cuota sindical Local@90.50 
expression:(+ wnum_linea, 1)
evaluates to 148 
let wnum_linea = 148 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 148 
procedure genlinsatn returns 148 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 148 
let wnum_linea = 148 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 81.48 ,  xc1 = 61 ,  wnum_linea = 148 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Comision de Auxilio ; 
let xn_concepto = Comision de Auxilio 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 81.48 
let ximp_exe = 81.48 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@061@Comision de Auxilio@81.48 
let xcadenanoi = NDD@004@061@Comision de Auxilio@81.48 
expression:(+ wnum_linea, 1)
evaluates to 149 
let wnum_linea = 149 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 149 
procedure genlinsatn returns 149 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 149 
let wnum_linea = 149 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 1845.30 ,  xc1 = 62 ,  wnum_linea = 149 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 010 ; 0 ; Credito FOVISSSTE ; 
let xn_concepto = Credito FOVISSSTE 
let xgrav = 0 
let xtip_perc = 010 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1845.30 
let ximp_exe = 1845.30 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@010@062@Credito FOVISSSTE@1845.30 
let xcadenanoi = NDD@010@062@Credito FOVISSSTE@1845.30 
expression:(+ wnum_linea, 1)
evaluates to 150 
let wnum_linea = 150 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 150 
procedure genlinsatn returns 150 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 150 
let wnum_linea = 150 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 168.94 ,  xc1 = 65 ,  wnum_linea = 150 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 168.94 
let ximp_exe = 168.94 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@168.94 
let xcadenanoi = NDD@004@065@Seguro Institucional@168.94 
expression:(+ wnum_linea, 1)
evaluates to 151 
let wnum_linea = 151 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 151 
procedure genlinsatn returns 151 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 151 
let wnum_linea = 151 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 3.95 ,  xc1 = 66 ,  wnum_linea = 151 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Colectivo de Retiro ; 
let xn_concepto = Seguro Colectivo de Retiro 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 3.95 
let ximp_exe = 3.95 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@066@Seguro Colectivo de Retiro@3.95 
let xcadenanoi = NDD@004@066@Seguro Colectivo de Retiro@3.95 
expression:(+ wnum_linea, 1)
evaluates to 152 
let wnum_linea = 152 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 152 
procedure genlinsatn returns 152 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 152 
let wnum_linea = 152 
expression:(= wp16, "D")
evaluates to t 
expression:(and (<> wi16, 0), (= flg16, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 286.53 ,  xc1 = 77 ,  wnum_linea = 152 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 018 ; 0 ; Fondo de Ahorro Capitalizable ; 
let xn_concepto = Fondo de Ahorro Capitalizable 
let xgrav = 0 
let xtip_perc = 018 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 286.53 
let ximp_exe = 286.53 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@018@077@Fondo de Ahorro Capitalizable@286.53 
let xcadenanoi = NDD@018@077@Fondo de Ahorro Capitalizable@286.53 
expression:(+ wnum_linea, 1)
evaluates to 153 
let wnum_linea = 153 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 153 
procedure genlinsatn returns 153 

expression:(<procedure> genlinsatn, wemp, wp16, wi16, wc16, wnum_linea, wid_empresa)
evaluates to 153 
let wnum_linea = 153 
expression:(= wp17, "D")
evaluates to t 
expression:(and (<> wi17, 0), (= flg17, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 8.50 ,  xc1 = 86 ,  wnum_linea = 153 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Danos FOVISSSTE ; 
let xn_concepto = Seguro Danos FOVISSSTE 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 8.50 
let ximp_exe = 8.50 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@086@Seguro Danos FOVISSSTE@8.50 
let xcadenanoi = NDD@004@086@Seguro Danos FOVISSSTE@8.50 
expression:(+ wnum_linea, 1)
evaluates to 154 
let wnum_linea = 154 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 154 
procedure genlinsatn returns 154 

expression:(<procedure> genlinsatn, wemp, wp17, wi17, wc17, wnum_linea, wid_empresa)
evaluates to 154 
let wnum_linea = 154 
expression:(= wp18, "D")
evaluates to t 
expression:(and (<> wi18, 0), (= flg18, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 7.61 ,  xc1 = D5 ,  wnum_linea = 154 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 7.61 
let ximp_exe = 7.61 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@7.61 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@7.61 
expression:(+ wnum_linea, 1)
evaluates to 155 
let wnum_linea = 155 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 155 
procedure genlinsatn returns 155 

expression:(<procedure> genlinsatn, wemp, wp18, wi18, wc18, wnum_linea, wid_empresa)
evaluates to 155 
let wnum_linea = 155 
expression:(= wp19, "D")
evaluates to t 
expression:(and (<> wi19, 0), (= flg19, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 88.00 ,  xc1 = PP ,  wnum_linea = 155 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Previsora Plenitud ; 
let xn_concepto = Previsora Plenitud 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 88.00 
let ximp_exe = 88.00 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0PP@Previsora Plenitud@88.00 
let xcadenanoi = NDD@004@0PP@Previsora Plenitud@88.00 
expression:(+ wnum_linea, 1)
evaluates to 156 
let wnum_linea = 156 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 156 
procedure genlinsatn returns 156 

expression:(<procedure> genlinsatn, wemp, wp19, wi19, wc19, wnum_linea, wid_empresa)
evaluates to 156 
let wnum_linea = 156 
expression:(= wp20, "D")
evaluates to t 
expression:(and (<> wi20, 0), (= flg20, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 169.15 ,  xc1 = S7 ,  wnum_linea = 156 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 169.15 
let ximp_exe = 169.15 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@169.15 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@169.15 
expression:(+ wnum_linea, 1)
evaluates to 157 
let wnum_linea = 157 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 157 
procedure genlinsatn returns 157 

expression:(<procedure> genlinsatn, wemp, wp20, wi20, wc20, wnum_linea, wid_empresa)
evaluates to 157 
let wnum_linea = 157 
expression:(= wp21, "D")
evaluates to t 
expression:(and (<> wi21, 0), (= flg21, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 38.44 ,  xc1 = S8 ,  wnum_linea = 157 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 38.44 
let ximp_exe = 38.44 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@38.44 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@38.44 
expression:(+ wnum_linea, 1)
evaluates to 158 
let wnum_linea = 158 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 158 
procedure genlinsatn returns 158 

expression:(<procedure> genlinsatn, wemp, wp21, wi21, wc21, wnum_linea, wid_empresa)
evaluates to 158 
let wnum_linea = 158 
expression:(= wp22, "D")
evaluates to t 
expression:(and (<> wi22, 0), (= flg22, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 294916 ,  xp1 = D ,  xi1 = 38.44 ,  xc1 = S9 ,  wnum_linea = 158 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 38.44 
let ximp_exe = 38.44 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@38.44 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@38.44 
expression:(+ wnum_linea, 1)
evaluates to 159 
let wnum_linea = 159 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 159 
procedure genlinsatn returns 159 

expression:(<procedure> genlinsatn, wemp, wp22, wi22, wc22, wnum_linea, wid_empresa)
evaluates to 159 
let wnum_linea = 159 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 160 
let wnum_linea = 160 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 9 
let w_cont = 9 
select cursor iteration.
select cursor returns 01 , 314354 , 5278518 , $13713.34 , $4422.05 , $18135.39 , VERA VEGA ESMERALDA , SPEI ,  , 30 , 3002130400 , 17710 , M01004 , P  , 01 , $7403.45 , P  , 02 , $387.50 , P                    , 04 , $1480.69 , P  , 10 , $542.50 , D  , 1S , $44.42 , P  , 33 , $55.91 , P  , 35 , $3457.46 , P  , 48 , $4807.88 , D                    , 4S , $544.15 , D  , 53 , $3253.38 , D  , 65 , $207.30 , D  , D5 , $17.43 , D  , S7 , $244.31 , D  , S8 , $55.53 , D  , S9 , $55.53 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , VEVE830321MVZRGS04 ,  , VEVE830321 , VERA VEGA ESMERALDA , MEDICO ESPECIALISTA "A" , PEDIATRIA , 22 , 0 , 5 , 2 , 30000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 9 314354 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 9 314354 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324319 
let wnum_cons2 = 2324319 
expression:wnum_cons2
evaluates to 2324319 
let wnum_cons = 2324319 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $3253.38 
let wispt = $3253.38 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 1168.67 
let wimporte = 1168.67 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324319@2022-07-22T17:57:44@99@18135.39@4422.05@MXN@@13713.34@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324319@2022-07-22T17:57:44@99@18135.39@4422.05@MXN@@13713.34@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 161 
let wnum_linea = 161 
expression:wnum_linea
evaluates to 161 
let wnum_lini = 161 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 162 
let wnum_linea = 162 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63730000@@@ 
let cadenac2 = CNE@603@@63730000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 163 
let wnum_linea = 163 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to VEVE830321    ; VEVE830321MVZRGS04 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = VEVE830321MVZRGS04 
let wid_legal_bmex = VEVE830321    
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to t 
expression:wid_legal_bmex
evaluates to VEVE830321    
let wid_legal = VEVE830321    
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to t 
let wid_legal = ERROR_RFC 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 164 
let wnum_linea = 164 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@ERROR_RFC@VERA VEGA ESMERALDA@P01 
let cadenae02 = RC@ERROR_RFC@VERA VEGA ESMERALDA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/07/2022 ; 15/07/2022 ; 2 ; 6 ; 14 ; 
let wid_nivel_wid_grupo_grado_nivel = 14 
let wid_sub_nivel_wid_integracion = 6 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 01/07/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 30/05/2022 ; 02796 ; 02796 ; M01004 ;   ; 0.0000000000000000 ; 0.0000000000000000 ; 01/07/2006 ; 47.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 47.0000 
let wfec_alta = 01/07/2006 
let wcont_des_tot = 0.0000000000000000 
let wcon_pag = 0.0000000000000000 
let wfal_ret =   
let wi2puesto = M01004 
let wcen_trab = 02796 
let wcen_pago = 02796 
let wfec_alta_empleado = 30/05/2022 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to MEDICO ESPECIALISTA "A" ; 
let wd2puesto = MEDICO ESPECIALISTA "A" 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 01/07/2006 
let wfec_alta2 = 01/07/2006 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to VER ; 
let westado_c = VER 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 021888065428161084 ; SPEI ; TD ; 
let wforpago = TD 
let wbanco = SPEI 
let wcuenta = 021888065428161084 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to t 
let desc_err = NOE DatosPago03 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaSPEI 
expression:
  (select (substring num_cuenta, 1, 3)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 021 ; 
let wbanco_c = 021 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 18, "0")
evaluates to 021888065428161084 
let wcuenta = 021888065428161084 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(|| "MCLR ->", (<procedure> length, wcuenta))
evaluates to MCLR ->18 
procedure spm4_layoutsatn_pruebas_2022_mq returns MCLR ->18 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
let wbanco_c =  
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 837.0000000000000000 
let wsem_ant = 837.0000000000000000 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P837W 
let wantigf = P837W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -SPEI-021888065428161084 
let desc_err = NOE Arma-TD    -SPEI-021888065428161084 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-07-01@2022-07-15@15@18135.39@4422.05@0.00@VEVE830321MVZRGS04@99999999999@2006-07-01@P837W@01@No@01@02@314354@ 
let cadnoea = CNR@O@2022-07-15@2022-07-01@2022-07-15@15@18135.39@4422.05@0.00@VEVE830321MVZRGS04@99999999999@2006-07-01@P837W@01@No@01@02@314354@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to PEDIATRIA@MEDICO ESPECIALISTA "A"@1@04@@021888065428161084@@0.00@VER@ 
let cadnoeb = PEDIATRIA@MEDICO ESPECIALISTA "A"@1@04@@021888065428161084@@0.00@VER@ 
expression:(+ wnum_linea, 1)
evaluates to 165 
let wnum_linea = 165 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to CNR2@0 DE 0@@M01004@02796@02796@14/6@2/0@0@5@2@30/05/2022@22@                                                                                                                                                                                              
let cadnoec = CNR2@0 DE 0@@M01004@02796@02796@14/6@2/0@0@5@2@30/05/2022@22@                                                                                                                                                                                              
expression:(+ wnum_linea, 1)
evaluates to 166 
let wnum_linea = 166 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@18135.39@18135.39@4422.05@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@18135.39@18135.39@4422.05@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 167 
let wnum_linea = 167 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@18135.39@@@18135.39@0.00@@@@@@@@@@ 
let cadenak = CNP@18135.39@@@18135.39@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 168 
let wnum_linea = 168 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 7403.45 ,  xc1 = 01 ,  wnum_linea = 168 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 7403.45 
let ximp_gra = 7403.45 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@7403.45@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@7403.45@0.00 
expression:(+ wnum_linea, 1)
evaluates to 169 
let wnum_linea = 169 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 169 
procedure genlinsatn returns 169 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 169 
let wnum_linea = 169 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 169 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 170 
let wnum_linea = 170 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 170 
procedure genlinsatn returns 170 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 170 
let wnum_linea = 170 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 1480.69 ,  xc1 = 04 ,  wnum_linea = 170 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1480.69 
let ximp_gra = 1480.69 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@1480.69@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@1480.69@0.00 
expression:(+ wnum_linea, 1)
evaluates to 171 
let wnum_linea = 171 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 171 
procedure genlinsatn returns 171 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 171 
let wnum_linea = 171 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 171 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 172 
let wnum_linea = 172 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 172 
procedure genlinsatn returns 172 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 172 
let wnum_linea = 172 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 172 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 173 
let wnum_linea = 173 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 173 
procedure genlinsatn returns 173 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 173 
let wnum_linea = 173 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 3457.46 ,  xc1 = 35 ,  wnum_linea = 173 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3457.46 
let ximp_gra = 3457.46 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@3457.46@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@3457.46@0.00 
expression:(+ wnum_linea, 1)
evaluates to 174 
let wnum_linea = 174 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 174 
procedure genlinsatn returns 174 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 174 
let wnum_linea = 174 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = P ,  xi1 = 4807.88 ,  xc1 = 48 ,  wnum_linea = 174 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4807.88 
let ximp_gra = 4807.88 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@4807.88@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@4807.88@0.00 
expression:(+ wnum_linea, 1)
evaluates to 175 
let wnum_linea = 175 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 175 
procedure genlinsatn returns 175 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 175 
let wnum_linea = 175 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@1168.67@3253.38 
let cadenaq = CND@1168.67@3253.38 
expression:(+ wnum_linea, 1)
evaluates to 176 
let wnum_linea = 176 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 44.42 ,  xc1 = 1S ,  wnum_linea = 176 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 44.42 
let ximp_exe = 44.42 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@44.42 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@44.42 
expression:(+ wnum_linea, 1)
evaluates to 177 
let wnum_linea = 177 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 177 
procedure genlinsatn returns 177 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 177 
let wnum_linea = 177 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 544.15 ,  xc1 = 4S ,  wnum_linea = 177 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 544.15 
let ximp_exe = 544.15 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@544.15 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@544.15 
expression:(+ wnum_linea, 1)
evaluates to 178 
let wnum_linea = 178 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 178 
procedure genlinsatn returns 178 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 178 
let wnum_linea = 178 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 3253.38 ,  xc1 = 53 ,  wnum_linea = 178 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 3253.38 
let ximp_exe = 3253.38 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@3253.38 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@3253.38 
expression:(+ wnum_linea, 1)
evaluates to 179 
let wnum_linea = 179 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 179 
procedure genlinsatn returns 179 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 179 
let wnum_linea = 179 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 207.30 ,  xc1 = 65 ,  wnum_linea = 179 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 207.30 
let ximp_exe = 207.30 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@207.30 
let xcadenanoi = NDD@004@065@Seguro Institucional@207.30 
expression:(+ wnum_linea, 1)
evaluates to 180 
let wnum_linea = 180 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 180 
procedure genlinsatn returns 180 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 180 
let wnum_linea = 180 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 17.43 ,  xc1 = D5 ,  wnum_linea = 180 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 17.43 
let ximp_exe = 17.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
expression:(+ wnum_linea, 1)
evaluates to 181 
let wnum_linea = 181 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 181 
procedure genlinsatn returns 181 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 181 
let wnum_linea = 181 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 244.31 ,  xc1 = S7 ,  wnum_linea = 181 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 244.31 
let ximp_exe = 244.31 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@244.31 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@244.31 
expression:(+ wnum_linea, 1)
evaluates to 182 
let wnum_linea = 182 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 182 
procedure genlinsatn returns 182 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 182 
let wnum_linea = 182 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 55.53 ,  xc1 = S8 ,  wnum_linea = 182 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 55.53 
let ximp_exe = 55.53 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@55.53 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@55.53 
expression:(+ wnum_linea, 1)
evaluates to 183 
let wnum_linea = 183 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 183 
procedure genlinsatn returns 183 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 183 
let wnum_linea = 183 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 314354 ,  xp1 = D ,  xi1 = 55.53 ,  xc1 = S9 ,  wnum_linea = 183 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 55.53 
let ximp_exe = 55.53 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@55.53 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@55.53 
expression:(+ wnum_linea, 1)
evaluates to 184 
let wnum_linea = 184 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 184 
procedure genlinsatn returns 184 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 184 
let wnum_linea = 184 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 185 
let wnum_linea = 185 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 10 
let w_cont = 10 
select cursor iteration.
select cursor returns 01 , 357353 , 5353400 , $6420.25 , $1539.16 , $7959.41 , RODRIGUEZ ROMERO EDUARDO JAVIER , BNMX ,  , 09 , 4202130103 , 03100 , M03021 , P  , 01 , $4168.50 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $20.84 , P  , 33 , $55.91 , P  , 35 , $1855.00 , P  , 48 , $950.00 , D  , 4S , $255.32 , D                    , 53 , $979.55 , D  , 65 , $116.72 , D  , S7 , $114.63 , D  , S8 , $26.05 , D  , S9 , $26.05 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , RORE731022HDFDMD07 ,  , RORE731022BD4 , RODRIGUEZ ROMERO EDUARDO JAVIER , APOYO ADMINISTRATIVO EN SALUD - A5 , SUBDIRECCION MEDICA , 46 , 0 , 10 , 19 , 42000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 10 357353 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 10 357353 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324320 
let wnum_cons2 = 2324320 
expression:wnum_cons2
evaluates to 2324320 
let wnum_cons = 2324320 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $979.55 
let wispt = $979.55 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 559.61 
let wimporte = 559.61 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324320@2022-07-22T17:57:44@99@7959.41@1539.16@MXN@@6420.25@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324320@2022-07-22T17:57:44@99@7959.41@1539.16@MXN@@6420.25@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 186 
let wnum_linea = 186 
expression:wnum_linea
evaluates to 186 
let wnum_lini = 186 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 187 
let wnum_linea = 187 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63742000@@@ 
let cadenac2 = CNE@603@@63742000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 188 
let wnum_linea = 188 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to RORE731022BD4 ; RORE731022HDFDMD07 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = RORE731022HDFDMD07 
let wid_legal_bmex = RORE731022BD4 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 189 
let wnum_linea = 189 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@RORE731022BD4@RODRIGUEZ ROMERO EDUARDO JAVIER@P01 
let cadenae02 = RC@RORE731022BD4@RODRIGUEZ ROMERO EDUARDO JAVIER@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 5 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 190 
let wnum_linea = 190 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 191 
let wnum_linea = 191 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@7959.41@7959.41@1539.16@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@7959.41@7959.41@1539.16@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 192 
let wnum_linea = 192 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@7959.41@@@7959.41@0.00@@@@@@@@@@ 
let cadenak = CNP@7959.41@@@7959.41@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 193 
let wnum_linea = 193 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = P ,  xi1 = 4168.50 ,  xc1 = 01 ,  wnum_linea = 193 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4168.50 
let ximp_gra = 4168.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4168.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4168.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 194 
let wnum_linea = 194 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 194 
procedure genlinsatn returns 194 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 194 
let wnum_linea = 194 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 194 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 195 
let wnum_linea = 195 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 195 
procedure genlinsatn returns 195 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 195 
let wnum_linea = 195 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 195 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 196 
let wnum_linea = 196 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 196 
procedure genlinsatn returns 196 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 196 
let wnum_linea = 196 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 196 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 197 
let wnum_linea = 197 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 197 
procedure genlinsatn returns 197 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 197 
let wnum_linea = 197 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = P ,  xi1 = 1855.00 ,  xc1 = 35 ,  wnum_linea = 197 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1855.00 
let ximp_gra = 1855.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1855.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1855.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 198 
let wnum_linea = 198 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 198 
procedure genlinsatn returns 198 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 198 
let wnum_linea = 198 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 198 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 199 
let wnum_linea = 199 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 199 
procedure genlinsatn returns 199 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 199 
let wnum_linea = 199 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@559.61@979.55 
let cadenaq = CND@559.61@979.55 
expression:(+ wnum_linea, 1)
evaluates to 200 
let wnum_linea = 200 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 20.84 ,  xc1 = 1S ,  wnum_linea = 200 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.84 
let ximp_exe = 20.84 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.84 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.84 
expression:(+ wnum_linea, 1)
evaluates to 201 
let wnum_linea = 201 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 201 
procedure genlinsatn returns 201 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 201 
let wnum_linea = 201 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 255.32 ,  xc1 = 4S ,  wnum_linea = 201 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 255.32 
let ximp_exe = 255.32 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@255.32 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@255.32 
expression:(+ wnum_linea, 1)
evaluates to 202 
let wnum_linea = 202 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 202 
procedure genlinsatn returns 202 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 202 
let wnum_linea = 202 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 979.55 ,  xc1 = 53 ,  wnum_linea = 202 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 979.55 
let ximp_exe = 979.55 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@979.55 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@979.55 
expression:(+ wnum_linea, 1)
evaluates to 203 
let wnum_linea = 203 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 203 
procedure genlinsatn returns 203 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 203 
let wnum_linea = 203 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 116.72 ,  xc1 = 65 ,  wnum_linea = 203 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 116.72 
let ximp_exe = 116.72 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@116.72 
let xcadenanoi = NDD@004@065@Seguro Institucional@116.72 
expression:(+ wnum_linea, 1)
evaluates to 204 
let wnum_linea = 204 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 204 
procedure genlinsatn returns 204 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 204 
let wnum_linea = 204 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 114.63 ,  xc1 = S7 ,  wnum_linea = 204 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 114.63 
let ximp_exe = 114.63 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@114.63 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@114.63 
expression:(+ wnum_linea, 1)
evaluates to 205 
let wnum_linea = 205 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 205 
procedure genlinsatn returns 205 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 205 
let wnum_linea = 205 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 26.05 ,  xc1 = S8 ,  wnum_linea = 205 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 26.05 
let ximp_exe = 26.05 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@26.05 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@26.05 
expression:(+ wnum_linea, 1)
evaluates to 206 
let wnum_linea = 206 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 206 
procedure genlinsatn returns 206 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 206 
let wnum_linea = 206 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 357353 ,  xp1 = D ,  xi1 = 26.05 ,  xc1 = S9 ,  wnum_linea = 206 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 26.05 
let ximp_exe = 26.05 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@26.05 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@26.05 
expression:(+ wnum_linea, 1)
evaluates to 207 
let wnum_linea = 207 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 207 
procedure genlinsatn returns 207 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 207 
let wnum_linea = 207 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 208 
let wnum_linea = 208 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 11 
let w_cont = 11 
select cursor iteration.
select cursor returns 01 , 359675 , 5263187 , $1803.43 , $963.11 , $2766.54 , PINEDA ANAYA CLAUDIA LILIANA , BNMX ,  , 16 , 1602130100 , 19300 , M03023 , P  , 01 , $-200.00 , P  , 07 , $3755.54 , D                    , 1S , $17.78 , P  , 35 , $-789.00 , D  , 4S , $217.78 , D  , 53 , $590.93 , D  , 65 , $-5.60 , D  , S7 , $97.78 , D                    , S8 , $22.22 , D  , S9 , $22.22 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , PIAC731119MMNNNL07 , 80157314479 , PIAC731119GM6 , PINEDA ANAYA CLAUDIA LILIANA , APOYO ADMINISTRATIVO EN SALUD - A3 , FARMACIA , 140 , 2 , 8 , 10 , 16000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 11 359675 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 11 359675 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324321 
let wnum_cons2 = 2324321 
expression:wnum_cons2
evaluates to 2324321 
let wnum_cons = 2324321 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to t 
expression:wi6
evaluates to $590.93 
let wispt = $590.93 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to t 
expression:(- wperc, wi1)
evaluates to 2966.54 
let wperc = 2966.54 
expression:(- wdeduc, wi1)
evaluates to 1163.11 
let wdeduc = 1163.11 
expression:(= wp1, "P")
evaluates to t 
let wp1 = D 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to t 
expression:(- wperc, wi4)
evaluates to 3755.54 
let wperc = 3755.54 
expression:(- wdeduc, wi4)
evaluates to 1952.11 
let wdeduc = 1952.11 
expression:(= wp4, "P")
evaluates to t 
let wp4 = D 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to t 
expression:(- wperc, wi7)
evaluates to 3761.14 
let wperc = 3761.14 
expression:(- wdeduc, wi7)
evaluates to 1957.71 
let wdeduc = 1957.71 
expression:(= wp7, "P")
evaluates to f 
let wp7 = P 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 1366.78 
let wimporte = 1366.78 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324321@2022-07-22T17:57:44@99@3761.14@1957.71@MXN@@1803.43@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324321@2022-07-22T17:57:44@99@3761.14@1957.71@MXN@@1803.43@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 209 
let wnum_linea = 209 
expression:wnum_linea
evaluates to 209 
let wnum_lini = 209 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 210 
let wnum_linea = 210 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63716000@@@ 
let cadenac2 = CNE@603@@63716000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 211 
let wnum_linea = 211 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to PIAC731119GM6 ; PIAC731119MMNNNL07 ; 80157314479 ; 
let wnumero_ss_bmex = 80157314479 
let wcurp_bmex = PIAC731119MMNNNL07 
let wid_legal_bmex = PIAC731119GM6 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 212 
let wnum_linea = 212 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@PIAC731119GM6@PINEDA ANAYA CLAUDIA LILIANA@P01 
let cadenae02 = RC@PIAC731119GM6@PINEDA ANAYA CLAUDIA LILIANA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 10.88 ; 
let wporcent = 10.88 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
exception : looking for handler
SQL error = -284 ISAM error = 0  error string =  = ""
exception : handler FOUND
expression:(|| (|| (|| (|| (|| "error en  ---> ", w_cont), " "), wemp), " "), error_num)
evaluates to error en  ---> 11 359675 -284 
procedure spm4_layoutsatn_pruebas_2022_mq returns error en  ---> 11 359675 -284 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_linea, 1)
evaluates to 213 
let wnum_linea = 213 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| (|| (|| (|| (|| (|| (|| "Error-", desc_err), ":"), error_num), "-emp:"), wemp), "-Cons:"), wnum_cons2));
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to MIC ; 
let westado_c = MIC 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 5256783289351299 ; BNMX ; TD ; 
let wforpago = TD 
let wbanco = BNMX 
let wcuenta = 5256783289351299 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to f 
let desc_err = NOE DatosPago04 
expression:
  (select (count *)
    from c_banco
    where (= id_banco, wbanco))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaTD 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 16, "0")
evaluates to 5256783289351299 
let wcuenta = 5256783289351299 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -BNMX-5256783289351299 
let desc_err = NOE Arma-TD    -BNMX-5256783289351299 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 214 
let wnum_linea = 214 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 215 
let wnum_linea = 215 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@3761.14@3761.14@1957.71@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@3761.14@3761.14@1957.71@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 216 
let wnum_linea = 216 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@3761.14@@@3761.14@0.00@@@@@@@@@@ 
let cadenak = CNP@3761.14@@@3761.14@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 217 
let wnum_linea = 217 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to f 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = P ,  xi1 = 3755.54 ,  xc1 = 07 ,  wnum_linea = 217 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Turno Opcional ; 
let xn_concepto = Turno Opcional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3755.54 
let ximp_gra = 3755.54 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@007@Turno Opcional@3755.54@0.00 
let xcadenanoi = NPD@@038@007@Turno Opcional@3755.54@0.00 
expression:(+ wnum_linea, 1)
evaluates to 218 
let wnum_linea = 218 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 218 
procedure genlinsatn returns 218 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 218 
let wnum_linea = 218 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = P ,  xi1 = -5.60 ,  xc1 = 65 ,  wnum_linea = 218 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to t 
expression:(= xp1, "P")
evaluates to t 
let xp1 = P 
expression:(* xi1, (- 1))
evaluates to 5.6000000000000000 
let xi1 = 5.6000000000000000 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav_neg
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 5.60 
let ximp_gra = 5.60 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@065@Seguro Institucional@5.60@0.00 
let xcadenanoi = NPD@@038@065@Seguro Institucional@5.60@0.00 
expression:(+ wnum_linea, 1)
evaluates to 219 
let wnum_linea = 219 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 219 
procedure genlinsatn returns 219 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 219 
let wnum_linea = 219 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@1366.78@590.93 
let cadenaq = CND@1366.78@590.93 
expression:(+ wnum_linea, 1)
evaluates to 220 
let wnum_linea = 220 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = -200.00 ,  xc1 = 01 ,  wnum_linea = 220 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to t 
expression:(= xp1, "P")
evaluates to f 
let xp1 = D 
expression:(* xi1, (- 1))
evaluates to 200.0000000000000000 
let xi1 = 200.0000000000000000 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav_neg
    where (= id_concepto, xc1))
evaluates to 013 ; 0 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 0 
let xtip_perc = 013 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 200.00 
let ximp_exe = 200.00 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@013@001@Sueldo@200.00 
let xcadenanoi = NDD@013@001@Sueldo@200.00 
expression:(+ wnum_linea, 1)
evaluates to 221 
let wnum_linea = 221 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 221 
procedure genlinsatn returns 221 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 221 
let wnum_linea = 221 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = 17.78 ,  xc1 = 1S ,  wnum_linea = 221 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 17.78 
let ximp_exe = 17.78 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@17.78 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@17.78 
expression:(+ wnum_linea, 1)
evaluates to 222 
let wnum_linea = 222 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 222 
procedure genlinsatn returns 222 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 222 
let wnum_linea = 222 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = -789.00 ,  xc1 = 35 ,  wnum_linea = 222 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to t 
expression:(= xp1, "P")
evaluates to f 
let xp1 = D 
expression:(* xi1, (- 1))
evaluates to 789.0000000000000000 
let xi1 = 789.0000000000000000 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav_neg
    where (= id_concepto, xc1))
evaluates to 013 ; 0 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 0 
let xtip_perc = 013 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 789.00 
let ximp_exe = 789.00 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@013@035@Asignacion@789.00 
let xcadenanoi = NDD@013@035@Asignacion@789.00 
expression:(+ wnum_linea, 1)
evaluates to 223 
let wnum_linea = 223 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 223 
procedure genlinsatn returns 223 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 223 
let wnum_linea = 223 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = 217.78 ,  xc1 = 4S ,  wnum_linea = 223 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 217.78 
let ximp_exe = 217.78 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@217.78 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@217.78 
expression:(+ wnum_linea, 1)
evaluates to 224 
let wnum_linea = 224 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 224 
procedure genlinsatn returns 224 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 224 
let wnum_linea = 224 
expression:(= wp6, "D")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = 590.93 ,  xc1 = 53 ,  wnum_linea = 224 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 590.93 
let ximp_exe = 590.93 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@590.93 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@590.93 
expression:(+ wnum_linea, 1)
evaluates to 225 
let wnum_linea = 225 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 225 
procedure genlinsatn returns 225 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 225 
let wnum_linea = 225 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = 97.78 ,  xc1 = S7 ,  wnum_linea = 225 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 97.78 
let ximp_exe = 97.78 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@97.78 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@97.78 
expression:(+ wnum_linea, 1)
evaluates to 226 
let wnum_linea = 226 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 226 
procedure genlinsatn returns 226 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 226 
let wnum_linea = 226 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = 22.22 ,  xc1 = S8 ,  wnum_linea = 226 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 22.22 
let ximp_exe = 22.22 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@22.22 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@22.22 
expression:(+ wnum_linea, 1)
evaluates to 227 
let wnum_linea = 227 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 227 
procedure genlinsatn returns 227 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 227 
let wnum_linea = 227 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 359675 ,  xp1 = D ,  xi1 = 22.22 ,  xc1 = S9 ,  wnum_linea = 227 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 22.22 
let ximp_exe = 22.22 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@22.22 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@22.22 
expression:(+ wnum_linea, 1)
evaluates to 228 
let wnum_linea = 228 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 228 
procedure genlinsatn returns 228 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 228 
let wnum_linea = 228 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 229 
let wnum_linea = 229 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 12 
let w_cont = 12 
select cursor iteration.
select cursor returns 01 , 360077 , 5353402 , $6176.49 , $1464.42 , $7640.91 , CRUZ ZAMORA MARIA DE LOURDES , BNMX ,  , 09 , 4202140403 , 11210 , M03022 , P  , 01 , $4118.50 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $20.59 , P  , 33 , $55.91 , P  , 35 , $1586.50 , P  , 48 , $950.00 , D  , 4S , $252.26 , D                    , 53 , $911.51 , D  , 65 , $115.32 , D  , S7 , $113.26 , D  , S8 , $25.74 , D  , S9 , $25.74 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , CUZL810211MDFRMR01 ,  , CUZL810211V78 , CRUZ ZAMORA MARIA DE LOURDES , APOYO ADMINISTRATIVO EN SALUD - A4 , ARCHIVO CLINICO , 98 , 1 , 10 , 18 , 42000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 12 360077 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 12 360077 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324322 
let wnum_cons2 = 2324322 
expression:wnum_cons2
evaluates to 2324322 
let wnum_cons = 2324322 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $911.51 
let wispt = $911.51 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 552.91 
let wimporte = 552.91 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324322@2022-07-22T17:57:44@99@7640.91@1464.42@MXN@@6176.49@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324322@2022-07-22T17:57:44@99@7640.91@1464.42@MXN@@6176.49@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 230 
let wnum_linea = 230 
expression:wnum_linea
evaluates to 230 
let wnum_lini = 230 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 231 
let wnum_linea = 231 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63742000@@@ 
let cadenac2 = CNE@603@@63742000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 232 
let wnum_linea = 232 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to CUZL810211V78 ; CUZL810211MDFRMR01 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = CUZL810211MDFRMR01 
let wid_legal_bmex = CUZL810211V78 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 233 
let wnum_linea = 233 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@CUZL810211V78@CRUZ ZAMORA MARIA DE LOURDES@P01 
let cadenae02 = RC@CUZL810211V78@CRUZ ZAMORA MARIA DE LOURDES@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 4 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 4 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 012180015208125499 ; SPEI ; TD ; 
let wforpago = TD 
let wbanco = SPEI 
let wcuenta = 012180015208125499 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to t 
let desc_err = NOE DatosPago03 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaSPEI 
expression:
  (select (substring num_cuenta, 1, 3)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 012 ; 
let wbanco_c = 012 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 18, "0")
evaluates to 012180015208125499 
let wcuenta = 012180015208125499 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(|| "MCLR ->", (<procedure> length, wcuenta))
evaluates to MCLR ->18 
procedure spm4_layoutsatn_pruebas_2022_mq returns MCLR ->18 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
let wbanco_c =  
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -SPEI-012180015208125499 
let desc_err = NOE Arma-TD    -SPEI-012180015208125499 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 234 
let wnum_linea = 234 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 235 
let wnum_linea = 235 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@7640.91@7640.91@1464.42@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@7640.91@7640.91@1464.42@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 236 
let wnum_linea = 236 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@7640.91@@@7640.91@0.00@@@@@@@@@@ 
let cadenak = CNP@7640.91@@@7640.91@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 237 
let wnum_linea = 237 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = P ,  xi1 = 4118.50 ,  xc1 = 01 ,  wnum_linea = 237 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4118.50 
let ximp_gra = 4118.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4118.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4118.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 238 
let wnum_linea = 238 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 238 
procedure genlinsatn returns 238 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 238 
let wnum_linea = 238 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 238 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 239 
let wnum_linea = 239 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 239 
procedure genlinsatn returns 239 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 239 
let wnum_linea = 239 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 239 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 240 
let wnum_linea = 240 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 240 
procedure genlinsatn returns 240 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 240 
let wnum_linea = 240 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 240 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 241 
let wnum_linea = 241 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 241 
procedure genlinsatn returns 241 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 241 
let wnum_linea = 241 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = P ,  xi1 = 1586.50 ,  xc1 = 35 ,  wnum_linea = 241 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1586.50 
let ximp_gra = 1586.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1586.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1586.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 242 
let wnum_linea = 242 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 242 
procedure genlinsatn returns 242 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 242 
let wnum_linea = 242 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 242 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 243 
let wnum_linea = 243 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 243 
procedure genlinsatn returns 243 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 243 
let wnum_linea = 243 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@552.91@911.51 
let cadenaq = CND@552.91@911.51 
expression:(+ wnum_linea, 1)
evaluates to 244 
let wnum_linea = 244 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 20.59 ,  xc1 = 1S ,  wnum_linea = 244 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.59 
let ximp_exe = 20.59 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.59 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.59 
expression:(+ wnum_linea, 1)
evaluates to 245 
let wnum_linea = 245 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 245 
procedure genlinsatn returns 245 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 245 
let wnum_linea = 245 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 252.26 ,  xc1 = 4S ,  wnum_linea = 245 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 252.26 
let ximp_exe = 252.26 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@252.26 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@252.26 
expression:(+ wnum_linea, 1)
evaluates to 246 
let wnum_linea = 246 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 246 
procedure genlinsatn returns 246 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 246 
let wnum_linea = 246 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 911.51 ,  xc1 = 53 ,  wnum_linea = 246 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 911.51 
let ximp_exe = 911.51 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@911.51 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@911.51 
expression:(+ wnum_linea, 1)
evaluates to 247 
let wnum_linea = 247 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 247 
procedure genlinsatn returns 247 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 247 
let wnum_linea = 247 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 115.32 ,  xc1 = 65 ,  wnum_linea = 247 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 115.32 
let ximp_exe = 115.32 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@115.32 
let xcadenanoi = NDD@004@065@Seguro Institucional@115.32 
expression:(+ wnum_linea, 1)
evaluates to 248 
let wnum_linea = 248 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 248 
procedure genlinsatn returns 248 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 248 
let wnum_linea = 248 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 113.26 ,  xc1 = S7 ,  wnum_linea = 248 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 113.26 
let ximp_exe = 113.26 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@113.26 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@113.26 
expression:(+ wnum_linea, 1)
evaluates to 249 
let wnum_linea = 249 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 249 
procedure genlinsatn returns 249 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 249 
let wnum_linea = 249 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 25.74 ,  xc1 = S8 ,  wnum_linea = 249 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.74 
let ximp_exe = 25.74 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@25.74 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@25.74 
expression:(+ wnum_linea, 1)
evaluates to 250 
let wnum_linea = 250 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 250 
procedure genlinsatn returns 250 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 250 
let wnum_linea = 250 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 360077 ,  xp1 = D ,  xi1 = 25.74 ,  xc1 = S9 ,  wnum_linea = 250 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.74 
let ximp_exe = 25.74 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@25.74 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@25.74 
expression:(+ wnum_linea, 1)
evaluates to 251 
let wnum_linea = 251 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 251 
procedure genlinsatn returns 251 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 251 
let wnum_linea = 251 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 252 
let wnum_linea = 252 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 13 
let w_cont = 13 
select cursor iteration.
select cursor returns 01 , 369725 , 5279149 , $6274.50 , $3286.58 , $9561.08 , ATAYDE GUERRERO CLAUDIA JAZMIN , BNMX ,  , 09 , 4009000000 , RC030 , CF40021 , P  , 01 , $4258.27 , P  , 02 , $361.67 , P                    , 06 , $74.67 , P  , 10 , $506.33 , D  , 1S , $21.66 , P  , 33 , $52.18 , P  , 35 , $3354.00 , P  , 48 , $953.96 , D                    , 4S , $265.39 , D  , 53 , $1321.66 , D  , 61 , $81.48 , D  , 62 , $1299.88 , D  , 65 , $119.23 , D  , 66 , $3.96 , D  , S7 , $119.16 , D  , S8 , $27.08 , D  , S9 , $27.08 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , AAGC870511MDFTRL05 , 80068713975 , AAGC8705113X2 , ATAYDE GUERRERO CLAUDIA JAZMIN , PROFESIONAL ADMINISTRATIVO "A" , DEPTO DE OBRAS Y SERVS GRALES , 303 , 5 , 9 , 27 , 40000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 13 369725 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 13 369725 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324323 
let wnum_cons2 = 2324323 
expression:wnum_cons2
evaluates to 2324323 
let wnum_cons = 2324323 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $1321.66 
let wispt = $1321.66 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 1964.92 
let wimporte = 1964.92 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324323@2022-07-22T17:57:44@99@9561.08@3286.58@MXN@@6274.50@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324323@2022-07-22T17:57:44@99@9561.08@3286.58@MXN@@6274.50@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 253 
let wnum_linea = 253 
expression:wnum_linea
evaluates to 253 
let wnum_lini = 253 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 254 
let wnum_linea = 254 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63740000@@@ 
let cadenac2 = CNE@603@@63740000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 255 
let wnum_linea = 255 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to AAGC8705113X2 ; AAGC870511MDFTRL05 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = AAGC870511MDFTRL05 
let wid_legal_bmex = AAGC8705113X2 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 256 
let wnum_linea = 256 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@AAGC8705113X2@ATAYDE GUERRERO CLAUDIA JAZMIN@P01 
let cadenae02 = RC@AAGC8705113X2@ATAYDE GUERRERO CLAUDIA JAZMIN@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/05/2022 ; 31/05/2022 ; 2 ; 5 ; 29 ; 
let wid_nivel_wid_grupo_grado_nivel = 29 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 2 
let wfec_imputacion = 31/05/2022 
let wfecha_ini_ts = 16/05/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to A SOLICITUD DEL AREA ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = A SOLICITUD DEL AREA 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 257 
let wnum_linea = 257 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 258 
let wnum_linea = 258 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@9561.08@9561.08@3286.58@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@9561.08@9561.08@3286.58@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 259 
let wnum_linea = 259 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@9561.08@@@9561.08@0.00@@@@@@@@@@ 
let cadenak = CNP@9561.08@@@9561.08@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 260 
let wnum_linea = 260 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 4258.27 ,  xc1 = 01 ,  wnum_linea = 260 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4258.27 
let ximp_gra = 4258.27 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4258.27@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4258.27@0.00 
expression:(+ wnum_linea, 1)
evaluates to 261 
let wnum_linea = 261 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 261 
procedure genlinsatn returns 261 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 261 
let wnum_linea = 261 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 361.67 ,  xc1 = 02 ,  wnum_linea = 261 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 361.67 
let ximp_gra = 361.67 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@361.67@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@361.67@0.00 
expression:(+ wnum_linea, 1)
evaluates to 262 
let wnum_linea = 262 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 262 
procedure genlinsatn returns 262 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 262 
let wnum_linea = 262 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 74.67 ,  xc1 = 06 ,  wnum_linea = 262 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Quinquenios ; 
let xn_concepto = Quinquenios 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 74.67 
let ximp_gra = 74.67 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@006@Quinquenios@74.67@0.00 
let xcadenanoi = NPD@@038@006@Quinquenios@74.67@0.00 
expression:(+ wnum_linea, 1)
evaluates to 263 
let wnum_linea = 263 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 263 
procedure genlinsatn returns 263 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 263 
let wnum_linea = 263 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 506.33 ,  xc1 = 10 ,  wnum_linea = 263 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 506.33 
let ximp_gra = 506.33 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@506.33@0.00 
let xcadenanoi = NPD@@038@010@Despensa@506.33@0.00 
expression:(+ wnum_linea, 1)
evaluates to 264 
let wnum_linea = 264 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 264 
procedure genlinsatn returns 264 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 264 
let wnum_linea = 264 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 52.18 ,  xc1 = 33 ,  wnum_linea = 264 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 52.18 
let ximp_gra = 52.18 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@52.18@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@52.18@0.00 
expression:(+ wnum_linea, 1)
evaluates to 265 
let wnum_linea = 265 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 265 
procedure genlinsatn returns 265 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 265 
let wnum_linea = 265 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 3354.00 ,  xc1 = 35 ,  wnum_linea = 265 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3354.00 
let ximp_gra = 3354.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@3354.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@3354.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 266 
let wnum_linea = 266 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 266 
procedure genlinsatn returns 266 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 266 
let wnum_linea = 266 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = P ,  xi1 = 953.96 ,  xc1 = 48 ,  wnum_linea = 266 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 953.96 
let ximp_gra = 953.96 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@953.96@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@953.96@0.00 
expression:(+ wnum_linea, 1)
evaluates to 267 
let wnum_linea = 267 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 267 
procedure genlinsatn returns 267 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 267 
let wnum_linea = 267 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@1964.92@1321.66 
let cadenaq = CND@1964.92@1321.66 
expression:(+ wnum_linea, 1)
evaluates to 268 
let wnum_linea = 268 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 21.66 ,  xc1 = 1S ,  wnum_linea = 268 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 21.66 
let ximp_exe = 21.66 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@21.66 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@21.66 
expression:(+ wnum_linea, 1)
evaluates to 269 
let wnum_linea = 269 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 269 
procedure genlinsatn returns 269 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 269 
let wnum_linea = 269 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 265.39 ,  xc1 = 4S ,  wnum_linea = 269 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 265.39 
let ximp_exe = 265.39 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@265.39 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@265.39 
expression:(+ wnum_linea, 1)
evaluates to 270 
let wnum_linea = 270 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 270 
procedure genlinsatn returns 270 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 270 
let wnum_linea = 270 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 1321.66 ,  xc1 = 53 ,  wnum_linea = 270 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1321.66 
let ximp_exe = 1321.66 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1321.66 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1321.66 
expression:(+ wnum_linea, 1)
evaluates to 271 
let wnum_linea = 271 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 271 
procedure genlinsatn returns 271 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 271 
let wnum_linea = 271 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 81.48 ,  xc1 = 61 ,  wnum_linea = 271 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Comision de Auxilio ; 
let xn_concepto = Comision de Auxilio 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 81.48 
let ximp_exe = 81.48 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@061@Comision de Auxilio@81.48 
let xcadenanoi = NDD@004@061@Comision de Auxilio@81.48 
expression:(+ wnum_linea, 1)
evaluates to 272 
let wnum_linea = 272 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 272 
procedure genlinsatn returns 272 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 272 
let wnum_linea = 272 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 1299.88 ,  xc1 = 62 ,  wnum_linea = 272 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 010 ; 0 ; Credito FOVISSSTE ; 
let xn_concepto = Credito FOVISSSTE 
let xgrav = 0 
let xtip_perc = 010 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1299.88 
let ximp_exe = 1299.88 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@010@062@Credito FOVISSSTE@1299.88 
let xcadenanoi = NDD@010@062@Credito FOVISSSTE@1299.88 
expression:(+ wnum_linea, 1)
evaluates to 273 
let wnum_linea = 273 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 273 
procedure genlinsatn returns 273 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 273 
let wnum_linea = 273 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 119.23 ,  xc1 = 65 ,  wnum_linea = 273 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 119.23 
let ximp_exe = 119.23 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@119.23 
let xcadenanoi = NDD@004@065@Seguro Institucional@119.23 
expression:(+ wnum_linea, 1)
evaluates to 274 
let wnum_linea = 274 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 274 
procedure genlinsatn returns 274 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 274 
let wnum_linea = 274 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 3.96 ,  xc1 = 66 ,  wnum_linea = 274 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Colectivo de Retiro ; 
let xn_concepto = Seguro Colectivo de Retiro 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 3.96 
let ximp_exe = 3.96 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@066@Seguro Colectivo de Retiro@3.96 
let xcadenanoi = NDD@004@066@Seguro Colectivo de Retiro@3.96 
expression:(+ wnum_linea, 1)
evaluates to 275 
let wnum_linea = 275 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 275 
procedure genlinsatn returns 275 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 275 
let wnum_linea = 275 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 119.16 ,  xc1 = S7 ,  wnum_linea = 275 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 119.16 
let ximp_exe = 119.16 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@119.16 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@119.16 
expression:(+ wnum_linea, 1)
evaluates to 276 
let wnum_linea = 276 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 276 
procedure genlinsatn returns 276 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 276 
let wnum_linea = 276 
expression:(= wp16, "D")
evaluates to t 
expression:(and (<> wi16, 0), (= flg16, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 27.08 ,  xc1 = S8 ,  wnum_linea = 276 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 27.08 
let ximp_exe = 27.08 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@27.08 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@27.08 
expression:(+ wnum_linea, 1)
evaluates to 277 
let wnum_linea = 277 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 277 
procedure genlinsatn returns 277 

expression:(<procedure> genlinsatn, wemp, wp16, wi16, wc16, wnum_linea, wid_empresa)
evaluates to 277 
let wnum_linea = 277 
expression:(= wp17, "D")
evaluates to t 
expression:(and (<> wi17, 0), (= flg17, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 369725 ,  xp1 = D ,  xi1 = 27.08 ,  xc1 = S9 ,  wnum_linea = 277 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 27.08 
let ximp_exe = 27.08 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@27.08 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@27.08 
expression:(+ wnum_linea, 1)
evaluates to 278 
let wnum_linea = 278 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 278 
procedure genlinsatn returns 278 

expression:(<procedure> genlinsatn, wemp, wp17, wi17, wc17, wnum_linea, wid_empresa)
evaluates to 278 
let wnum_linea = 278 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 279 
let wnum_linea = 279 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 14 
let w_cont = 14 
select cursor iteration.
select cursor returns 01 , 391239 , 5328669 , $6420.25 , $1539.16 , $7959.41 , DAVALOS YEO MARIA GUADALUPE , SPEI ,  , 14 , 1420000000 , 10500 , M03021 , P  , 01 , $4168.50 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $20.84 , P  , 33 , $55.91 , P  , 35 , $1855.00 , P  , 48 , $950.00 , D  , 4S , $255.32 , D                    , 53 , $979.55 , D  , 65 , $116.72 , D  , S7 , $114.63 , D  , S8 , $26.05 , D  , S9 , $26.05 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , DAYG960102MJCVXD07 ,  , DAYG960102RQ7 , DAVALOS YEO MARIA GUADALUPE , APOYO ADMINISTRATIVO EN SALUD - A5 , ARCHIVO CLINICO , 45 , 0 , 10 , 12 , 50002 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 14 391239 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 14 391239 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324324 
let wnum_cons2 = 2324324 
expression:wnum_cons2
evaluates to 2324324 
let wnum_cons = 2324324 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $979.55 
let wispt = $979.55 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 559.61 
let wimporte = 559.61 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324324@2022-07-22T17:57:44@99@7959.41@1539.16@MXN@@6420.25@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324324@2022-07-22T17:57:44@99@7959.41@1539.16@MXN@@6420.25@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 280 
let wnum_linea = 280 
expression:wnum_linea
evaluates to 280 
let wnum_lini = 280 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 281 
let wnum_linea = 281 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63750002@@@ 
let cadenac2 = CNE@603@@63750002@@@ 
expression:(+ wnum_linea, 1)
evaluates to 282 
let wnum_linea = 282 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to DAYG960102RQ7 ; DAYG960102MJCVXD07 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = DAYG960102MJCVXD07 
let wid_legal_bmex = DAYG960102RQ7 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 283 
let wnum_linea = 283 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@DAYG960102RQ7@DAVALOS YEO MARIA GUADALUPE@P01 
let cadenae02 = RC@DAYG960102RQ7@DAVALOS YEO MARIA GUADALUPE@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 5 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to JAL ; 
let westado_c = JAL 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 012320012322189844 ; SPEI ; TD ; 
let wforpago = TD 
let wbanco = SPEI 
let wcuenta = 012320012322189844 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to t 
let desc_err = NOE DatosPago03 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaSPEI 
expression:
  (select (substring num_cuenta, 1, 3)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 012 ; 
let wbanco_c = 012 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 18, "0")
evaluates to 012320012322189844 
let wcuenta = 012320012322189844 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(|| "MCLR ->", (<procedure> length, wcuenta))
evaluates to MCLR ->18 
procedure spm4_layoutsatn_pruebas_2022_mq returns MCLR ->18 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
let wbanco_c =  
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -SPEI-012320012322189844 
let desc_err = NOE Arma-TD    -SPEI-012320012322189844 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 284 
let wnum_linea = 284 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 285 
let wnum_linea = 285 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@7959.41@7959.41@1539.16@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@7959.41@7959.41@1539.16@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 286 
let wnum_linea = 286 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@7959.41@@@7959.41@0.00@@@@@@@@@@ 
let cadenak = CNP@7959.41@@@7959.41@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 287 
let wnum_linea = 287 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = P ,  xi1 = 4168.50 ,  xc1 = 01 ,  wnum_linea = 287 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4168.50 
let ximp_gra = 4168.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4168.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4168.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 288 
let wnum_linea = 288 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 288 
procedure genlinsatn returns 288 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 288 
let wnum_linea = 288 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 288 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 289 
let wnum_linea = 289 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 289 
procedure genlinsatn returns 289 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 289 
let wnum_linea = 289 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 289 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 290 
let wnum_linea = 290 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 290 
procedure genlinsatn returns 290 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 290 
let wnum_linea = 290 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 290 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 291 
let wnum_linea = 291 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 291 
procedure genlinsatn returns 291 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 291 
let wnum_linea = 291 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = P ,  xi1 = 1855.00 ,  xc1 = 35 ,  wnum_linea = 291 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1855.00 
let ximp_gra = 1855.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1855.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1855.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 292 
let wnum_linea = 292 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 292 
procedure genlinsatn returns 292 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 292 
let wnum_linea = 292 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 292 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 293 
let wnum_linea = 293 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 293 
procedure genlinsatn returns 293 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 293 
let wnum_linea = 293 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@559.61@979.55 
let cadenaq = CND@559.61@979.55 
expression:(+ wnum_linea, 1)
evaluates to 294 
let wnum_linea = 294 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 20.84 ,  xc1 = 1S ,  wnum_linea = 294 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.84 
let ximp_exe = 20.84 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.84 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.84 
expression:(+ wnum_linea, 1)
evaluates to 295 
let wnum_linea = 295 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 295 
procedure genlinsatn returns 295 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 295 
let wnum_linea = 295 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 255.32 ,  xc1 = 4S ,  wnum_linea = 295 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 255.32 
let ximp_exe = 255.32 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@255.32 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@255.32 
expression:(+ wnum_linea, 1)
evaluates to 296 
let wnum_linea = 296 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 296 
procedure genlinsatn returns 296 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 296 
let wnum_linea = 296 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 979.55 ,  xc1 = 53 ,  wnum_linea = 296 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 979.55 
let ximp_exe = 979.55 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@979.55 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@979.55 
expression:(+ wnum_linea, 1)
evaluates to 297 
let wnum_linea = 297 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 297 
procedure genlinsatn returns 297 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 297 
let wnum_linea = 297 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 116.72 ,  xc1 = 65 ,  wnum_linea = 297 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 116.72 
let ximp_exe = 116.72 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@116.72 
let xcadenanoi = NDD@004@065@Seguro Institucional@116.72 
expression:(+ wnum_linea, 1)
evaluates to 298 
let wnum_linea = 298 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 298 
procedure genlinsatn returns 298 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 298 
let wnum_linea = 298 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 114.63 ,  xc1 = S7 ,  wnum_linea = 298 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 114.63 
let ximp_exe = 114.63 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@114.63 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@114.63 
expression:(+ wnum_linea, 1)
evaluates to 299 
let wnum_linea = 299 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 299 
procedure genlinsatn returns 299 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 299 
let wnum_linea = 299 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 26.05 ,  xc1 = S8 ,  wnum_linea = 299 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 26.05 
let ximp_exe = 26.05 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@26.05 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@26.05 
expression:(+ wnum_linea, 1)
evaluates to 300 
let wnum_linea = 300 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 300 
procedure genlinsatn returns 300 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 300 
let wnum_linea = 300 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 391239 ,  xp1 = D ,  xi1 = 26.05 ,  xc1 = S9 ,  wnum_linea = 300 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 26.05 
let ximp_exe = 26.05 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@26.05 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@26.05 
expression:(+ wnum_linea, 1)
evaluates to 301 
let wnum_linea = 301 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 301 
procedure genlinsatn returns 301 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 301 
let wnum_linea = 301 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 302 
let wnum_linea = 302 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 15 
let w_cont = 15 
select cursor iteration.
select cursor returns 01 , 394276 , 5260858 , $12738.23 , $3916.47 , $16654.70 , PACHECO TORRES PAULINA ARACELI , BNMX ,  , 18 , 1802120100 , 09523 , M01004 , P  , 01 , $7403.45 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $37.02 , P  , 33 , $55.91 , P  , 35 , $3457.46 , P  , 48 , $4807.88 , D  , 4S , $453.46 , D                    , 53 , $2905.13 , D  , 65 , $207.30 , D  , D5 , $17.43 , D  , S7 , $203.59 , D  , S8 , $46.27 , D  , S9 , $46.27 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , PATP840627MNTCRL07 ,  , PATP840627J8A , PACHECO TORRES PAULINA ARACELI , MEDICO ESPECIALISTA "A" , HOSPITALIZACION , 60 , 1 , 1 , 25 , 18000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 15 394276 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 15 394276 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324325 
let wnum_cons2 = 2324325 
expression:wnum_cons2
evaluates to 2324325 
let wnum_cons = 2324325 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $2905.13 
let wispt = $2905.13 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 1011.34 
let wimporte = 1011.34 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324325@2022-07-22T17:57:44@99@16654.70@3916.47@MXN@@12738.23@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324325@2022-07-22T17:57:44@99@16654.70@3916.47@MXN@@12738.23@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 303 
let wnum_linea = 303 
expression:wnum_linea
evaluates to 303 
let wnum_lini = 303 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 304 
let wnum_linea = 304 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63718000@@@ 
let cadenac2 = CNE@603@@63718000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 305 
let wnum_linea = 305 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to PATP840627J8A ; PATP840627MNTCRL07 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = PATP840627MNTCRL07 
let wid_legal_bmex = PATP840627J8A 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 306 
let wnum_linea = 306 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@PATP840627J8A@PACHECO TORRES PAULINA ARACELI@P01 
let cadenae02 = RC@PATP840627J8A@PACHECO TORRES PAULINA ARACELI@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/05/2022 ; 15/05/2022 ; 2 ; 6 ; 14 ; 
let wid_nivel_wid_grupo_grado_nivel = 14 
let wid_sub_nivel_wid_integracion = 6 
let wid_zona = 2 
let wfec_imputacion = 15/05/2022 
let wfecha_ini_ts = 01/05/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to NAY ; 
let westado_c = NAY 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 307 
let wnum_linea = 307 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 308 
let wnum_linea = 308 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@16654.70@16654.70@3916.47@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@16654.70@16654.70@3916.47@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 309 
let wnum_linea = 309 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@16654.70@@@16654.70@0.00@@@@@@@@@@ 
let cadenak = CNP@16654.70@@@16654.70@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 310 
let wnum_linea = 310 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = P ,  xi1 = 7403.45 ,  xc1 = 01 ,  wnum_linea = 310 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 7403.45 
let ximp_gra = 7403.45 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@7403.45@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@7403.45@0.00 
expression:(+ wnum_linea, 1)
evaluates to 311 
let wnum_linea = 311 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 311 
procedure genlinsatn returns 311 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 311 
let wnum_linea = 311 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 311 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 312 
let wnum_linea = 312 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 312 
procedure genlinsatn returns 312 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 312 
let wnum_linea = 312 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 312 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 313 
let wnum_linea = 313 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 313 
procedure genlinsatn returns 313 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 313 
let wnum_linea = 313 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 313 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 314 
let wnum_linea = 314 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 314 
procedure genlinsatn returns 314 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 314 
let wnum_linea = 314 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = P ,  xi1 = 3457.46 ,  xc1 = 35 ,  wnum_linea = 314 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3457.46 
let ximp_gra = 3457.46 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@3457.46@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@3457.46@0.00 
expression:(+ wnum_linea, 1)
evaluates to 315 
let wnum_linea = 315 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 315 
procedure genlinsatn returns 315 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 315 
let wnum_linea = 315 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = P ,  xi1 = 4807.88 ,  xc1 = 48 ,  wnum_linea = 315 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4807.88 
let ximp_gra = 4807.88 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@4807.88@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@4807.88@0.00 
expression:(+ wnum_linea, 1)
evaluates to 316 
let wnum_linea = 316 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 316 
procedure genlinsatn returns 316 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 316 
let wnum_linea = 316 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@1011.34@2905.13 
let cadenaq = CND@1011.34@2905.13 
expression:(+ wnum_linea, 1)
evaluates to 317 
let wnum_linea = 317 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 37.02 ,  xc1 = 1S ,  wnum_linea = 317 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 37.02 
let ximp_exe = 37.02 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@37.02 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@37.02 
expression:(+ wnum_linea, 1)
evaluates to 318 
let wnum_linea = 318 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 318 
procedure genlinsatn returns 318 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 318 
let wnum_linea = 318 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 453.46 ,  xc1 = 4S ,  wnum_linea = 318 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 453.46 
let ximp_exe = 453.46 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@453.46 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@453.46 
expression:(+ wnum_linea, 1)
evaluates to 319 
let wnum_linea = 319 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 319 
procedure genlinsatn returns 319 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 319 
let wnum_linea = 319 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 2905.13 ,  xc1 = 53 ,  wnum_linea = 319 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 2905.13 
let ximp_exe = 2905.13 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@2905.13 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@2905.13 
expression:(+ wnum_linea, 1)
evaluates to 320 
let wnum_linea = 320 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 320 
procedure genlinsatn returns 320 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 320 
let wnum_linea = 320 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 207.30 ,  xc1 = 65 ,  wnum_linea = 320 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 207.30 
let ximp_exe = 207.30 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@207.30 
let xcadenanoi = NDD@004@065@Seguro Institucional@207.30 
expression:(+ wnum_linea, 1)
evaluates to 321 
let wnum_linea = 321 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 321 
procedure genlinsatn returns 321 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 321 
let wnum_linea = 321 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 17.43 ,  xc1 = D5 ,  wnum_linea = 321 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 17.43 
let ximp_exe = 17.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
expression:(+ wnum_linea, 1)
evaluates to 322 
let wnum_linea = 322 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 322 
procedure genlinsatn returns 322 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 322 
let wnum_linea = 322 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 203.59 ,  xc1 = S7 ,  wnum_linea = 322 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 203.59 
let ximp_exe = 203.59 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@203.59 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@203.59 
expression:(+ wnum_linea, 1)
evaluates to 323 
let wnum_linea = 323 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 323 
procedure genlinsatn returns 323 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 323 
let wnum_linea = 323 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 46.27 ,  xc1 = S8 ,  wnum_linea = 323 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 46.27 
let ximp_exe = 46.27 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@46.27 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@46.27 
expression:(+ wnum_linea, 1)
evaluates to 324 
let wnum_linea = 324 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 324 
procedure genlinsatn returns 324 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 324 
let wnum_linea = 324 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 394276 ,  xp1 = D ,  xi1 = 46.27 ,  xc1 = S9 ,  wnum_linea = 324 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 46.27 
let ximp_exe = 46.27 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@46.27 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@46.27 
expression:(+ wnum_linea, 1)
evaluates to 325 
let wnum_linea = 325 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 325 
procedure genlinsatn returns 325 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 325 
let wnum_linea = 325 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 326 
let wnum_linea = 326 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 16 
let w_cont = 16 
select cursor iteration.
select cursor returns 01 , 396397 , 5279164 , $8029.58 , $2335.88 , $10365.46 , GARCIA GORDILLO JOSE CUITLAHUAC , SPEI ,  , 09 , 4304201000 , EK044 , M03022 , P  , 01 , $4118.50 , P  , 02 , $387.50 , P                    , 04 , $823.70 , P  , 07 , $1900.85 , P  , 10 , $542.50 , D  , 1S , $34.22 , P  , 33 , $55.91 , P  , 35 , $1586.50 , P                    , 48 , $950.00 , D  , 4S , $419.14 , D  , 53 , $1493.48 , D  , 65 , $115.32 , D  , S7 , $188.18 , D  , S8 , $42.77 , D  , S9 , $42.77 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , GAGC730218HDFRRT06 ,  , GAGC730218TAA , GARCIA GORDILLO JOSE CUITLAHUAC , APOYO ADMINISTRATIVO EN SALUD - A4 , ALIMENTACION , 78 , 1 , 5 , 29 , 43000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 16 396397 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 16 396397 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324326 
let wnum_cons2 = 2324326 
expression:wnum_cons2
evaluates to 2324326 
let wnum_cons = 2324326 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to f 
expression:(= wc11, "53")
evaluates to t 
expression:wi11
evaluates to $1493.48 
let wispt = $1493.48 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 842.40 
let wimporte = 842.40 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324326@2022-07-22T17:57:44@99@10365.46@2335.88@MXN@@8029.58@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324326@2022-07-22T17:57:44@99@10365.46@2335.88@MXN@@8029.58@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 327 
let wnum_linea = 327 
expression:wnum_linea
evaluates to 327 
let wnum_lini = 327 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 328 
let wnum_linea = 328 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63743000@@@ 
let cadenac2 = CNE@603@@63743000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 329 
let wnum_linea = 329 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to GAGC730218TAA ; GAGC730218HDFRRT06 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = GAGC730218HDFRRT06 
let wid_legal_bmex = GAGC730218TAA 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 330 
let wnum_linea = 330 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@GAGC730218TAA@GARCIA GORDILLO JOSE CUITLAHUAC@P01 
let cadenae02 = RC@GAGC730218TAA@GARCIA GORDILLO JOSE CUITLAHUAC@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 4 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 4 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 127180001213060684 ; SPEI ; TD ; 
let wforpago = TD 
let wbanco = SPEI 
let wcuenta = 127180001213060684 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to t 
let desc_err = NOE DatosPago03 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaSPEI 
expression:
  (select (substring num_cuenta, 1, 3)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 127 ; 
let wbanco_c = 127 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 18, "0")
evaluates to 127180001213060684 
let wcuenta = 127180001213060684 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(|| "MCLR ->", (<procedure> length, wcuenta))
evaluates to MCLR ->18 
procedure spm4_layoutsatn_pruebas_2022_mq returns MCLR ->18 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
let wbanco_c =  
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -SPEI-127180001213060684 
let desc_err = NOE Arma-TD    -SPEI-127180001213060684 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 331 
let wnum_linea = 331 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 332 
let wnum_linea = 332 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@10365.46@10365.46@2335.88@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@10365.46@10365.46@2335.88@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 333 
let wnum_linea = 333 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@10365.46@@@10365.46@0.00@@@@@@@@@@ 
let cadenak = CNP@10365.46@@@10365.46@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 334 
let wnum_linea = 334 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 4118.50 ,  xc1 = 01 ,  wnum_linea = 334 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4118.50 
let ximp_gra = 4118.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4118.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4118.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 335 
let wnum_linea = 335 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 335 
procedure genlinsatn returns 335 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 335 
let wnum_linea = 335 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 335 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 336 
let wnum_linea = 336 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 336 
procedure genlinsatn returns 336 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 336 
let wnum_linea = 336 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 823.70 ,  xc1 = 04 ,  wnum_linea = 336 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 823.70 
let ximp_gra = 823.70 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@823.70@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@823.70@0.00 
expression:(+ wnum_linea, 1)
evaluates to 337 
let wnum_linea = 337 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 337 
procedure genlinsatn returns 337 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 337 
let wnum_linea = 337 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 1900.85 ,  xc1 = 07 ,  wnum_linea = 337 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Turno Opcional ; 
let xn_concepto = Turno Opcional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1900.85 
let ximp_gra = 1900.85 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@007@Turno Opcional@1900.85@0.00 
let xcadenanoi = NPD@@038@007@Turno Opcional@1900.85@0.00 
expression:(+ wnum_linea, 1)
evaluates to 338 
let wnum_linea = 338 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 338 
procedure genlinsatn returns 338 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 338 
let wnum_linea = 338 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 338 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 339 
let wnum_linea = 339 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 339 
procedure genlinsatn returns 339 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 339 
let wnum_linea = 339 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 339 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 340 
let wnum_linea = 340 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 340 
procedure genlinsatn returns 340 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 340 
let wnum_linea = 340 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 1586.50 ,  xc1 = 35 ,  wnum_linea = 340 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1586.50 
let ximp_gra = 1586.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1586.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1586.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 341 
let wnum_linea = 341 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 341 
procedure genlinsatn returns 341 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 341 
let wnum_linea = 341 
expression:(= wp9, "P")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 341 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 342 
let wnum_linea = 342 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 342 
procedure genlinsatn returns 342 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 342 
let wnum_linea = 342 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@842.40@1493.48 
let cadenaq = CND@842.40@1493.48 
expression:(+ wnum_linea, 1)
evaluates to 343 
let wnum_linea = 343 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 34.22 ,  xc1 = 1S ,  wnum_linea = 343 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 34.22 
let ximp_exe = 34.22 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@34.22 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@34.22 
expression:(+ wnum_linea, 1)
evaluates to 344 
let wnum_linea = 344 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 344 
procedure genlinsatn returns 344 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 344 
let wnum_linea = 344 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 419.14 ,  xc1 = 4S ,  wnum_linea = 344 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 419.14 
let ximp_exe = 419.14 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@419.14 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@419.14 
expression:(+ wnum_linea, 1)
evaluates to 345 
let wnum_linea = 345 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 345 
procedure genlinsatn returns 345 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 345 
let wnum_linea = 345 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 1493.48 ,  xc1 = 53 ,  wnum_linea = 345 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1493.48 
let ximp_exe = 1493.48 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1493.48 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1493.48 
expression:(+ wnum_linea, 1)
evaluates to 346 
let wnum_linea = 346 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 346 
procedure genlinsatn returns 346 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 346 
let wnum_linea = 346 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 115.32 ,  xc1 = 65 ,  wnum_linea = 346 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 115.32 
let ximp_exe = 115.32 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@115.32 
let xcadenanoi = NDD@004@065@Seguro Institucional@115.32 
expression:(+ wnum_linea, 1)
evaluates to 347 
let wnum_linea = 347 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 347 
procedure genlinsatn returns 347 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 347 
let wnum_linea = 347 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 188.18 ,  xc1 = S7 ,  wnum_linea = 347 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 188.18 
let ximp_exe = 188.18 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@188.18 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@188.18 
expression:(+ wnum_linea, 1)
evaluates to 348 
let wnum_linea = 348 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 348 
procedure genlinsatn returns 348 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 348 
let wnum_linea = 348 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 42.77 ,  xc1 = S8 ,  wnum_linea = 348 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 42.77 
let ximp_exe = 42.77 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@42.77 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@42.77 
expression:(+ wnum_linea, 1)
evaluates to 349 
let wnum_linea = 349 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 349 
procedure genlinsatn returns 349 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 349 
let wnum_linea = 349 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 396397 ,  xp1 = D ,  xi1 = 42.77 ,  xc1 = S9 ,  wnum_linea = 349 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 42.77 
let ximp_exe = 42.77 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@42.77 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@42.77 
expression:(+ wnum_linea, 1)
evaluates to 350 
let wnum_linea = 350 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 350 
procedure genlinsatn returns 350 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 350 
let wnum_linea = 350 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 351 
let wnum_linea = 351 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 17 
let w_cont = 17 
select cursor iteration.
select cursor returns 01 , 403072 , 5324082 , $10039.89 , $2901.52 , $12941.41 , BARRERA RIVERA LESLY MARIA , SPEI ,  , 16 , 1620000000 , 09504 , M02035 , P  , 01 , $5467.50 , P  , 02 , $387.50 , P                    , 04 , $1093.50 , P  , 10 , $542.50 , D  , 1S , $32.81 , P  , 33 , $55.91 , P  , 35 , $3225.00 , P  , 48 , $2169.50 , D                    , 4S , $401.86 , D  , 53 , $2043.70 , D  , 65 , $153.09 , D  , D5 , $7.61 , D  , S7 , $180.43 , D  , S8 , $41.01 , D  , S9 , $41.01 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , BARL940610MMNRVS02 ,  , BARL940610LZ8 , BARRERA RIVERA LESLY MARIA , ENFERMERA GENERAL TITULADA "A" , TERAPIA INTENSIVA PEDIATRIA , 61 , 1 , 2 , 1 , 16000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 17 403072 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 17 403072 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324327 
let wnum_cons2 = 2324327 
expression:wnum_cons2
evaluates to 2324327 
let wnum_cons = 2324327 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $2043.70 
let wispt = $2043.70 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 857.82 
let wimporte = 857.82 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324327@2022-07-22T17:57:44@99@12941.41@2901.52@MXN@@10039.89@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324327@2022-07-22T17:57:44@99@12941.41@2901.52@MXN@@10039.89@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 352 
let wnum_linea = 352 
expression:wnum_linea
evaluates to 352 
let wnum_lini = 352 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 353 
let wnum_linea = 353 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63716000@@@ 
let cadenac2 = CNE@603@@63716000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 354 
let wnum_linea = 354 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to BARL940610LZ8 ; BARL940610MMNRVS02 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = BARL940610MMNRVS02 
let wid_legal_bmex = BARL940610LZ8 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 355 
let wnum_linea = 355 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@BARL940610LZ8@BARRERA RIVERA LESLY MARIA@P01 
let cadenae02 = RC@BARL940610LZ8@BARRERA RIVERA LESLY MARIA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 8 ; 07 ; 
let wid_nivel_wid_grupo_grado_nivel = 07 
let wid_sub_nivel_wid_integracion = 8 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to MIC ; 
let westado_c = MIC 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 002470904662290076 ; SPEI ; TD ; 
let wforpago = TD 
let wbanco = SPEI 
let wcuenta = 002470904662290076 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to t 
let desc_err = NOE DatosPago03 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaSPEI 
expression:
  (select (substring num_cuenta, 1, 3)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 002 ; 
let wbanco_c = 002 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to t 
expression:(substring wcuenta, 3, (- (<procedure> length, wcuenta), 2))
evaluates to 2470904662290076 
let wcuenta = 2470904662290076 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 16, "0")
evaluates to 2470904662290076 
let wcuenta = 2470904662290076 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -SPEI-2470904662290076 
let desc_err = NOE Arma-TD    -SPEI-2470904662290076 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 356 
let wnum_linea = 356 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 357 
let wnum_linea = 357 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@12941.41@12941.41@2901.52@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@12941.41@12941.41@2901.52@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 358 
let wnum_linea = 358 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@12941.41@@@12941.41@0.00@@@@@@@@@@ 
let cadenak = CNP@12941.41@@@12941.41@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 359 
let wnum_linea = 359 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 5467.50 ,  xc1 = 01 ,  wnum_linea = 359 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 5467.50 
let ximp_gra = 5467.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@5467.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@5467.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 360 
let wnum_linea = 360 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 360 
procedure genlinsatn returns 360 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 360 
let wnum_linea = 360 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 360 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 361 
let wnum_linea = 361 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 361 
procedure genlinsatn returns 361 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 361 
let wnum_linea = 361 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 1093.50 ,  xc1 = 04 ,  wnum_linea = 361 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1093.50 
let ximp_gra = 1093.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@1093.50@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@1093.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 362 
let wnum_linea = 362 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 362 
procedure genlinsatn returns 362 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 362 
let wnum_linea = 362 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 362 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 363 
let wnum_linea = 363 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 363 
procedure genlinsatn returns 363 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 363 
let wnum_linea = 363 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 363 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 364 
let wnum_linea = 364 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 364 
procedure genlinsatn returns 364 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 364 
let wnum_linea = 364 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 3225.00 ,  xc1 = 35 ,  wnum_linea = 364 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3225.00 
let ximp_gra = 3225.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@3225.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@3225.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 365 
let wnum_linea = 365 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 365 
procedure genlinsatn returns 365 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 365 
let wnum_linea = 365 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = P ,  xi1 = 2169.50 ,  xc1 = 48 ,  wnum_linea = 365 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2169.50 
let ximp_gra = 2169.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@2169.50@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@2169.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 366 
let wnum_linea = 366 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 366 
procedure genlinsatn returns 366 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 366 
let wnum_linea = 366 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@857.82@2043.70 
let cadenaq = CND@857.82@2043.70 
expression:(+ wnum_linea, 1)
evaluates to 367 
let wnum_linea = 367 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 32.81 ,  xc1 = 1S ,  wnum_linea = 367 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 32.81 
let ximp_exe = 32.81 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@32.81 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@32.81 
expression:(+ wnum_linea, 1)
evaluates to 368 
let wnum_linea = 368 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 368 
procedure genlinsatn returns 368 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 368 
let wnum_linea = 368 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 401.86 ,  xc1 = 4S ,  wnum_linea = 368 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 401.86 
let ximp_exe = 401.86 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@401.86 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@401.86 
expression:(+ wnum_linea, 1)
evaluates to 369 
let wnum_linea = 369 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 369 
procedure genlinsatn returns 369 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 369 
let wnum_linea = 369 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 2043.70 ,  xc1 = 53 ,  wnum_linea = 369 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 2043.70 
let ximp_exe = 2043.70 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@2043.70 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@2043.70 
expression:(+ wnum_linea, 1)
evaluates to 370 
let wnum_linea = 370 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 370 
procedure genlinsatn returns 370 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 370 
let wnum_linea = 370 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 153.09 ,  xc1 = 65 ,  wnum_linea = 370 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 153.09 
let ximp_exe = 153.09 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@153.09 
let xcadenanoi = NDD@004@065@Seguro Institucional@153.09 
expression:(+ wnum_linea, 1)
evaluates to 371 
let wnum_linea = 371 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 371 
procedure genlinsatn returns 371 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 371 
let wnum_linea = 371 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 7.61 ,  xc1 = D5 ,  wnum_linea = 371 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 7.61 
let ximp_exe = 7.61 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@7.61 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@7.61 
expression:(+ wnum_linea, 1)
evaluates to 372 
let wnum_linea = 372 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 372 
procedure genlinsatn returns 372 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 372 
let wnum_linea = 372 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 180.43 ,  xc1 = S7 ,  wnum_linea = 372 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 180.43 
let ximp_exe = 180.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@180.43 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@180.43 
expression:(+ wnum_linea, 1)
evaluates to 373 
let wnum_linea = 373 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 373 
procedure genlinsatn returns 373 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 373 
let wnum_linea = 373 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 41.01 ,  xc1 = S8 ,  wnum_linea = 373 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 41.01 
let ximp_exe = 41.01 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@41.01 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@41.01 
expression:(+ wnum_linea, 1)
evaluates to 374 
let wnum_linea = 374 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 374 
procedure genlinsatn returns 374 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 374 
let wnum_linea = 374 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403072 ,  xp1 = D ,  xi1 = 41.01 ,  xc1 = S9 ,  wnum_linea = 374 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 41.01 
let ximp_exe = 41.01 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@41.01 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@41.01 
expression:(+ wnum_linea, 1)
evaluates to 375 
let wnum_linea = 375 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 375 
procedure genlinsatn returns 375 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 375 
let wnum_linea = 375 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 376 
let wnum_linea = 376 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 18 
let w_cont = 18 
select cursor iteration.
select cursor returns 01 , 403166 , 5301566 , $6044.78 , $1420.13 , $7464.91 , PERALTA PERALTA JOSE LUIS , BNMX ,  , 09 , 4202130200 , 19011 , M03023 , P  , 01 , $4068.50 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $20.34 , P  , 33 , $55.91 , P  , 35 , $1460.50 , P  , 48 , $950.00 , D  , 4S , $249.20 , D                    , 53 , $873.93 , D  , 65 , $113.92 , D  , S7 , $111.88 , D  , S8 , $25.43 , D  , S9 , $25.43 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , PEPL951123HDFRRS06 ,  , PEPL951123LG1 , PERALTA PERALTA JOSE LUIS , APOYO ADMINISTRATIVO EN SALUD - A3 , MANTENIMIENTO , 43 , 0 , 10 , 0 , 42000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 18 403166 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 18 403166 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324328 
let wnum_cons2 = 2324328 
expression:wnum_cons2
evaluates to 2324328 
let wnum_cons = 2324328 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $873.93 
let wispt = $873.93 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 546.20 
let wimporte = 546.20 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324328@2022-07-22T17:57:44@99@7464.91@1420.13@MXN@@6044.78@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324328@2022-07-22T17:57:44@99@7464.91@1420.13@MXN@@6044.78@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 377 
let wnum_linea = 377 
expression:wnum_linea
evaluates to 377 
let wnum_lini = 377 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 378 
let wnum_linea = 378 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63742000@@@ 
let cadenac2 = CNE@603@@63742000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 379 
let wnum_linea = 379 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to PEPL951123LG1 ; PEPL951123HDFRRS06 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = PEPL951123HDFRRS06 
let wid_legal_bmex = PEPL951123LG1 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 380 
let wnum_linea = 380 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@PEPL951123LG1@PERALTA PERALTA JOSE LUIS@P01 
let cadenae02 = RC@PEPL951123LG1@PERALTA PERALTA JOSE LUIS@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 3 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 3 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 381 
let wnum_linea = 381 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 382 
let wnum_linea = 382 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@7464.91@7464.91@1420.13@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@7464.91@7464.91@1420.13@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 383 
let wnum_linea = 383 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@7464.91@@@7464.91@0.00@@@@@@@@@@ 
let cadenak = CNP@7464.91@@@7464.91@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 384 
let wnum_linea = 384 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = P ,  xi1 = 4068.50 ,  xc1 = 01 ,  wnum_linea = 384 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4068.50 
let ximp_gra = 4068.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4068.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4068.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 385 
let wnum_linea = 385 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 385 
procedure genlinsatn returns 385 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 385 
let wnum_linea = 385 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 385 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 386 
let wnum_linea = 386 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 386 
procedure genlinsatn returns 386 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 386 
let wnum_linea = 386 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 386 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 387 
let wnum_linea = 387 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 387 
procedure genlinsatn returns 387 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 387 
let wnum_linea = 387 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 387 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 388 
let wnum_linea = 388 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 388 
procedure genlinsatn returns 388 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 388 
let wnum_linea = 388 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = P ,  xi1 = 1460.50 ,  xc1 = 35 ,  wnum_linea = 388 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1460.50 
let ximp_gra = 1460.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1460.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1460.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 389 
let wnum_linea = 389 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 389 
procedure genlinsatn returns 389 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 389 
let wnum_linea = 389 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 389 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 390 
let wnum_linea = 390 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 390 
procedure genlinsatn returns 390 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 390 
let wnum_linea = 390 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@546.20@873.93 
let cadenaq = CND@546.20@873.93 
expression:(+ wnum_linea, 1)
evaluates to 391 
let wnum_linea = 391 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 20.34 ,  xc1 = 1S ,  wnum_linea = 391 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.34 
let ximp_exe = 20.34 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.34 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.34 
expression:(+ wnum_linea, 1)
evaluates to 392 
let wnum_linea = 392 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 392 
procedure genlinsatn returns 392 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 392 
let wnum_linea = 392 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 249.20 ,  xc1 = 4S ,  wnum_linea = 392 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 249.20 
let ximp_exe = 249.20 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@249.20 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@249.20 
expression:(+ wnum_linea, 1)
evaluates to 393 
let wnum_linea = 393 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 393 
procedure genlinsatn returns 393 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 393 
let wnum_linea = 393 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 873.93 ,  xc1 = 53 ,  wnum_linea = 393 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 873.93 
let ximp_exe = 873.93 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@873.93 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@873.93 
expression:(+ wnum_linea, 1)
evaluates to 394 
let wnum_linea = 394 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 394 
procedure genlinsatn returns 394 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 394 
let wnum_linea = 394 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 113.92 ,  xc1 = 65 ,  wnum_linea = 394 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 113.92 
let ximp_exe = 113.92 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@113.92 
let xcadenanoi = NDD@004@065@Seguro Institucional@113.92 
expression:(+ wnum_linea, 1)
evaluates to 395 
let wnum_linea = 395 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 395 
procedure genlinsatn returns 395 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 395 
let wnum_linea = 395 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 111.88 ,  xc1 = S7 ,  wnum_linea = 395 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 111.88 
let ximp_exe = 111.88 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@111.88 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@111.88 
expression:(+ wnum_linea, 1)
evaluates to 396 
let wnum_linea = 396 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 396 
procedure genlinsatn returns 396 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 396 
let wnum_linea = 396 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 25.43 ,  xc1 = S8 ,  wnum_linea = 396 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.43 
let ximp_exe = 25.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@25.43 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@25.43 
expression:(+ wnum_linea, 1)
evaluates to 397 
let wnum_linea = 397 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 397 
procedure genlinsatn returns 397 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 397 
let wnum_linea = 397 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 403166 ,  xp1 = D ,  xi1 = 25.43 ,  xc1 = S9 ,  wnum_linea = 397 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.43 
let ximp_exe = 25.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@25.43 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@25.43 
expression:(+ wnum_linea, 1)
evaluates to 398 
let wnum_linea = 398 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 398 
procedure genlinsatn returns 398 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 398 
let wnum_linea = 398 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 399 
let wnum_linea = 399 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 19 
let w_cont = 19 
select cursor iteration.
select cursor returns 01 , 404283 , 5357889 , $6757.49 , $1500.92 , $8258.41 , GARCIA VERA MARIA EUGENIA , SR ,  , 04 , 0402130200 , 10401 , M03021 , P  , 01 , $4306.00 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $21.53 , P  , 33 , $55.91 , P  , 35 , $2016.50 , P  , 48 , $950.00 , D  , 4S , $263.74 , D                    , 53 , $1043.41 , D  , S7 , $118.42 , D  , S8 , $26.91 , D  , S9 , $26.91 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , GAVE730318MCCRRG06 ,  , GAVE730318MG7 , GARCIA VERA MARIA EUGENIA , APOYO ADMINISTRATIVO EN SALUD - A5 , TRASLADO DE PACIENTES , 6 , 0 , 1 , 15 , 04000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 19 404283 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 19 404283 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324329 
let wnum_cons2 = 2324329 
expression:wnum_cons2
evaluates to 2324329 
let wnum_cons = 2324329 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $1043.41 
let wispt = $1043.41 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 457.51 
let wimporte = 457.51 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324329@2022-07-22T17:57:44@99@8258.41@1500.92@MXN@@6757.49@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324329@2022-07-22T17:57:44@99@8258.41@1500.92@MXN@@6757.49@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 400 
let wnum_linea = 400 
expression:wnum_linea
evaluates to 400 
let wnum_lini = 400 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 401 
let wnum_linea = 401 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63704000@@@ 
let cadenac2 = CNE@603@@63704000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 402 
let wnum_linea = 402 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to GAVE730318MG7 ; GAVE730318MCCRRG06 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = GAVE730318MCCRRG06 
let wid_legal_bmex = GAVE730318MG7 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 403 
let wnum_linea = 403 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@GAVE730318MG7@GARCIA VERA MARIA EUGENIA@P01 
let cadenae02 = RC@GAVE730318MG7@GARCIA VERA MARIA EUGENIA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 3 ; 5 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 3 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to CAM ; 
let westado_c = CAM 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; SR ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = SR 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 404 
let wnum_linea = 404 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 405 
let wnum_linea = 405 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@8258.41@8258.41@1500.92@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@8258.41@8258.41@1500.92@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 406 
let wnum_linea = 406 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@8258.41@@@8258.41@0.00@@@@@@@@@@ 
let cadenak = CNP@8258.41@@@8258.41@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 407 
let wnum_linea = 407 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = P ,  xi1 = 4306.00 ,  xc1 = 01 ,  wnum_linea = 407 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4306.00 
let ximp_gra = 4306.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4306.00@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4306.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 408 
let wnum_linea = 408 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 408 
procedure genlinsatn returns 408 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 408 
let wnum_linea = 408 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 408 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 409 
let wnum_linea = 409 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 409 
procedure genlinsatn returns 409 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 409 
let wnum_linea = 409 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 409 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 410 
let wnum_linea = 410 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 410 
procedure genlinsatn returns 410 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 410 
let wnum_linea = 410 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 410 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 411 
let wnum_linea = 411 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 411 
procedure genlinsatn returns 411 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 411 
let wnum_linea = 411 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = P ,  xi1 = 2016.50 ,  xc1 = 35 ,  wnum_linea = 411 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2016.50 
let ximp_gra = 2016.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@2016.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@2016.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 412 
let wnum_linea = 412 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 412 
procedure genlinsatn returns 412 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 412 
let wnum_linea = 412 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 412 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 413 
let wnum_linea = 413 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 413 
procedure genlinsatn returns 413 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 413 
let wnum_linea = 413 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@457.51@1043.41 
let cadenaq = CND@457.51@1043.41 
expression:(+ wnum_linea, 1)
evaluates to 414 
let wnum_linea = 414 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = D ,  xi1 = 21.53 ,  xc1 = 1S ,  wnum_linea = 414 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 21.53 
let ximp_exe = 21.53 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@21.53 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@21.53 
expression:(+ wnum_linea, 1)
evaluates to 415 
let wnum_linea = 415 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 415 
procedure genlinsatn returns 415 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 415 
let wnum_linea = 415 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = D ,  xi1 = 263.74 ,  xc1 = 4S ,  wnum_linea = 415 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 263.74 
let ximp_exe = 263.74 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@263.74 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@263.74 
expression:(+ wnum_linea, 1)
evaluates to 416 
let wnum_linea = 416 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 416 
procedure genlinsatn returns 416 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 416 
let wnum_linea = 416 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = D ,  xi1 = 1043.41 ,  xc1 = 53 ,  wnum_linea = 416 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1043.41 
let ximp_exe = 1043.41 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1043.41 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1043.41 
expression:(+ wnum_linea, 1)
evaluates to 417 
let wnum_linea = 417 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 417 
procedure genlinsatn returns 417 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 417 
let wnum_linea = 417 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = D ,  xi1 = 118.42 ,  xc1 = S7 ,  wnum_linea = 417 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 118.42 
let ximp_exe = 118.42 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@118.42 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@118.42 
expression:(+ wnum_linea, 1)
evaluates to 418 
let wnum_linea = 418 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 418 
procedure genlinsatn returns 418 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 418 
let wnum_linea = 418 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = D ,  xi1 = 26.91 ,  xc1 = S8 ,  wnum_linea = 418 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 26.91 
let ximp_exe = 26.91 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@26.91 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@26.91 
expression:(+ wnum_linea, 1)
evaluates to 419 
let wnum_linea = 419 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 419 
procedure genlinsatn returns 419 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 419 
let wnum_linea = 419 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 404283 ,  xp1 = D ,  xi1 = 26.91 ,  xc1 = S9 ,  wnum_linea = 419 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 26.91 
let ximp_exe = 26.91 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@26.91 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@26.91 
expression:(+ wnum_linea, 1)
evaluates to 420 
let wnum_linea = 420 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 420 
procedure genlinsatn returns 420 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 420 
let wnum_linea = 420 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 421 
let wnum_linea = 421 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 20 
let w_cont = 20 
select cursor iteration.
select cursor returns 01 , 405500 , 5312707 , $18256.21 , $6710.60 , $24966.81 , MONROY CARVAJAL RODRIGO , BNMX ,  , 21 , 2120000000 , 07390 , M01010 , P  , 01 , $10247.00 , P  , 02 , $387.50 , P                    , 04 , $2049.40 , P  , 10 , $542.50 , D  , 1S , $61.48 , P  , 33 , $55.91 , P  , 35 , $4853.50 , P  , 48 , $6831.00 , D                    , 4S , $753.15 , D  , 53 , $5099.77 , D  , 65 , $286.92 , D  , D5 , $17.43 , D  , S7 , $338.15 , D  , S8 , $76.85 , D  , S9 , $76.85 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , MOCR871214HDFNRD01 ,  , MOCR871214KP9 , MONROY CARVAJAL RODRIGO , MEDICO ESPECIALISTA "B" , MEDICINA PREVENTIVA , 34 , 0 , 7 , 30 , 50002 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 20 405500 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 20 405500 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324330 
let wnum_cons2 = 2324330 
expression:wnum_cons2
evaluates to 2324330 
let wnum_cons = 2324330 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $5099.77 
let wispt = $5099.77 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 1610.83 
let wimporte = 1610.83 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324330@2022-07-22T17:57:44@99@24966.81@6710.60@MXN@@18256.21@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324330@2022-07-22T17:57:44@99@24966.81@6710.60@MXN@@18256.21@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 422 
let wnum_linea = 422 
expression:wnum_linea
evaluates to 422 
let wnum_lini = 422 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 423 
let wnum_linea = 423 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63750002@@@ 
let cadenac2 = CNE@603@@63750002@@@ 
expression:(+ wnum_linea, 1)
evaluates to 424 
let wnum_linea = 424 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to MOCR871214KP9 ; MOCR871214HDFNRD01 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = MOCR871214HDFNRD01 
let wid_legal_bmex = MOCR871214KP9 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 425 
let wnum_linea = 425 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@MOCR871214KP9@MONROY CARVAJAL RODRIGO@P01 
let cadenae02 = RC@MOCR871214KP9@MONROY CARVAJAL RODRIGO@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 30.00 ; 
let wporcent = 30.00 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/04/2022 ; 15/04/2022 ; 2 ; 8 ; 20 ; 
let wid_nivel_wid_grupo_grado_nivel = 20 
let wid_sub_nivel_wid_integracion = 8 
let wid_zona = 2 
let wfec_imputacion = 15/04/2022 
let wfecha_ini_ts = 01/04/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to PUE ; 
let westado_c = PUE 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 426 
let wnum_linea = 426 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 427 
let wnum_linea = 427 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@24966.81@24966.81@6710.60@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@24966.81@24966.81@6710.60@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 428 
let wnum_linea = 428 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@24966.81@@@24966.81@0.00@@@@@@@@@@ 
let cadenak = CNP@24966.81@@@24966.81@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 429 
let wnum_linea = 429 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 10247.00 ,  xc1 = 01 ,  wnum_linea = 429 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 10247.00 
let ximp_gra = 10247.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@10247.00@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@10247.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 430 
let wnum_linea = 430 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 430 
procedure genlinsatn returns 430 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 430 
let wnum_linea = 430 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 430 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 431 
let wnum_linea = 431 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 431 
procedure genlinsatn returns 431 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 431 
let wnum_linea = 431 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 2049.40 ,  xc1 = 04 ,  wnum_linea = 431 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2049.40 
let ximp_gra = 2049.40 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@2049.40@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@2049.40@0.00 
expression:(+ wnum_linea, 1)
evaluates to 432 
let wnum_linea = 432 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 432 
procedure genlinsatn returns 432 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 432 
let wnum_linea = 432 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 432 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 433 
let wnum_linea = 433 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 433 
procedure genlinsatn returns 433 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 433 
let wnum_linea = 433 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 433 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 434 
let wnum_linea = 434 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 434 
procedure genlinsatn returns 434 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 434 
let wnum_linea = 434 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 4853.50 ,  xc1 = 35 ,  wnum_linea = 434 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4853.50 
let ximp_gra = 4853.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@4853.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@4853.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 435 
let wnum_linea = 435 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 435 
procedure genlinsatn returns 435 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 435 
let wnum_linea = 435 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = P ,  xi1 = 6831.00 ,  xc1 = 48 ,  wnum_linea = 435 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 6831.00 
let ximp_gra = 6831.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@6831.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@6831.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 436 
let wnum_linea = 436 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 436 
procedure genlinsatn returns 436 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 436 
let wnum_linea = 436 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@1610.83@5099.77 
let cadenaq = CND@1610.83@5099.77 
expression:(+ wnum_linea, 1)
evaluates to 437 
let wnum_linea = 437 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 61.48 ,  xc1 = 1S ,  wnum_linea = 437 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 61.48 
let ximp_exe = 61.48 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@61.48 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@61.48 
expression:(+ wnum_linea, 1)
evaluates to 438 
let wnum_linea = 438 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 438 
procedure genlinsatn returns 438 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 438 
let wnum_linea = 438 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 753.15 ,  xc1 = 4S ,  wnum_linea = 438 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 753.15 
let ximp_exe = 753.15 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@753.15 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@753.15 
expression:(+ wnum_linea, 1)
evaluates to 439 
let wnum_linea = 439 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 439 
procedure genlinsatn returns 439 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 439 
let wnum_linea = 439 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 5099.77 ,  xc1 = 53 ,  wnum_linea = 439 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 5099.77 
let ximp_exe = 5099.77 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@5099.77 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@5099.77 
expression:(+ wnum_linea, 1)
evaluates to 440 
let wnum_linea = 440 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 440 
procedure genlinsatn returns 440 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 440 
let wnum_linea = 440 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 286.92 ,  xc1 = 65 ,  wnum_linea = 440 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 286.92 
let ximp_exe = 286.92 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@286.92 
let xcadenanoi = NDD@004@065@Seguro Institucional@286.92 
expression:(+ wnum_linea, 1)
evaluates to 441 
let wnum_linea = 441 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 441 
procedure genlinsatn returns 441 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 441 
let wnum_linea = 441 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 17.43 ,  xc1 = D5 ,  wnum_linea = 441 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 17.43 
let ximp_exe = 17.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
expression:(+ wnum_linea, 1)
evaluates to 442 
let wnum_linea = 442 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 442 
procedure genlinsatn returns 442 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 442 
let wnum_linea = 442 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 338.15 ,  xc1 = S7 ,  wnum_linea = 442 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 338.15 
let ximp_exe = 338.15 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@338.15 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@338.15 
expression:(+ wnum_linea, 1)
evaluates to 443 
let wnum_linea = 443 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 443 
procedure genlinsatn returns 443 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 443 
let wnum_linea = 443 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 76.85 ,  xc1 = S8 ,  wnum_linea = 443 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 76.85 
let ximp_exe = 76.85 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@76.85 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@76.85 
expression:(+ wnum_linea, 1)
evaluates to 444 
let wnum_linea = 444 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 444 
procedure genlinsatn returns 444 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 444 
let wnum_linea = 444 
expression:(= wp15, "D")
evaluates to t 
expression:(and (<> wi15, 0), (= flg15, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 405500 ,  xp1 = D ,  xi1 = 76.85 ,  xc1 = S9 ,  wnum_linea = 444 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 76.85 
let ximp_exe = 76.85 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@76.85 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@76.85 
expression:(+ wnum_linea, 1)
evaluates to 445 
let wnum_linea = 445 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 445 
procedure genlinsatn returns 445 

expression:(<procedure> genlinsatn, wemp, wp15, wi15, wc15, wnum_linea, wid_empresa)
evaluates to 445 
let wnum_linea = 445 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 446 
let wnum_linea = 446 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 21 
let w_cont = 21 
select cursor iteration.
select cursor returns 01 , 409802 , 5330942 , $6044.78 , $1420.13 , $7464.91 , LOPEZ RAMIREZ FABIOLA CINTHYA , BNMX ,  , 09 , 4202130200 , 01100 , M03023 , P  , 01 , $4068.50 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $20.34 , P  , 33 , $55.91 , P  , 35 , $1460.50 , P  , 48 , $950.00 , D  , 4S , $249.20 , D                    , 53 , $873.93 , D  , 65 , $113.92 , D  , S7 , $111.88 , D  , S8 , $25.43 , D  , S9 , $25.43 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , LORF820904MDFPMB03 ,  , LORF820904L37 , LOPEZ RAMIREZ FABIOLA CINTHYA , APOYO ADMINISTRATIVO EN SALUD - A3 , DIRECCION , 8 , 0 , 2 , 0 , 42000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 21 409802 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 21 409802 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324331 
let wnum_cons2 = 2324331 
expression:wnum_cons2
evaluates to 2324331 
let wnum_cons = 2324331 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $873.93 
let wispt = $873.93 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 546.20 
let wimporte = 546.20 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324331@2022-07-22T17:57:44@99@7464.91@1420.13@MXN@@6044.78@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324331@2022-07-22T17:57:44@99@7464.91@1420.13@MXN@@6044.78@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 447 
let wnum_linea = 447 
expression:wnum_linea
evaluates to 447 
let wnum_lini = 447 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 448 
let wnum_linea = 448 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63742000@@@ 
let cadenac2 = CNE@603@@63742000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 449 
let wnum_linea = 449 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to LORF820904L37 ; LORF820904MDFPMB03 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = LORF820904MDFPMB03 
let wid_legal_bmex = LORF820904L37 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 450 
let wnum_linea = 450 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@LORF820904L37@LOPEZ RAMIREZ FABIOLA CINTHYA@P01 
let cadenae02 = RC@LORF820904L37@LOPEZ RAMIREZ FABIOLA CINTHYA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 3 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 3 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 451 
let wnum_linea = 451 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 452 
let wnum_linea = 452 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@7464.91@7464.91@1420.13@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@7464.91@7464.91@1420.13@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 453 
let wnum_linea = 453 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@7464.91@@@7464.91@0.00@@@@@@@@@@ 
let cadenak = CNP@7464.91@@@7464.91@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 454 
let wnum_linea = 454 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = P ,  xi1 = 4068.50 ,  xc1 = 01 ,  wnum_linea = 454 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4068.50 
let ximp_gra = 4068.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4068.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4068.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 455 
let wnum_linea = 455 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 455 
procedure genlinsatn returns 455 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 455 
let wnum_linea = 455 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 455 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 456 
let wnum_linea = 456 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 456 
procedure genlinsatn returns 456 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 456 
let wnum_linea = 456 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 456 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 457 
let wnum_linea = 457 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 457 
procedure genlinsatn returns 457 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 457 
let wnum_linea = 457 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 457 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 458 
let wnum_linea = 458 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 458 
procedure genlinsatn returns 458 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 458 
let wnum_linea = 458 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = P ,  xi1 = 1460.50 ,  xc1 = 35 ,  wnum_linea = 458 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1460.50 
let ximp_gra = 1460.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1460.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1460.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 459 
let wnum_linea = 459 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 459 
procedure genlinsatn returns 459 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 459 
let wnum_linea = 459 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 459 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 460 
let wnum_linea = 460 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 460 
procedure genlinsatn returns 460 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 460 
let wnum_linea = 460 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@546.20@873.93 
let cadenaq = CND@546.20@873.93 
expression:(+ wnum_linea, 1)
evaluates to 461 
let wnum_linea = 461 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 20.34 ,  xc1 = 1S ,  wnum_linea = 461 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.34 
let ximp_exe = 20.34 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.34 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.34 
expression:(+ wnum_linea, 1)
evaluates to 462 
let wnum_linea = 462 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 462 
procedure genlinsatn returns 462 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 462 
let wnum_linea = 462 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 249.20 ,  xc1 = 4S ,  wnum_linea = 462 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 249.20 
let ximp_exe = 249.20 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@249.20 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@249.20 
expression:(+ wnum_linea, 1)
evaluates to 463 
let wnum_linea = 463 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 463 
procedure genlinsatn returns 463 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 463 
let wnum_linea = 463 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 873.93 ,  xc1 = 53 ,  wnum_linea = 463 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 873.93 
let ximp_exe = 873.93 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@873.93 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@873.93 
expression:(+ wnum_linea, 1)
evaluates to 464 
let wnum_linea = 464 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 464 
procedure genlinsatn returns 464 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 464 
let wnum_linea = 464 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 113.92 ,  xc1 = 65 ,  wnum_linea = 464 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 113.92 
let ximp_exe = 113.92 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@113.92 
let xcadenanoi = NDD@004@065@Seguro Institucional@113.92 
expression:(+ wnum_linea, 1)
evaluates to 465 
let wnum_linea = 465 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 465 
procedure genlinsatn returns 465 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 465 
let wnum_linea = 465 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 111.88 ,  xc1 = S7 ,  wnum_linea = 465 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 111.88 
let ximp_exe = 111.88 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@111.88 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@111.88 
expression:(+ wnum_linea, 1)
evaluates to 466 
let wnum_linea = 466 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 466 
procedure genlinsatn returns 466 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 466 
let wnum_linea = 466 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 25.43 ,  xc1 = S8 ,  wnum_linea = 466 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.43 
let ximp_exe = 25.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@25.43 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@25.43 
expression:(+ wnum_linea, 1)
evaluates to 467 
let wnum_linea = 467 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 467 
procedure genlinsatn returns 467 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 467 
let wnum_linea = 467 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 409802 ,  xp1 = D ,  xi1 = 25.43 ,  xc1 = S9 ,  wnum_linea = 467 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.43 
let ximp_exe = 25.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@25.43 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@25.43 
expression:(+ wnum_linea, 1)
evaluates to 468 
let wnum_linea = 468 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 468 
procedure genlinsatn returns 468 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 468 
let wnum_linea = 468 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 469 
let wnum_linea = 469 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 22 
let w_cont = 22 
select cursor iteration.
select cursor returns 01 , 410217 , 5270020 , $6176.49 , $1464.42 , $7640.91 , ROSAS LUNA DIEGO SAUL , SPEI ,  , 09 , 4204200800 , EK040 , M03022 , P  , 01 , $4118.50 , P  , 02 , $387.50 , P                    , 10 , $542.50 , D  , 1S , $20.59 , P  , 33 , $55.91 , P  , 35 , $1586.50 , P  , 48 , $950.00 , D  , 4S , $252.26 , D                    , 53 , $911.51 , D  , 65 , $115.32 , D  , S7 , $113.26 , D  , S8 , $25.74 , D  , S9 , $25.74 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , ROLD970624HDFSNG09 ,  , ROLD970624SS6 , ROSAS LUNA DIEGO SAUL , APOYO ADMINISTRATIVO EN SALUD - A4 , DIRECCION (E B D I) , 32 , 0 , 7 , 17 , 42000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 22 410217 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 22 410217 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324332 
let wnum_cons2 = 2324332 
expression:wnum_cons2
evaluates to 2324332 
let wnum_cons = 2324332 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $911.51 
let wispt = $911.51 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 552.91 
let wimporte = 552.91 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324332@2022-07-22T17:57:44@99@7640.91@1464.42@MXN@@6176.49@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324332@2022-07-22T17:57:44@99@7640.91@1464.42@MXN@@6176.49@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 470 
let wnum_linea = 470 
expression:wnum_linea
evaluates to 470 
let wnum_lini = 470 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 471 
let wnum_linea = 471 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63742000@@@ 
let cadenac2 = CNE@603@@63742000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 472 
let wnum_linea = 472 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to ROLD970624SS6 ; ROLD970624HDFSNG09 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = ROLD970624HDFSNG09 
let wid_legal_bmex = ROLD970624SS6 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 473 
let wnum_linea = 473 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@ROLD970624SS6@ROSAS LUNA DIEGO SAUL@P01 
let cadenae02 = RC@ROLD970624SS6@ROSAS LUNA DIEGO SAUL@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 4 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 4 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 012180015089986174 ; SPEI ; TD ; 
let wforpago = TD 
let wbanco = SPEI 
let wcuenta = 012180015089986174 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to f 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to t 
expression:(= wbanco, "SPEI")
evaluates to t 
let desc_err = NOE DatosPago03 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE CtaSPEI 
expression:
  (select (substring num_cuenta, 1, 3)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 012 ; 
let wbanco_c = 012 
expression:(= (substring wcuenta, 1, 5), "00000")
evaluates to f 
expression:(= (substring wcuenta, 1, 4), "0000")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "000")
evaluates to f 
expression:(= (substring wcuenta, 1, 2), "00")
evaluates to f 
expression:(= (substring wcuenta, 1, 3), "0")
evaluates to f 
let desc_err = NOE DatosPago05 
expression:(<= (<procedure> length, wcuenta), 10)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 11)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 16)
evaluates to f 
expression:(<= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(<procedure> lpad, wcuenta, 18, "0")
evaluates to 012180015089986174 
let wcuenta = 012180015089986174 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to t 
expression:(|| "MCLR ->", (<procedure> length, wcuenta))
evaluates to MCLR ->18 
procedure spm4_layoutsatn_pruebas_2022_mq returns MCLR ->18 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
let wbanco_c =  
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-TD    -SPEI-012180015089986174 
let desc_err = NOE Arma-TD    -SPEI-012180015089986174 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 474 
let wnum_linea = 474 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 475 
let wnum_linea = 475 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@7640.91@7640.91@1464.42@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@7640.91@7640.91@1464.42@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 476 
let wnum_linea = 476 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@7640.91@@@7640.91@0.00@@@@@@@@@@ 
let cadenak = CNP@7640.91@@@7640.91@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 477 
let wnum_linea = 477 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = P ,  xi1 = 4118.50 ,  xc1 = 01 ,  wnum_linea = 477 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4118.50 
let ximp_gra = 4118.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4118.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4118.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 478 
let wnum_linea = 478 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 478 
procedure genlinsatn returns 478 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 478 
let wnum_linea = 478 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 478 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 479 
let wnum_linea = 479 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 479 
procedure genlinsatn returns 479 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 479 
let wnum_linea = 479 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 479 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 480 
let wnum_linea = 480 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 480 
procedure genlinsatn returns 480 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 480 
let wnum_linea = 480 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 480 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 481 
let wnum_linea = 481 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 481 
procedure genlinsatn returns 481 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 481 
let wnum_linea = 481 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = P ,  xi1 = 1586.50 ,  xc1 = 35 ,  wnum_linea = 481 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1586.50 
let ximp_gra = 1586.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1586.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1586.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 482 
let wnum_linea = 482 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 482 
procedure genlinsatn returns 482 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 482 
let wnum_linea = 482 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 482 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 483 
let wnum_linea = 483 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 483 
procedure genlinsatn returns 483 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 483 
let wnum_linea = 483 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@552.91@911.51 
let cadenaq = CND@552.91@911.51 
expression:(+ wnum_linea, 1)
evaluates to 484 
let wnum_linea = 484 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 20.59 ,  xc1 = 1S ,  wnum_linea = 484 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.59 
let ximp_exe = 20.59 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.59 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.59 
expression:(+ wnum_linea, 1)
evaluates to 485 
let wnum_linea = 485 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 485 
procedure genlinsatn returns 485 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 485 
let wnum_linea = 485 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 252.26 ,  xc1 = 4S ,  wnum_linea = 485 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 252.26 
let ximp_exe = 252.26 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@252.26 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@252.26 
expression:(+ wnum_linea, 1)
evaluates to 486 
let wnum_linea = 486 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 486 
procedure genlinsatn returns 486 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 486 
let wnum_linea = 486 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 911.51 ,  xc1 = 53 ,  wnum_linea = 486 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 911.51 
let ximp_exe = 911.51 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@911.51 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@911.51 
expression:(+ wnum_linea, 1)
evaluates to 487 
let wnum_linea = 487 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 487 
procedure genlinsatn returns 487 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 487 
let wnum_linea = 487 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 115.32 ,  xc1 = 65 ,  wnum_linea = 487 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 115.32 
let ximp_exe = 115.32 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@115.32 
let xcadenanoi = NDD@004@065@Seguro Institucional@115.32 
expression:(+ wnum_linea, 1)
evaluates to 488 
let wnum_linea = 488 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 488 
procedure genlinsatn returns 488 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 488 
let wnum_linea = 488 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 113.26 ,  xc1 = S7 ,  wnum_linea = 488 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 113.26 
let ximp_exe = 113.26 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@113.26 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@113.26 
expression:(+ wnum_linea, 1)
evaluates to 489 
let wnum_linea = 489 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 489 
procedure genlinsatn returns 489 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 489 
let wnum_linea = 489 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 25.74 ,  xc1 = S8 ,  wnum_linea = 489 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.74 
let ximp_exe = 25.74 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@25.74 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@25.74 
expression:(+ wnum_linea, 1)
evaluates to 490 
let wnum_linea = 490 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 490 
procedure genlinsatn returns 490 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 490 
let wnum_linea = 490 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 410217 ,  xp1 = D ,  xi1 = 25.74 ,  xc1 = S9 ,  wnum_linea = 490 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.74 
let ximp_exe = 25.74 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@25.74 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@25.74 
expression:(+ wnum_linea, 1)
evaluates to 491 
let wnum_linea = 491 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 491 
procedure genlinsatn returns 491 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 491 
let wnum_linea = 491 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 492 
let wnum_linea = 492 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 23 
let w_cont = 23 
select cursor iteration.
select cursor returns 01 , 411003 , 5353410 , $5664.74 , $1163.66 , $6828.40 , CARDONA CASTAï¿½EDA LIDIA , BNTE ,  , 32 , 3202120100 , 15200 , M02104 , P  , 01 , $3338.88 , P  , 02 , $387.50 , P                    , 04 , $667.78 , P  , 10 , $542.50 , D  , 1S , $20.03 , P  , 33 , $55.91 , P  , 35 , $1321.40 , P  , 48 , $514.43 , D                    , 4S , $245.41 , D  , 53 , $737.96 , D  , S7 , $110.18 , D  , S8 , $25.04 , D  , S9 , $25.04 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , CACL860612MZSRSD06 ,  , CACL860612FC2 , CARDONA CASTAï¿½EDA LIDIA , COCINERO EN CENTRO HOSPITALARIO , ALIMENTACION , 2 , 0 , 0 , 15 , 32000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 23 411003 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 23 411003 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324333 
let wnum_cons2 = 2324333 
expression:wnum_cons2
evaluates to 2324333 
let wnum_cons = 2324333 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $737.96 
let wispt = $737.96 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 425.70 
let wimporte = 425.70 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324333@2022-07-22T17:57:44@99@6828.40@1163.66@MXN@@5664.74@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324333@2022-07-22T17:57:44@99@6828.40@1163.66@MXN@@5664.74@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 493 
let wnum_linea = 493 
expression:wnum_linea
evaluates to 493 
let wnum_lini = 493 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 494 
let wnum_linea = 494 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63732000@@@ 
let cadenac2 = CNE@603@@63732000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 495 
let wnum_linea = 495 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to NULL. ; NULL. ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = NULL. 
let wid_legal_bmex = NULL. 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 496 
let wnum_linea = 496 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@CACL860612FC2@CARDONA CASTAï¿½EDA LIDIA@P01 
let cadenae02 = RC@CACL860612FC2@CARDONA CASTAï¿½EDA LIDIA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/06/2022 ; 15/06/2022 ; 2 ; 5 ; 23 ; 
let wid_nivel_wid_grupo_grado_nivel = 23 
let wid_sub_nivel_wid_integracion = 5 
let wid_zona = 2 
let wfec_imputacion = 15/06/2022 
let wfecha_ini_ts = 01/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to ZAC ; 
let westado_c = ZAC 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 497 
let wnum_linea = 497 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 498 
let wnum_linea = 498 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@6828.40@6828.40@1163.66@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@6828.40@6828.40@1163.66@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 499 
let wnum_linea = 499 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@6828.40@@@6828.40@0.00@@@@@@@@@@ 
let cadenak = CNP@6828.40@@@6828.40@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 500 
let wnum_linea = 500 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 3338.88 ,  xc1 = 01 ,  wnum_linea = 500 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3338.88 
let ximp_gra = 3338.88 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@3338.88@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@3338.88@0.00 
expression:(+ wnum_linea, 1)
evaluates to 501 
let wnum_linea = 501 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 501 
procedure genlinsatn returns 501 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 501 
let wnum_linea = 501 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 501 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 502 
let wnum_linea = 502 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 502 
procedure genlinsatn returns 502 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 502 
let wnum_linea = 502 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 667.78 ,  xc1 = 04 ,  wnum_linea = 502 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 667.78 
let ximp_gra = 667.78 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@667.78@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@667.78@0.00 
expression:(+ wnum_linea, 1)
evaluates to 503 
let wnum_linea = 503 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 503 
procedure genlinsatn returns 503 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 503 
let wnum_linea = 503 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 503 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 504 
let wnum_linea = 504 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 504 
procedure genlinsatn returns 504 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 504 
let wnum_linea = 504 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 504 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 505 
let wnum_linea = 505 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 505 
procedure genlinsatn returns 505 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 505 
let wnum_linea = 505 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 1321.40 ,  xc1 = 35 ,  wnum_linea = 505 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1321.40 
let ximp_gra = 1321.40 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1321.40@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1321.40@0.00 
expression:(+ wnum_linea, 1)
evaluates to 506 
let wnum_linea = 506 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 506 
procedure genlinsatn returns 506 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 506 
let wnum_linea = 506 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = P ,  xi1 = 514.43 ,  xc1 = 48 ,  wnum_linea = 506 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 514.43 
let ximp_gra = 514.43 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@514.43@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@514.43@0.00 
expression:(+ wnum_linea, 1)
evaluates to 507 
let wnum_linea = 507 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 507 
procedure genlinsatn returns 507 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 507 
let wnum_linea = 507 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@425.70@737.96 
let cadenaq = CND@425.70@737.96 
expression:(+ wnum_linea, 1)
evaluates to 508 
let wnum_linea = 508 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = D ,  xi1 = 20.03 ,  xc1 = 1S ,  wnum_linea = 508 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 20.03 
let ximp_exe = 20.03 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@20.03 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@20.03 
expression:(+ wnum_linea, 1)
evaluates to 509 
let wnum_linea = 509 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 509 
procedure genlinsatn returns 509 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 509 
let wnum_linea = 509 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = D ,  xi1 = 245.41 ,  xc1 = 4S ,  wnum_linea = 509 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 245.41 
let ximp_exe = 245.41 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@245.41 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@245.41 
expression:(+ wnum_linea, 1)
evaluates to 510 
let wnum_linea = 510 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 510 
procedure genlinsatn returns 510 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 510 
let wnum_linea = 510 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = D ,  xi1 = 737.96 ,  xc1 = 53 ,  wnum_linea = 510 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 737.96 
let ximp_exe = 737.96 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@737.96 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@737.96 
expression:(+ wnum_linea, 1)
evaluates to 511 
let wnum_linea = 511 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 511 
procedure genlinsatn returns 511 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 511 
let wnum_linea = 511 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = D ,  xi1 = 110.18 ,  xc1 = S7 ,  wnum_linea = 511 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 110.18 
let ximp_exe = 110.18 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@110.18 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@110.18 
expression:(+ wnum_linea, 1)
evaluates to 512 
let wnum_linea = 512 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 512 
procedure genlinsatn returns 512 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 512 
let wnum_linea = 512 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = D ,  xi1 = 25.04 ,  xc1 = S8 ,  wnum_linea = 512 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.04 
let ximp_exe = 25.04 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@25.04 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@25.04 
expression:(+ wnum_linea, 1)
evaluates to 513 
let wnum_linea = 513 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 513 
procedure genlinsatn returns 513 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 513 
let wnum_linea = 513 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411003 ,  xp1 = D ,  xi1 = 25.04 ,  xc1 = S9 ,  wnum_linea = 513 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25.04 
let ximp_exe = 25.04 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@25.04 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@25.04 
expression:(+ wnum_linea, 1)
evaluates to 514 
let wnum_linea = 514 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 514 
procedure genlinsatn returns 514 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 514 
let wnum_linea = 514 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 515 
let wnum_linea = 515 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 24 
let w_cont = 24 
select cursor iteration.
select cursor returns 01 , 411789 , 5357891 , $7864.77 , $2088.84 , $9953.61 , TORRES JIMENEZ KARLA MARGARITA , BNTE ,  , 10 , 1004200100 , EK043 , M03022 , P  , 01 , $4118.50 , P  , 02 , $387.50 , P                    , 04 , $411.85 , P  , 07 , $1900.85 , P  , 10 , $542.50 , D  , 1S , $32.16 , P  , 33 , $55.91 , P  , 35 , $1586.50 , P                    , 48 , $950.00 , D  , 4S , $393.91 , D  , 53 , $1405.51 , D  , S7 , $176.86 , D  , S8 , $40.20 , D  , S9 , $40.20 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , TOJK920512MDGRMR01 ,  , TOJK920512BX2 , TORRES JIMENEZ KARLA MARGARITA , APOYO ADMINISTRATIVO EN SALUD - A4 , ASISTENCIA , 2 , 0 , 0 , 15 , 10000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 24 411789 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 24 411789 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324334 
let wnum_cons2 = 2324334 
expression:wnum_cons2
evaluates to 2324334 
let wnum_cons = 2324334 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to f 
expression:(= wc11, "53")
evaluates to t 
expression:wi11
evaluates to $1405.51 
let wispt = $1405.51 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 683.33 
let wimporte = 683.33 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324334@2022-07-22T17:57:44@99@9953.61@2088.84@MXN@@7864.77@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324334@2022-07-22T17:57:44@99@9953.61@2088.84@MXN@@7864.77@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 516 
let wnum_linea = 516 
expression:wnum_linea
evaluates to 516 
let wnum_lini = 516 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 517 
let wnum_linea = 517 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63710000@@@ 
let cadenac2 = CNE@603@@63710000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 518 
let wnum_linea = 518 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to NULL. ; NULL. ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = NULL. 
let wid_legal_bmex = NULL. 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 519 
let wnum_linea = 519 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@TOJK920512BX2@TORRES JIMENEZ KARLA MARGARITA@P01 
let cadenae02 = RC@TOJK920512BX2@TORRES JIMENEZ KARLA MARGARITA@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 16/06/2022 ; 30/06/2022 ; 2 ; 4 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 4 
let wid_zona = 2 
let wfec_imputacion = 30/06/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; NULL. ; 
let wsindl = NULL. 
let wsindn = NULL. 
let wdiaantig = NULL. 
let wfec_alta = NULL. 
let wcont_des_tot = NULL. 
let wcon_pag = NULL. 
let wfal_ret = NULL. 
let wi2puesto = NULL. 
let wcen_trab = NULL. 
let wcen_pago = NULL. 
let wfec_alta_empleado = NULL. 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to NULL. 
let wfec_alta2 = NULL. 
expression:(> wsindl, 0)
evaluates to NULL. 
expression:(> wsindn, 0)
evaluates to NULL. 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DUR ; 
let westado_c = DUR 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to NULL. 
let wsem_ant = NULL. 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to NULL. 
let wantigf = NULL. 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to NULL. 
let cadnoea = NULL. 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 520 
let wnum_linea = 520 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 521 
let wnum_linea = 521 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@9953.61@9953.61@2088.84@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@9953.61@9953.61@2088.84@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 522 
let wnum_linea = 522 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@9953.61@@@9953.61@0.00@@@@@@@@@@ 
let cadenak = CNP@9953.61@@@9953.61@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 523 
let wnum_linea = 523 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 4118.50 ,  xc1 = 01 ,  wnum_linea = 523 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4118.50 
let ximp_gra = 4118.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@4118.50@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@4118.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 524 
let wnum_linea = 524 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 524 
procedure genlinsatn returns 524 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 524 
let wnum_linea = 524 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 387.50 ,  xc1 = 02 ,  wnum_linea = 524 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 387.50 
let ximp_gra = 387.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@387.50@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@387.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 525 
let wnum_linea = 525 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 525 
procedure genlinsatn returns 525 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 525 
let wnum_linea = 525 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 411.85 ,  xc1 = 04 ,  wnum_linea = 525 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 411.85 
let ximp_gra = 411.85 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@411.85@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@411.85@0.00 
expression:(+ wnum_linea, 1)
evaluates to 526 
let wnum_linea = 526 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 526 
procedure genlinsatn returns 526 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 526 
let wnum_linea = 526 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 1900.85 ,  xc1 = 07 ,  wnum_linea = 526 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Turno Opcional ; 
let xn_concepto = Turno Opcional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1900.85 
let ximp_gra = 1900.85 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@007@Turno Opcional@1900.85@0.00 
let xcadenanoi = NPD@@038@007@Turno Opcional@1900.85@0.00 
expression:(+ wnum_linea, 1)
evaluates to 527 
let wnum_linea = 527 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 527 
procedure genlinsatn returns 527 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 527 
let wnum_linea = 527 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 542.50 ,  xc1 = 10 ,  wnum_linea = 527 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 542.50 
let ximp_gra = 542.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@542.50@0.00 
let xcadenanoi = NPD@@038@010@Despensa@542.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 528 
let wnum_linea = 528 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 528 
procedure genlinsatn returns 528 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 528 
let wnum_linea = 528 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 55.91 ,  xc1 = 33 ,  wnum_linea = 528 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 55.91 
let ximp_gra = 55.91 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@55.91@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@55.91@0.00 
expression:(+ wnum_linea, 1)
evaluates to 529 
let wnum_linea = 529 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 529 
procedure genlinsatn returns 529 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 529 
let wnum_linea = 529 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 1586.50 ,  xc1 = 35 ,  wnum_linea = 529 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1586.50 
let ximp_gra = 1586.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@1586.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@1586.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 530 
let wnum_linea = 530 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 530 
procedure genlinsatn returns 530 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 530 
let wnum_linea = 530 
expression:(= wp9, "P")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = P ,  xi1 = 950.00 ,  xc1 = 48 ,  wnum_linea = 530 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 950.00 
let ximp_gra = 950.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@950.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 531 
let wnum_linea = 531 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 531 
procedure genlinsatn returns 531 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 531 
let wnum_linea = 531 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@683.33@1405.51 
let cadenaq = CND@683.33@1405.51 
expression:(+ wnum_linea, 1)
evaluates to 532 
let wnum_linea = 532 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = D ,  xi1 = 32.16 ,  xc1 = 1S ,  wnum_linea = 532 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 32.16 
let ximp_exe = 32.16 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@32.16 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@32.16 
expression:(+ wnum_linea, 1)
evaluates to 533 
let wnum_linea = 533 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 533 
procedure genlinsatn returns 533 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 533 
let wnum_linea = 533 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = D ,  xi1 = 393.91 ,  xc1 = 4S ,  wnum_linea = 533 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 393.91 
let ximp_exe = 393.91 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@393.91 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@393.91 
expression:(+ wnum_linea, 1)
evaluates to 534 
let wnum_linea = 534 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 534 
procedure genlinsatn returns 534 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 534 
let wnum_linea = 534 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = D ,  xi1 = 1405.51 ,  xc1 = 53 ,  wnum_linea = 534 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1405.51 
let ximp_exe = 1405.51 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1405.51 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1405.51 
expression:(+ wnum_linea, 1)
evaluates to 535 
let wnum_linea = 535 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 535 
procedure genlinsatn returns 535 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 535 
let wnum_linea = 535 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = D ,  xi1 = 176.86 ,  xc1 = S7 ,  wnum_linea = 535 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 176.86 
let ximp_exe = 176.86 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@176.86 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@176.86 
expression:(+ wnum_linea, 1)
evaluates to 536 
let wnum_linea = 536 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 536 
procedure genlinsatn returns 536 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 536 
let wnum_linea = 536 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = D ,  xi1 = 40.20 ,  xc1 = S8 ,  wnum_linea = 536 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 40.20 
let ximp_exe = 40.20 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@40.20 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@40.20 
expression:(+ wnum_linea, 1)
evaluates to 537 
let wnum_linea = 537 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 537 
procedure genlinsatn returns 537 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 537 
let wnum_linea = 537 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411789 ,  xp1 = D ,  xi1 = 40.20 ,  xc1 = S9 ,  wnum_linea = 537 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 40.20 
let ximp_exe = 40.20 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@40.20 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@40.20 
expression:(+ wnum_linea, 1)
evaluates to 538 
let wnum_linea = 538 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 538 
procedure genlinsatn returns 538 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 538 
let wnum_linea = 538 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 539 
let wnum_linea = 539 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 25 
let w_cont = 25 
select cursor iteration.
select cursor returns 01 , 411790 , 5315036 , $27841.28 , $8429.50 , $36270.78 , ROJAS CARRETE LUIS RICARDO , BNTE ,  , 10 , 1002120100 , 07380 , M01021 , P  , 01 , $14806.90 , P  , 02 , $775.00 , P                    , 04 , $2961.38 , P  , 10 , $1085.00 , D  , 1S , $88.84 , P  , 33 , $111.82 , P  , 35 , $6914.92 , P  , 48 , $9615.76 , D                    , 4S , $1088.30 , D  , 53 , $6506.76 , D  , D5 , $34.86 , D  , S7 , $488.62 , D  , S8 , $111.06 , D  , S9 , $111.06 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , ROCL880503HDGJRS09 ,  , ROCL880503EA8 , ROJAS CARRETE LUIS RICARDO , MEDICO ODONTOLOGO ESPECIALISTA "A" , ODONTOLOGIA ESPECIALIZADA , 11 , 0 , 2 , 16 , 10000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 25 411790 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 25 411790 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324335 
let wnum_cons2 = 2324335 
expression:wnum_cons2
evaluates to 2324335 
let wnum_cons = 2324335 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $6506.76 
let wispt = $6506.76 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 1922.74 
let wimporte = 1922.74 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324335@2022-07-22T17:57:44@99@36270.78@8429.50@MXN@@27841.28@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324335@2022-07-22T17:57:44@99@36270.78@8429.50@MXN@@27841.28@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 540 
let wnum_linea = 540 
expression:wnum_linea
evaluates to 540 
let wnum_lini = 540 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 541 
let wnum_linea = 541 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63710000@@@ 
let cadenac2 = CNE@603@@63710000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 542 
let wnum_linea = 542 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to NULL. ; NULL. ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = NULL. 
let wid_legal_bmex = NULL. 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 543 
let wnum_linea = 543 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@ROCL880503EA8@ROJAS CARRETE LUIS RICARDO@P01 
let cadenae02 = RC@ROCL880503EA8@ROJAS CARRETE LUIS RICARDO@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 30.00 ; 
let wporcent = 30.00 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 2 ; 16/06/2022 ; 15/07/2022 ; 2 ; 6 ; 14 ; 
let wid_nivel_wid_grupo_grado_nivel = 14 
let wid_sub_nivel_wid_integracion = 6 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 2 
expression:(= wbandera01, 1)
evaluates to f 
let wdiaantig = 999 
let wsindl = 999 
let wsindn = 999 
let wfec_alta = 01/01/2021 
expression:
  (select (max a.fec_imputacion)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 15/07/2022 ; 
let wfec_impu = 15/07/2022 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_imputacion, wfec_impu)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 16/06/2022 ; 30.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 30.0000 
let wfec_alta = 16/06/2022 
let desc_err = NOE acum_rl03 
expression:(null wfec_impu)
evaluates to f 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 16/06/2022 
let wfec_alta2 = 16/06/2022 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DUR ; 
let westado_c = DUR 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 4.2857142857142857 
let wsem_ant = 4.2857142857142857 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P4W 
let wantigf = P4W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-06-16@2022-07-15@15@36270.78@8429.50@0.00@ROCL880503HDGJRS09@99999999999@2022-06-16@P4W@01@No@01@02@411790@ 
let cadnoea = CNR@O@2022-07-15@2022-06-16@2022-07-15@15@36270.78@8429.50@0.00@ROCL880503HDGJRS09@99999999999@2022-06-16@P4W@01@No@01@02@411790@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 544 
let wnum_linea = 544 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 545 
let wnum_linea = 545 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@36270.78@36270.78@8429.50@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@36270.78@36270.78@8429.50@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 546 
let wnum_linea = 546 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@36270.78@@@36270.78@0.00@@@@@@@@@@ 
let cadenak = CNP@36270.78@@@36270.78@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 547 
let wnum_linea = 547 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 14806.90 ,  xc1 = 01 ,  wnum_linea = 547 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 14806.90 
let ximp_gra = 14806.90 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@14806.90@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@14806.90@0.00 
expression:(+ wnum_linea, 1)
evaluates to 548 
let wnum_linea = 548 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 548 
procedure genlinsatn returns 548 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 548 
let wnum_linea = 548 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 775.00 ,  xc1 = 02 ,  wnum_linea = 548 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 775.00 
let ximp_gra = 775.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@775.00@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@775.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 549 
let wnum_linea = 549 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 549 
procedure genlinsatn returns 549 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 549 
let wnum_linea = 549 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 2961.38 ,  xc1 = 04 ,  wnum_linea = 549 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 2961.38 
let ximp_gra = 2961.38 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@2961.38@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@2961.38@0.00 
expression:(+ wnum_linea, 1)
evaluates to 550 
let wnum_linea = 550 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 550 
procedure genlinsatn returns 550 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 550 
let wnum_linea = 550 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 1085.00 ,  xc1 = 10 ,  wnum_linea = 550 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1085.00 
let ximp_gra = 1085.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@1085.00@0.00 
let xcadenanoi = NPD@@038@010@Despensa@1085.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 551 
let wnum_linea = 551 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 551 
procedure genlinsatn returns 551 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 551 
let wnum_linea = 551 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 111.82 ,  xc1 = 33 ,  wnum_linea = 551 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 111.82 
let ximp_gra = 111.82 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@111.82@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@111.82@0.00 
expression:(+ wnum_linea, 1)
evaluates to 552 
let wnum_linea = 552 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 552 
procedure genlinsatn returns 552 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 552 
let wnum_linea = 552 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 6914.92 ,  xc1 = 35 ,  wnum_linea = 552 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 6914.92 
let ximp_gra = 6914.92 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@6914.92@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@6914.92@0.00 
expression:(+ wnum_linea, 1)
evaluates to 553 
let wnum_linea = 553 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 553 
procedure genlinsatn returns 553 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 553 
let wnum_linea = 553 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = P ,  xi1 = 9615.76 ,  xc1 = 48 ,  wnum_linea = 553 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 9615.76 
let ximp_gra = 9615.76 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@9615.76@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@9615.76@0.00 
expression:(+ wnum_linea, 1)
evaluates to 554 
let wnum_linea = 554 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 554 
procedure genlinsatn returns 554 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 554 
let wnum_linea = 554 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@1922.74@6506.76 
let cadenaq = CND@1922.74@6506.76 
expression:(+ wnum_linea, 1)
evaluates to 555 
let wnum_linea = 555 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 88.84 ,  xc1 = 1S ,  wnum_linea = 555 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 88.84 
let ximp_exe = 88.84 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@88.84 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@88.84 
expression:(+ wnum_linea, 1)
evaluates to 556 
let wnum_linea = 556 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 556 
procedure genlinsatn returns 556 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 556 
let wnum_linea = 556 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 1088.30 ,  xc1 = 4S ,  wnum_linea = 556 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1088.30 
let ximp_exe = 1088.30 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@1088.30 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@1088.30 
expression:(+ wnum_linea, 1)
evaluates to 557 
let wnum_linea = 557 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 557 
procedure genlinsatn returns 557 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 557 
let wnum_linea = 557 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 6506.76 ,  xc1 = 53 ,  wnum_linea = 557 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 6506.76 
let ximp_exe = 6506.76 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@6506.76 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@6506.76 
expression:(+ wnum_linea, 1)
evaluates to 558 
let wnum_linea = 558 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 558 
procedure genlinsatn returns 558 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 558 
let wnum_linea = 558 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 34.86 ,  xc1 = D5 ,  wnum_linea = 558 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 34.86 
let ximp_exe = 34.86 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@34.86 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@34.86 
expression:(+ wnum_linea, 1)
evaluates to 559 
let wnum_linea = 559 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 559 
procedure genlinsatn returns 559 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 559 
let wnum_linea = 559 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 488.62 ,  xc1 = S7 ,  wnum_linea = 559 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 488.62 
let ximp_exe = 488.62 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@488.62 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@488.62 
expression:(+ wnum_linea, 1)
evaluates to 560 
let wnum_linea = 560 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 560 
procedure genlinsatn returns 560 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 560 
let wnum_linea = 560 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 111.06 ,  xc1 = S8 ,  wnum_linea = 560 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 111.06 
let ximp_exe = 111.06 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@111.06 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@111.06 
expression:(+ wnum_linea, 1)
evaluates to 561 
let wnum_linea = 561 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 561 
procedure genlinsatn returns 561 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 561 
let wnum_linea = 561 
expression:(= wp14, "D")
evaluates to t 
expression:(and (<> wi14, 0), (= flg14, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411790 ,  xp1 = D ,  xi1 = 111.06 ,  xc1 = S9 ,  wnum_linea = 561 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 111.06 
let ximp_exe = 111.06 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@111.06 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@111.06 
expression:(+ wnum_linea, 1)
evaluates to 562 
let wnum_linea = 562 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 562 
procedure genlinsatn returns 562 

expression:(<procedure> genlinsatn, wemp, wp14, wi14, wc14, wnum_linea, wid_empresa)
evaluates to 562 
let wnum_linea = 562 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 563 
let wnum_linea = 563 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 26 
let w_cont = 26 
select cursor iteration.
select cursor returns 01 , 411791 , 5308300 , $13143.88 , $2961.64 , $16105.52 , BENITEZ MARTINEZ OSCAR , BNTE ,  , 10 , 1002120100 , 15400 , M03022 , P  , 01 , $8237.00 , P  , 02 , $775.00 , P                    , 04 , $823.70 , P  , 10 , $1085.00 , D  , 1S , $45.30 , P  , 33 , $111.82 , P  , 35 , $3173.00 , P  , 48 , $1900.00 , D                    , 4S , $554.96 , D  , 53 , $1998.98 , D  , S7 , $249.16 , D  , S8 , $56.62 , D  , S9 , $56.62 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , BEMO900827HDGNRS03 ,  , BEMO900827ANA , BENITEZ MARTINEZ OSCAR , APOYO ADMINISTRATIVO EN SALUD - A4 , TRANSPORTES , 6 , 0 , 1 , 15 , 10000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 26 411791 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 26 411791 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324336 
let wnum_cons2 = 2324336 
expression:wnum_cons2
evaluates to 2324336 
let wnum_cons = 2324336 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to t 
expression:wi10
evaluates to $1998.98 
let wispt = $1998.98 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 962.66 
let wimporte = 962.66 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324336@2022-07-22T17:57:44@99@16105.52@2961.64@MXN@@13143.88@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324336@2022-07-22T17:57:44@99@16105.52@2961.64@MXN@@13143.88@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 564 
let wnum_linea = 564 
expression:wnum_linea
evaluates to 564 
let wnum_lini = 564 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 565 
let wnum_linea = 565 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63710000@@@ 
let cadenac2 = CNE@603@@63710000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 566 
let wnum_linea = 566 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to NULL. ; NULL. ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = NULL. 
let wid_legal_bmex = NULL. 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 567 
let wnum_linea = 567 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@BEMO900827ANA@BENITEZ MARTINEZ OSCAR@P01 
let cadenae02 = RC@BEMO900827ANA@BENITEZ MARTINEZ OSCAR@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 2 ; 16/06/2022 ; 15/07/2022 ; 2 ; 4 ; 27 ; 
let wid_nivel_wid_grupo_grado_nivel = 27 
let wid_sub_nivel_wid_integracion = 4 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 2 
expression:(= wbandera01, 1)
evaluates to f 
let wdiaantig = 999 
let wsindl = 999 
let wsindn = 999 
let wfec_alta = 01/01/2021 
expression:
  (select (max a.fec_imputacion)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 15/07/2022 ; 
let wfec_impu = 15/07/2022 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_imputacion, wfec_impu)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 16/06/2022 ; 30.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 30.0000 
let wfec_alta = 16/06/2022 
let desc_err = NOE acum_rl03 
expression:(null wfec_impu)
evaluates to f 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 16/06/2022 
let wfec_alta2 = 16/06/2022 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DUR ; 
let westado_c = DUR 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 4.2857142857142857 
let wsem_ant = 4.2857142857142857 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P4W 
let wantigf = P4W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-06-16@2022-07-15@15@16105.52@2961.64@0.00@BEMO900827HDGNRS03@99999999999@2022-06-16@P4W@01@No@01@02@411791@ 
let cadnoea = CNR@O@2022-07-15@2022-06-16@2022-07-15@15@16105.52@2961.64@0.00@BEMO900827HDGNRS03@99999999999@2022-06-16@P4W@01@No@01@02@411791@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 568 
let wnum_linea = 568 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 569 
let wnum_linea = 569 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@16105.52@16105.52@2961.64@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@16105.52@16105.52@2961.64@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 570 
let wnum_linea = 570 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@16105.52@@@16105.52@0.00@@@@@@@@@@ 
let cadenak = CNP@16105.52@@@16105.52@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 571 
let wnum_linea = 571 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 8237.00 ,  xc1 = 01 ,  wnum_linea = 571 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 8237.00 
let ximp_gra = 8237.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@8237.00@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@8237.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 572 
let wnum_linea = 572 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 572 
procedure genlinsatn returns 572 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 572 
let wnum_linea = 572 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 775.00 ,  xc1 = 02 ,  wnum_linea = 572 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 775.00 
let ximp_gra = 775.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@775.00@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@775.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 573 
let wnum_linea = 573 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 573 
procedure genlinsatn returns 573 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 573 
let wnum_linea = 573 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 823.70 ,  xc1 = 04 ,  wnum_linea = 573 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 823.70 
let ximp_gra = 823.70 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@823.70@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@823.70@0.00 
expression:(+ wnum_linea, 1)
evaluates to 574 
let wnum_linea = 574 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 574 
procedure genlinsatn returns 574 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 574 
let wnum_linea = 574 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 1085.00 ,  xc1 = 10 ,  wnum_linea = 574 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1085.00 
let ximp_gra = 1085.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@1085.00@0.00 
let xcadenanoi = NPD@@038@010@Despensa@1085.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 575 
let wnum_linea = 575 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 575 
procedure genlinsatn returns 575 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 575 
let wnum_linea = 575 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 111.82 ,  xc1 = 33 ,  wnum_linea = 575 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 111.82 
let ximp_gra = 111.82 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@111.82@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@111.82@0.00 
expression:(+ wnum_linea, 1)
evaluates to 576 
let wnum_linea = 576 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 576 
procedure genlinsatn returns 576 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 576 
let wnum_linea = 576 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 3173.00 ,  xc1 = 35 ,  wnum_linea = 576 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3173.00 
let ximp_gra = 3173.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@3173.00@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@3173.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 577 
let wnum_linea = 577 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 577 
procedure genlinsatn returns 577 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 577 
let wnum_linea = 577 
expression:(= wp8, "P")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = P ,  xi1 = 1900.00 ,  xc1 = 48 ,  wnum_linea = 577 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1900.00 
let ximp_gra = 1900.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@1900.00@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@1900.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 578 
let wnum_linea = 578 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 578 
procedure genlinsatn returns 578 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 578 
let wnum_linea = 578 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@962.66@1998.98 
let cadenaq = CND@962.66@1998.98 
expression:(+ wnum_linea, 1)
evaluates to 579 
let wnum_linea = 579 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = D ,  xi1 = 45.30 ,  xc1 = 1S ,  wnum_linea = 579 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 45.30 
let ximp_exe = 45.30 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@45.30 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@45.30 
expression:(+ wnum_linea, 1)
evaluates to 580 
let wnum_linea = 580 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 580 
procedure genlinsatn returns 580 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 580 
let wnum_linea = 580 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = D ,  xi1 = 554.96 ,  xc1 = 4S ,  wnum_linea = 580 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 554.96 
let ximp_exe = 554.96 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@554.96 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@554.96 
expression:(+ wnum_linea, 1)
evaluates to 581 
let wnum_linea = 581 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 581 
procedure genlinsatn returns 581 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 581 
let wnum_linea = 581 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = D ,  xi1 = 1998.98 ,  xc1 = 53 ,  wnum_linea = 581 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1998.98 
let ximp_exe = 1998.98 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1998.98 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1998.98 
expression:(+ wnum_linea, 1)
evaluates to 582 
let wnum_linea = 582 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 582 
procedure genlinsatn returns 582 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 582 
let wnum_linea = 582 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = D ,  xi1 = 249.16 ,  xc1 = S7 ,  wnum_linea = 582 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 249.16 
let ximp_exe = 249.16 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@249.16 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@249.16 
expression:(+ wnum_linea, 1)
evaluates to 583 
let wnum_linea = 583 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 583 
procedure genlinsatn returns 583 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 583 
let wnum_linea = 583 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = D ,  xi1 = 56.62 ,  xc1 = S8 ,  wnum_linea = 583 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 56.62 
let ximp_exe = 56.62 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@56.62 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@56.62 
expression:(+ wnum_linea, 1)
evaluates to 584 
let wnum_linea = 584 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 584 
procedure genlinsatn returns 584 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 584 
let wnum_linea = 584 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411791 ,  xp1 = D ,  xi1 = 56.62 ,  xc1 = S9 ,  wnum_linea = 584 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 56.62 
let ximp_exe = 56.62 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@56.62 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@56.62 
expression:(+ wnum_linea, 1)
evaluates to 585 
let wnum_linea = 585 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 585 
procedure genlinsatn returns 585 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 585 
let wnum_linea = 585 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 586 
let wnum_linea = 586 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 27 
let w_cont = 27 
select cursor iteration.
select cursor returns 01 , 411792 , 5301575 , $14183.88 , $3077.94 , $17261.82 , SAAVEDRA MALDONADO ARLETTE JAZMIN , BNTE ,  , 10 , 1002120100 , 04231 , M02036 , P  , 01 , $7687.06 , P  , 02 , $775.00 , P                    , 10 , $1085.00 , D  , 1S , $38.44 , P  , 33 , $111.82 , P  , 35 , $4272.50 , P  , 48 , $3330.44 , D  , 4S , $470.84 , D                    , 53 , $2245.96 , D  , D5 , $15.22 , D  , S7 , $211.40 , D  , S8 , $48.04 , D  , S9 , $48.04 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , SAMA950914MDGVLR09 ,  , SAMA950914KM5 , SAAVEDRA MALDONADO ARLETTE JAZMIN , AUXILIAR DE ENFERMERIA "A" , HEMODIALISIS , 6 , 0 , 1 , 15 , 10000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 27 411792 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 27 411792 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324337 
let wnum_cons2 = 2324337 
expression:wnum_cons2
evaluates to 2324337 
let wnum_cons = 2324337 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to t 
expression:wi9
evaluates to $2245.96 
let wispt = $2245.96 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 831.98 
let wimporte = 831.98 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324337@2022-07-22T17:57:44@99@17261.82@3077.94@MXN@@14183.88@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324337@2022-07-22T17:57:44@99@17261.82@3077.94@MXN@@14183.88@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 587 
let wnum_linea = 587 
expression:wnum_linea
evaluates to 587 
let wnum_lini = 587 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 588 
let wnum_linea = 588 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63710000@@@ 
let cadenac2 = CNE@603@@63710000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 589 
let wnum_linea = 589 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to NULL. ; NULL. ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = NULL. 
let wid_legal_bmex = NULL. 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 590 
let wnum_linea = 590 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@SAMA950914KM5@SAAVEDRA MALDONADO ARLETTE JAZMIN@P01 
let cadenae02 = RC@SAMA950914KM5@SAAVEDRA MALDONADO ARLETTE JAZMIN@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 23.52 ; 
let wporcent = 23.52 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 2 ; 16/06/2022 ; 15/07/2022 ; 2 ; 6 ; 03 ; 
let wid_nivel_wid_grupo_grado_nivel = 03 
let wid_sub_nivel_wid_integracion = 6 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 16/06/2022 
let wbandera01 = 2 
expression:(= wbandera01, 1)
evaluates to f 
let wdiaantig = 999 
let wsindl = 999 
let wsindn = 999 
let wfec_alta = 01/01/2021 
expression:
  (select (max a.fec_imputacion)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 15/07/2022 ; 
let wfec_impu = 15/07/2022 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_imputacion, wfec_impu)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 16/06/2022 ; 30.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 30.0000 
let wfec_alta = 16/06/2022 
let desc_err = NOE acum_rl03 
expression:(null wfec_impu)
evaluates to f 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to NULL. ; 
let wd2puesto = NULL. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 16/06/2022 
let wfec_alta2 = 16/06/2022 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DUR ; 
let westado_c = DUR 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL. ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = NULL. 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to t 
let wcuenta = 99999999999 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 4.2857142857142857 
let wsem_ant = 4.2857142857142857 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P4W 
let wantigf = P4W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-06-16@2022-07-15@15@17261.82@3077.94@0.00@SAMA950914MDGVLR09@99999999999@2022-06-16@P4W@01@No@01@02@411792@ 
let cadnoea = CNR@O@2022-07-15@2022-06-16@2022-07-15@15@17261.82@3077.94@0.00@SAMA950914MDGVLR09@99999999999@2022-06-16@P4W@01@No@01@02@411792@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to NULL. 
let cadnoeb = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 591 
let wnum_linea = 591 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to NULL. 
let cadnoec = NULL. 
expression:(+ wnum_linea, 1)
evaluates to 592 
let wnum_linea = 592 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@17261.82@17261.82@3077.94@@                                                                                                                                                                          
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@17261.82@17261.82@3077.94@@                                                                                                                                                                          
expression:(+ wnum_linea, 1)
evaluates to 593 
let wnum_linea = 593 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@17261.82@@@17261.82@0.00@@@@@@@@@@ 
let cadenak = CNP@17261.82@@@17261.82@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 594 
let wnum_linea = 594 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = P ,  xi1 = 7687.06 ,  xc1 = 01 ,  wnum_linea = 594 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 1 ; Sueldo ; 
let xn_concepto = Sueldo 
let xgrav = 1 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 7687.06 
let ximp_gra = 7687.06 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@001@001@Sueldo@7687.06@0.00 
let xcadenanoi = NPD@@001@001@Sueldo@7687.06@0.00 
expression:(+ wnum_linea, 1)
evaluates to 595 
let wnum_linea = 595 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 595 
procedure genlinsatn returns 595 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 595 
let wnum_linea = 595 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = P ,  xi1 = 775.00 ,  xc1 = 02 ,  wnum_linea = 595 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Prevision social ; 
let xn_concepto = Prevision social 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 775.00 
let ximp_gra = 775.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@002@Prevision social@775.00@0.00 
let xcadenanoi = NPD@@038@002@Prevision social@775.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 596 
let wnum_linea = 596 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 596 
procedure genlinsatn returns 596 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 596 
let wnum_linea = 596 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = P ,  xi1 = 1085.00 ,  xc1 = 10 ,  wnum_linea = 596 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Despensa ; 
let xn_concepto = Despensa 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 1085.00 
let ximp_gra = 1085.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@010@Despensa@1085.00@0.00 
let xcadenanoi = NPD@@038@010@Despensa@1085.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 597 
let wnum_linea = 597 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 597 
procedure genlinsatn returns 597 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 597 
let wnum_linea = 597 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = P ,  xi1 = 111.82 ,  xc1 = 33 ,  wnum_linea = 597 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 111.82 
let ximp_gra = 111.82 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@111.82@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@111.82@0.00 
expression:(+ wnum_linea, 1)
evaluates to 598 
let wnum_linea = 598 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 598 
procedure genlinsatn returns 598 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 598 
let wnum_linea = 598 
expression:(= wp6, "P")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = P ,  xi1 = 4272.50 ,  xc1 = 35 ,  wnum_linea = 598 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Asignacion ; 
let xn_concepto = Asignacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 4272.50 
let ximp_gra = 4272.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@035@Asignacion@4272.50@0.00 
let xcadenanoi = NPD@@038@035@Asignacion@4272.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 599 
let wnum_linea = 599 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 599 
procedure genlinsatn returns 599 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 599 
let wnum_linea = 599 
expression:(= wp7, "P")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = P ,  xi1 = 3330.44 ,  xc1 = 48 ,  wnum_linea = 599 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Ayuda Gastos Actualizacion ; 
let xn_concepto = Ayuda Gastos Actualizacion 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3330.44 
let ximp_gra = 3330.44 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@048@Ayuda Gastos Actualizacion@3330.44@0.00 
let xcadenanoi = NPD@@038@048@Ayuda Gastos Actualizacion@3330.44@0.00 
expression:(+ wnum_linea, 1)
evaluates to 600 
let wnum_linea = 600 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 600 
procedure genlinsatn returns 600 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 600 
let wnum_linea = 600 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@831.98@2245.96 
let cadenaq = CND@831.98@2245.96 
expression:(+ wnum_linea, 1)
evaluates to 601 
let wnum_linea = 601 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 38.44 ,  xc1 = 1S ,  wnum_linea = 601 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 38.44 
let ximp_exe = 38.44 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@38.44 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@38.44 
expression:(+ wnum_linea, 1)
evaluates to 602 
let wnum_linea = 602 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 602 
procedure genlinsatn returns 602 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 602 
let wnum_linea = 602 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 470.84 ,  xc1 = 4S ,  wnum_linea = 602 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 470.84 
let ximp_exe = 470.84 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@470.84 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@470.84 
expression:(+ wnum_linea, 1)
evaluates to 603 
let wnum_linea = 603 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 603 
procedure genlinsatn returns 603 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 603 
let wnum_linea = 603 
expression:(= wp9, "D")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 2245.96 ,  xc1 = 53 ,  wnum_linea = 603 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 2245.96 
let ximp_exe = 2245.96 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@2245.96 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@2245.96 
expression:(+ wnum_linea, 1)
evaluates to 604 
let wnum_linea = 604 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 604 
procedure genlinsatn returns 604 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 604 
let wnum_linea = 604 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 15.22 ,  xc1 = D5 ,  wnum_linea = 604 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 15.22 
let ximp_exe = 15.22 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@15.22 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@15.22 
expression:(+ wnum_linea, 1)
evaluates to 605 
let wnum_linea = 605 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 605 
procedure genlinsatn returns 605 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 605 
let wnum_linea = 605 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 211.40 ,  xc1 = S7 ,  wnum_linea = 605 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 211.40 
let ximp_exe = 211.40 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@211.40 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@211.40 
expression:(+ wnum_linea, 1)
evaluates to 606 
let wnum_linea = 606 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 606 
procedure genlinsatn returns 606 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 606 
let wnum_linea = 606 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 48.04 ,  xc1 = S8 ,  wnum_linea = 606 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 48.04 
let ximp_exe = 48.04 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@48.04 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@48.04 
expression:(+ wnum_linea, 1)
evaluates to 607 
let wnum_linea = 607 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 607 
procedure genlinsatn returns 607 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 607 
let wnum_linea = 607 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 411792 ,  xp1 = D ,  xi1 = 48.04 ,  xc1 = S9 ,  wnum_linea = 607 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 48.04 
let ximp_exe = 48.04 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@48.04 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@48.04 
expression:(+ wnum_linea, 1)
evaluates to 608 
let wnum_linea = 608 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 608 
procedure genlinsatn returns 608 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 608 
let wnum_linea = 608 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 609 
let wnum_linea = 609 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 28 
let w_cont = 28 
select cursor iteration.
select cursor returns 01 , 502391 , 5293410 , $408.24 , $11.76 , $420.00 , DELGADO ZUï¿½IGA SOFIA , SR ,  , 05 , 0502120100 , 11100 , P15002 , P  , 12 , $420.00 , D  , 65 , $11.76 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , DEZS981218MCLLXF09 ,  , DEZS981218W2 , DELGADO ZUï¿½IGA SOFIA , PASANTE DE SERVS. ODONTOLOG. , COORDINACION DE ATENCION MEDICA , 24 , 0 , 5 , 19 , 05000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 28 502391 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 28 502391 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324338 
let wnum_cons2 = 2324338 
expression:wnum_cons2
evaluates to 2324338 
let wnum_cons = 2324338 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to f 
expression:(= wc7, "53")
evaluates to f 
expression:(= wc8, "53")
evaluates to f 
expression:(= wc9, "53")
evaluates to f 
expression:(= wc10, "53")
evaluates to f 
expression:(= wc11, "53")
evaluates to f 
expression:(= wc12, "53")
evaluates to f 
expression:(= wc13, "53")
evaluates to f 
expression:(= wc14, "53")
evaluates to f 
expression:(= wc15, "53")
evaluates to f 
expression:(= wc16, "53")
evaluates to f 
expression:(= wc17, "53")
evaluates to f 
expression:(= wc18, "53")
evaluates to f 
expression:(= wc19, "53")
evaluates to f 
expression:(= wc20, "53")
evaluates to f 
expression:(= wc21, "53")
evaluates to f 
expression:(= wc22, "53")
evaluates to f 
expression:(= wc23, "53")
evaluates to f 
expression:(= wc24, "53")
evaluates to f 
expression:(= wc25, "53")
evaluates to f 
expression:(= wc26, "53")
evaluates to f 
expression:(= wc27, "53")
evaluates to f 
expression:(= wc28, "53")
evaluates to f 
expression:(= wc29, "53")
evaluates to f 
expression:(= wc30, "53")
evaluates to f 
expression:(= wc31, "53")
evaluates to f 
expression:(= wc32, "53")
evaluates to f 
expression:(= wc33, "53")
evaluates to f 
expression:(= wc34, "53")
evaluates to f 
expression:(= wc35, "53")
evaluates to f 
expression:(= wc36, "53")
evaluates to f 
expression:(= wc37, "53")
evaluates to f 
expression:(= wc38, "53")
evaluates to f 
expression:(= wc39, "53")
evaluates to f 
expression:(= wc40, "53")
evaluates to f 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 11.76 
let wimporte = 11.76 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324338@2022-07-22T17:57:44@99@420.00@11.76@MXN@@408.24@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324338@2022-07-22T17:57:44@99@420.00@11.76@MXN@@408.24@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 610 
let wnum_linea = 610 
expression:wnum_linea
evaluates to 610 
let wnum_lini = 610 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 611 
let wnum_linea = 611 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63705000@@@ 
let cadenac2 = CNE@603@@63705000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 612 
let wnum_linea = 612 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to NULL. ; NULL. ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = NULL. 
let wid_legal_bmex = NULL. 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to t 
expression:wid_legal_bmex
evaluates to NULL. 
let wid_legal = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to NULL. 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 613 
let wnum_linea = 613 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to NULL. 
let cadenae02 = NULL. 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 6.40 ; 
let wporcent = 6.40 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/07/2022 ; 15/07/2022 ; 2 ; 4 ; 58 ; 
let wid_nivel_wid_grupo_grado_nivel = 58 
let wid_sub_nivel_wid_integracion = 4 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 01/07/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 01/02/2022 ; 00256 ; 00256 ; P15002 ;   ; 0.0000000000000000 ; 0.0000000000000000 ; 01/02/2022 ; 165.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 165.0000 
let wfec_alta = 01/02/2022 
let wcont_des_tot = 0.0000000000000000 
let wcon_pag = 0.0000000000000000 
let wfal_ret =   
let wi2puesto = P15002 
let wcen_trab = 00256 
let wcen_pago = 00256 
let wfec_alta_empleado = 01/02/2022 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to PASANTE DE SERVS. ODONTOLOG. ; 
let wd2puesto = PASANTE DE SERVS. ODONTOLOG. 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 01/02/2022 
let wfec_alta2 = 01/02/2022 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to COA ; 
let westado_c = COA 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL ; SR ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = SR 
let wcuenta = NULL 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 23.5714285714285714 
let wsem_ant = 23.5714285714285714 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P23W 
let wantigf = P23W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-07-01@2022-07-15@15@420.00@11.76@0.00@DEZS981218MCLLXF09@99999999999@2022-02-01@P23W@01@No@01@02@502391@ 
let cadnoea = CNR@O@2022-07-15@2022-07-01@2022-07-15@15@420.00@11.76@0.00@DEZS981218MCLLXF09@99999999999@2022-02-01@P23W@01@No@01@02@502391@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to COORDINACION DE ATENCION MEDICA@PASANTE DE SERVS. ODONTOLOG.@1@04@002@99999999999@@0.00@COA@ 
let cadnoeb = COORDINACION DE ATENCION MEDICA@PASANTE DE SERVS. ODONTOLOG.@1@04@002@99999999999@@0.00@COA@ 
expression:(+ wnum_linea, 1)
evaluates to 614 
let wnum_linea = 614 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to CNR2@0 DE 0@@P15002@00256@00256@58/4@2/0@0@5@19@01/02/2022@24@                                                                                                                                                                                             
let cadnoec = CNR2@0 DE 0@@P15002@00256@00256@58/4@2/0@0@5@19@01/02/2022@24@                                                                                                                                                                                             
expression:(+ wnum_linea, 1)
evaluates to 615 
let wnum_linea = 615 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@420.00@420.00@11.76@@                                                                                                                                                                                
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@420.00@420.00@11.76@@                                                                                                                                                                                
expression:(+ wnum_linea, 1)
evaluates to 616 
let wnum_linea = 616 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@420.00@@@420.00@0.00@@@@@@@@@@ 
let cadenak = CNP@420.00@@@420.00@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 617 
let wnum_linea = 617 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 502391 ,  xp1 = P ,  xi1 = 420.00 ,  xc1 = 12 ,  wnum_linea = 617 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 015 ; 0 ; Beca Pasantes y de Pregrado ; 
let xn_concepto = Beca Pasantes y de Pregrado 
let xgrav = 0 
let xtip_perc = 015 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 420.00 
let ximp_exe = 420.00 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@015@012@Beca Pasantes y de Pregrado@0.00@420.00 
let xcadenanoi = NPD@@015@012@Beca Pasantes y de Pregrado@0.00@420.00 
expression:(+ wnum_linea, 1)
evaluates to 618 
let wnum_linea = 618 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 618 
procedure genlinsatn returns 618 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 618 
let wnum_linea = 618 
expression:(= wp2, "P")
evaluates to f 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@11.76@0.00 
let cadenaq = CND@11.76@0.00 
expression:(+ wnum_linea, 1)
evaluates to 619 
let wnum_linea = 619 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 502391 ,  xp1 = D ,  xi1 = 11.76 ,  xc1 = 65 ,  wnum_linea = 619 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 11.76 
let ximp_exe = 11.76 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@11.76 
let xcadenanoi = NDD@004@065@Seguro Institucional@11.76 
expression:(+ wnum_linea, 1)
evaluates to 620 
let wnum_linea = 620 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 620 
procedure genlinsatn returns 620 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 620 
let wnum_linea = 620 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 621 
let wnum_linea = 621 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 29 
let w_cont = 29 
select cursor iteration.
select cursor returns 01 , 503316 , 5349986 , $8001.30 , $1938.70 , $9940.00 , GUTIERREZ TELLER STEPHANIE ASTRID , BNMX ,  , 09 , 4302120201 , 04300 , M04001 , P  , 04 , $662.00 , D  , 1S , $19.86 , P                    , 33 , $47.50 , P  , 36 , $5920.50 , D  , 4S , $243.29 , D  , 53 , $1402.60 , D  , 65 , $92.68 , D  , 66 , $3.95 , P                    , B2 , $3310.00 , D  , D5 , $17.43 , D  , S7 , $109.23 , D  , S8 , $24.83 , D  , S9 , $24.83 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 , GUTS950208MDFTLT04 ,  , GUTS950208 , GUTIERREZ TELLER STEPHANIE ASTRID , MEDICO RESIDENTE 1ER. GRADO , MEDICINA INTERNA , 20 , 0 , 4 , 22 , 43000 , 06080 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 29 503316 
procedure spm4_layoutsatn_pruebas_2022_mq returns llevo lay---> 29 503316 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
expression:(+ wnum_cons2, 1)
evaluates to 2324339 
let wnum_cons2 = 2324339 
expression:wnum_cons2
evaluates to 2324339 
let wnum_cons = 2324339 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to f 
expression:(= wc4, "53")
evaluates to f 
expression:(= wc5, "53")
evaluates to f 
expression:(= wc6, "53")
evaluates to t 
expression:wi6
evaluates to $1402.60 
let wispt = $1402.60 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 536.10 
let wimporte = 536.10 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 

insert into valida_timbrado_mejoras_query(fec_pago, id_empleado, tot_per, tot_ded, tot_net, isr, id_empresa)
  values (wfec_pago, wemp, wperc, wdeduc, wliquido, wispt, wid_empresa);
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324339@2022-07-22T17:57:44@99@9940.00@1938.70@MXN@@8001.30@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324339@2022-07-22T17:57:44@99@9940.00@1938.70@MXN@@8001.30@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 622 
let wnum_linea = 622 
expression:wnum_linea
evaluates to 622 
let wnum_lini = 622 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 623 
let wnum_linea = 623 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63743000@@@ 
let cadenac2 = CNE@603@@63743000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 624 
let wnum_linea = 624 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:
  (select nss, curp, filiacion
    from m4_inf_bmex
    where (and (= id_empleado, wemp), (= u_version, "I")))
evaluates to GUTS950208    ; GUTS950208MDFTLT04 ; NULL. ; 
let wnumero_ss_bmex = NULL. 
let wcurp_bmex = GUTS950208MDFTLT04 
let wid_legal_bmex = GUTS950208    
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
expression:wnumero_ss_bmex
evaluates to NULL. 
let wnumero_ss = NULL. 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to t 
expression:wid_legal_bmex
evaluates to GUTS950208    
let wid_legal = GUTS950208    
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to t 
let wid_legal = ERROR_RFC 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (<> (<procedure> length, wcurp), 18)), (matches wcurp, "*ÃÃ¦*"))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to t 
let wnumero_ss = 99999999999 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 625 
let wnum_linea = 625 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@ERROR_RFC@GUTIERREZ TELLER STEPHANIE ASTRID@P01 
let cadenae02 = RC@ERROR_RFC@GUTIERREZ TELLER STEPHANIE ASTRID@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 21.36 ; 
let wporcent = 21.36 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select case  when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel else a.id_nivel end as ggn_nivel, case  when (= a.id_tipo_tabulador, "F") then a.id_integracion else a.id_sub_nivel end as int_subnivel, a.id_zona, (max a.fec_imputacion), (min b.fecha_ini_ts), (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.id_sociedad, b.id_sociedad))
    group by ggn_nivel, int_subnivel, id_zona)
evaluates to 1 ; 01/07/2022 ; 15/07/2022 ; 2 ; 1 ; 53 ; 
let wid_nivel_wid_grupo_grado_nivel = 53 
let wid_sub_nivel_wid_integracion = 1 
let wid_zona = 2 
let wfec_imputacion = 15/07/2022 
let wfecha_ini_ts = 01/07/2022 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE inf_rl102 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st, a.prme_cont_tot, a.prme_cont_per, (nvl a.comentario, ""), a.id_puesto_plaza, a.id_centro_trab, a.id_centro_pago, b.fec_alta_empleado
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 01/03/2022 ; 03895 ; 03895 ; M04001 ;   ; 0.0000000000000000 ; 0.0000000000000000 ; 01/03/2022 ; 137.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 137.0000 
let wfec_alta = 01/03/2022 
let wcont_des_tot = 0.0000000000000000 
let wcon_pag = 0.0000000000000000 
let wfal_ret =   
let wi2puesto = M04001 
let wcen_trab = 03895 
let wcen_pago = 03895 
let wfec_alta_empleado = 01/03/2022 
let wd2puesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wi2puesto)))
evaluates to MEDICO RESIDENTE 1ER. GRADO ; 
let wd2puesto = MEDICO RESIDENTE 1ER. GRADO 
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 01/03/2022 
let wfec_alta2 = 01/03/2022 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to DIF ; 
let westado_c = DIF 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to NULL ; BNMX ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNMX 
let wcuenta = NULL 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 19.5714285714285714 
let wsem_ant = 19.5714285714285714 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P19W 
let wantigf = P19W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-07-01@2022-07-15@15@9940.00@1938.70@0.00@GUTS950208MDFTLT04@99999999999@2022-03-01@P19W@01@No@01@02@503316@ 
let cadnoea = CNR@O@2022-07-15@2022-07-01@2022-07-15@15@9940.00@1938.70@0.00@GUTS950208MDFTLT04@99999999999@2022-03-01@P19W@01@No@01@02@503316@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to MEDICINA INTERNA@MEDICO RESIDENTE 1ER. GRADO@1@04@002@99999999999@@0.00@DIF@ 
let cadnoeb = MEDICINA INTERNA@MEDICO RESIDENTE 1ER. GRADO@1@04@002@99999999999@@0.00@DIF@ 
expression:(+ wnum_linea, 1)
evaluates to 626 
let wnum_linea = 626 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR2", "@"), wcon_pag), " DE "), wcont_des_tot), "@"), TRIM ( BOTH ' ' FROM wfal_ret)), "@"), TRIM ( BOTH ' ' FROM wipuesto)), "@"), TRIM ( BOTH ' ' FROM wcen_pago)), "@"), TRIM ( BOTH ' ' FROM wcen_trab)), "@"), TRIM ( BOTH ' ' FROM wid_nivel_wid_grupo_grado_nivel)), "/"), TRIM ( BOTH ' ' FROM wid_sub_nivel_wid_integracion)), "@"), TRIM ( BOTH ' ' FROM wid_zona)), "/0"), "@"), TRIM ( BOTH ' ' FROM wantig_anio)), "@"), TRIM ( BOTH ' ' FROM wantig_meses)), "@"), TRIM ( BOTH ' ' FROM wantig_dias)), "@"), wfec_alta_empleado), "@"), wsem_trabajadas), "@")
evaluates to CNR2@0 DE 0@@M04001@03895@03895@53/1@2/0@0@4@22@01/03/2022@20@                                                                                                                                                                                             
let cadnoec = CNR2@0 DE 0@@M04001@03895@03895@53/1@2/0@0@4@22@01/03/2022@20@                                                                                                                                                                                             
expression:(+ wnum_linea, 1)
evaluates to 627 
let wnum_linea = 627 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@9940.00@9940.00@1938.70@@                                                                                                                                                                            
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@9940.00@9940.00@1938.70@@                                                                                                                                                                            
expression:(+ wnum_linea, 1)
evaluates to 628 
let wnum_linea = 628 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@9940.00@@@9940.00@0.00@@@@@@@@@@ 
let cadenak = CNP@9940.00@@@9940.00@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 629 
let wnum_linea = 629 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = P ,  xi1 = 662.00 ,  xc1 = 04 ,  wnum_linea = 629 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Compensacion por Riesgo Profesional ; 
let xn_concepto = Compensacion por Riesgo Profesional 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 662.00 
let ximp_gra = 662.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@004@Compensacion por Riesgo Profesional@662.00@0.00 
let xcadenanoi = NPD@@038@004@Compensacion por Riesgo Profesional@662.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 630 
let wnum_linea = 630 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 630 
procedure genlinsatn returns 630 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 630 
let wnum_linea = 630 
expression:(= wp2, "P")
evaluates to f 
expression:(= wp3, "P")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = P ,  xi1 = 47.50 ,  xc1 = 33 ,  wnum_linea = 630 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 036 ; 1 ; Ayuda de Transporte ; 
let xn_concepto = Ayuda de Transporte 
let xgrav = 1 
let xtip_perc = 036 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 47.50 
let ximp_gra = 47.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@036@033@Ayuda de Transporte@47.50@0.00 
let xcadenanoi = NPD@@036@033@Ayuda de Transporte@47.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 631 
let wnum_linea = 631 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 631 
procedure genlinsatn returns 631 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 631 
let wnum_linea = 631 
expression:(= wp4, "P")
evaluates to t 
expression:(and (<> wi4, 0), (= flg4, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = P ,  xi1 = 5920.50 ,  xc1 = 36 ,  wnum_linea = 631 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 015 ; 1 ; Complemento de Beca a medicos residentes ; 
let xn_concepto = Complemento de Beca a medicos residentes 
let xgrav = 1 
let xtip_perc = 015 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 5920.50 
let ximp_gra = 5920.50 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@015@036@Complemento de Beca a medicos residentes@5920.50@0.00 
let xcadenanoi = NPD@@015@036@Complemento de Beca a medicos residentes@5920.50@0.00 
expression:(+ wnum_linea, 1)
evaluates to 632 
let wnum_linea = 632 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 632 
procedure genlinsatn returns 632 

expression:(<procedure> genlinsatn, wemp, wp4, wi4, wc4, wnum_linea, wid_empresa)
evaluates to 632 
let wnum_linea = 632 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to t 
expression:(and (<> wi9, 0), (= flg9, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = P ,  xi1 = 3310.00 ,  xc1 = B2 ,  wnum_linea = 632 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 015 ; 1 ; Beca Residentes ; 
let xn_concepto = Beca Residentes 
let xgrav = 1 
let xtip_perc = 015 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 3310.00 
let ximp_gra = 3310.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@015@0B2@Beca Residentes@3310.00@0.00 
let xcadenanoi = NPD@@015@0B2@Beca Residentes@3310.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 633 
let wnum_linea = 633 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 633 
procedure genlinsatn returns 633 

expression:(<procedure> genlinsatn, wemp, wp9, wi9, wc9, wnum_linea, wid_empresa)
evaluates to 633 
let wnum_linea = 633 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@536.10@1402.60 
let cadenaq = CND@536.10@1402.60 
expression:(+ wnum_linea, 1)
evaluates to 634 
let wnum_linea = 634 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 19.86 ,  xc1 = 1S ,  wnum_linea = 634 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Servicios Soc y Culturales ; 
let xn_concepto = Servicios Soc y Culturales 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 19.86 
let ximp_exe = 19.86 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@01S@Servicios Soc y Culturales@19.86 
let xcadenanoi = NDD@001@01S@Servicios Soc y Culturales@19.86 
expression:(+ wnum_linea, 1)
evaluates to 635 
let wnum_linea = 635 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 635 
procedure genlinsatn returns 635 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 635 
let wnum_linea = 635 
expression:(= wp3, "D")
evaluates to f 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to t 
expression:(and (<> wi5, 0), (= flg5, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 243.29 ,  xc1 = 4S ,  wnum_linea = 635 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 003 ; 0 ; Seguro Cesantia ; 
let xn_concepto = Seguro Cesantia 
let xgrav = 0 
let xtip_perc = 003 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 243.29 
let ximp_exe = 243.29 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@003@04S@Seguro Cesantia@243.29 
let xcadenanoi = NDD@003@04S@Seguro Cesantia@243.29 
expression:(+ wnum_linea, 1)
evaluates to 636 
let wnum_linea = 636 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 636 
procedure genlinsatn returns 636 

expression:(<procedure> genlinsatn, wemp, wp5, wi5, wc5, wnum_linea, wid_empresa)
evaluates to 636 
let wnum_linea = 636 
expression:(= wp6, "D")
evaluates to t 
expression:(and (<> wi6, 0), (= flg6, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 1402.60 ,  xc1 = 53 ,  wnum_linea = 636 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 1402.60 
let ximp_exe = 1402.60 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@1402.60 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@1402.60 
expression:(+ wnum_linea, 1)
evaluates to 637 
let wnum_linea = 637 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 637 
procedure genlinsatn returns 637 

expression:(<procedure> genlinsatn, wemp, wp6, wi6, wc6, wnum_linea, wid_empresa)
evaluates to 637 
let wnum_linea = 637 
expression:(= wp7, "D")
evaluates to t 
expression:(and (<> wi7, 0), (= flg7, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 92.68 ,  xc1 = 65 ,  wnum_linea = 637 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Institucional ; 
let xn_concepto = Seguro Institucional 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 92.68 
let ximp_exe = 92.68 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@065@Seguro Institucional@92.68 
let xcadenanoi = NDD@004@065@Seguro Institucional@92.68 
expression:(+ wnum_linea, 1)
evaluates to 638 
let wnum_linea = 638 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 638 
procedure genlinsatn returns 638 

expression:(<procedure> genlinsatn, wemp, wp7, wi7, wc7, wnum_linea, wid_empresa)
evaluates to 638 
let wnum_linea = 638 
expression:(= wp8, "D")
evaluates to t 
expression:(and (<> wi8, 0), (= flg8, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 3.95 ,  xc1 = 66 ,  wnum_linea = 638 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro Colectivo de Retiro ; 
let xn_concepto = Seguro Colectivo de Retiro 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 3.95 
let ximp_exe = 3.95 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@066@Seguro Colectivo de Retiro@3.95 
let xcadenanoi = NDD@004@066@Seguro Colectivo de Retiro@3.95 
expression:(+ wnum_linea, 1)
evaluates to 639 
let wnum_linea = 639 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 639 
procedure genlinsatn returns 639 

expression:(<procedure> genlinsatn, wemp, wp8, wi8, wc8, wnum_linea, wid_empresa)
evaluates to 639 
let wnum_linea = 639 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to t 
expression:(and (<> wi10, 0), (= flg10, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 17.43 ,  xc1 = D5 ,  wnum_linea = 639 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 004 ; 0 ; Seguro de Resp Civil y Prof ; 
let xn_concepto = Seguro de Resp Civil y Prof 
let xgrav = 0 
let xtip_perc = 004 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 17.43 
let ximp_exe = 17.43 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
let xcadenanoi = NDD@004@0D5@Seguro de Resp Civil y Prof@17.43 
expression:(+ wnum_linea, 1)
evaluates to 640 
let wnum_linea = 640 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 640 
procedure genlinsatn returns 640 

expression:(<procedure> genlinsatn, wemp, wp10, wi10, wc10, wnum_linea, wid_empresa)
evaluates to 640 
let wnum_linea = 640 
expression:(= wp11, "D")
evaluates to t 
expression:(and (<> wi11, 0), (= flg11, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 109.23 ,  xc1 = S7 ,  wnum_linea = 640 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 109.23 
let ximp_exe = 109.23 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S7@Seguro de Salud@109.23 
let xcadenanoi = NDD@001@0S7@Seguro de Salud@109.23 
expression:(+ wnum_linea, 1)
evaluates to 641 
let wnum_linea = 641 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 641 
procedure genlinsatn returns 641 

expression:(<procedure> genlinsatn, wemp, wp11, wi11, wc11, wnum_linea, wid_empresa)
evaluates to 641 
let wnum_linea = 641 
expression:(= wp12, "D")
evaluates to t 
expression:(and (<> wi12, 0), (= flg12, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 24.83 ,  xc1 = S8 ,  wnum_linea = 641 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro de Salud ; 
let xn_concepto = Seguro de Salud 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 24.83 
let ximp_exe = 24.83 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S8@Seguro de Salud@24.83 
let xcadenanoi = NDD@001@0S8@Seguro de Salud@24.83 
expression:(+ wnum_linea, 1)
evaluates to 642 
let wnum_linea = 642 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 642 
procedure genlinsatn returns 642 

expression:(<procedure> genlinsatn, wemp, wp12, wi12, wc12, wnum_linea, wid_empresa)
evaluates to 642 
let wnum_linea = 642 
expression:(= wp13, "D")
evaluates to t 
expression:(and (<> wi13, 0), (= flg13, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 503316 ,  xp1 = D ,  xi1 = 24.83 ,  xc1 = S9 ,  wnum_linea = 642 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 001 ; 0 ; Seguro Invalidez y vida ; 
let xn_concepto = Seguro Invalidez y vida 
let xgrav = 0 
let xtip_perc = 001 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 24.83 
let ximp_exe = 24.83 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@001@0S9@Seguro Invalidez y vida@24.83 
let xcadenanoi = NDD@001@0S9@Seguro Invalidez y vida@24.83 
expression:(+ wnum_linea, 1)
evaluates to 643 
let wnum_linea = 643 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 643 
procedure genlinsatn returns 643 

expression:(<procedure> genlinsatn, wemp, wp13, wi13, wc13, wnum_linea, wid_empresa)
evaluates to 643 
let wnum_linea = 643 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 644 
let wnum_linea = 644 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 30 
let w_cont = 30 
select cursor iteration.
end cursor
system : echo unload to 'Archivo.txt' > sql01.sql

system : echo select linea from info_satn order by num_linea >> sql01.sql

system : dbaccess m4prod sql01.sql

system : sed '1,$s/|//g' Archivo.txt > Archivo1.txt

system : sed '1,$s/@/|/g' Archivo1.txt > ArchivoSAT_2022.txt

expression:(- w_cont, 1)
evaluates to 29 
let w_cont = 29 

update timb_cons20 set
    (num_consf) = (wnum_cons2)
  where (and (and (and (and (= empresa, wid_empresa), (= fec_pago, wfec_pago)), (= fec_crea, wfec_pagox)), (= descripcion, w_nomdes)), (= num_cons, wnum_consi));
expression:(|| (|| (|| (|| (|| (|| (|| (|| "Informe --> ", w_nomdes), "; "), w_tipcont), "; "), w_period), "; "), w_tipnom), ".")
evaluates to Informe --> O; 01-TiemInd; 04-Quincen; O-Ordinari. 
procedure spm4_layoutsatn_pruebas_2022_mq returns Informe --> O; 01-TiemInd; 04-Quincen; O-Ordinari. 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022_mq
procedure spm4_layoutsatn_pruebas_2022_mq returned no data

