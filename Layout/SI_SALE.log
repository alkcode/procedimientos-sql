trace on

let wemp =   
let w_cont = 1 
let wconse = 1 
let wzero = 0 
let wfec_pagox = 2022-07-25 17:55:51.000 
let wnum_linea = 0 

drop table info_satn;

create table info_satn;

revoke;
let w_tipcont = 01-TiemInd 
let w_period = 04-Quincen 
let w_tipnom = O-Ordinari 
let w_tipcont1 = 01 
let w_period1 = 04 
let w_tipnom1 = O 
let w_nomdes = O 
expression:
  (select fec_inicio, fec_fin
    from m4sys_hist_pagas
    where (= fec_paga, wfec_pago))
evaluates to 15/07/2022 ; 01/07/2022 ; 
let wfec_inicio = 01/07/2022 
let wfec_fin = 15/07/2022 
let wdescrip = Pago de nÃ³mina 
expression:(= wfec_pago, "15/01/2019")
evaluates to f 
let wnum_consv = 0 
expression:
  (select (count *)
    from timb_cons20
    where (and (and (and (= fec_pago, wfec_pago), (= fec_crea, wfec_pagox)), (= empresa, wempresa)), (= descripcion, w_nomdes)))
evaluates to 0 ; 
let wnum_consv = 0 
expression:(= wnum_consv, 0)
evaluates to t 
let wnum_consv = 1 
expression:
  (select (max num_consf)
    from timb_cons20
    where (and (>= fec_pago, "15/01/2019"), (= empresa, wempresa)))
evaluates to 2324309 ; 
let wnum_consi = 2324309 
expression:(= wnum_consi, 0)
evaluates to f 
expression:(+ wnum_consi, 1)
evaluates to 2324310 
let wnum_consi = 2324310 
expression:wnum_consi
evaluates to 2324310 
let wnum_cons2 = 2324310 

insert into timb_cons20
  values (wempresa, w_nomdes, wnum_consi, 0, wnum_consv, wfec_pago, wfec_pagox);
let wramo = 637 
expression:(= wempresa, "01")
evaluates to t 
expression:(|| (|| (|| (|| (|| "E03", (<procedure> rpad, "JOSE MARIA LAFRAGUA", 50, " ")), (<procedure> rpad, "4", 20, " ")), (<procedure> rpad, " ", 50, " ")), (<procedure> rpad, "TABACALERA", 50, " ")), (<procedure> rpad, " ", 50, " "))
evaluates to E03JOSE MARIA LAFRAGUA                               4                                                                     TABACALERA                                                                                           
let cade03a = E03JOSE MARIA LAFRAGUA                               4                                                                     TABACALERA                                                                                           
expression:(|| (|| (|| (<procedure> rpad, " ", 50, " "), (<procedure> rpad, "CUAUHTEMOC", 50, " ")), (<procedure> rpad, "DISTRITO FEDERAL", 50, " ")), (<procedure> rpad, "MEXICO", 50, " "))
evaluates to                                                   CUAUHTEMOC                                        DISTRITO FEDERAL                                  MEXICO                                             
let cade03b =                                                   CUAUHTEMOC                                        DISTRITO FEDERAL                                  MEXICO                                             
start select cursor.
select id_empresa, rfc[1, 6], num_cons, tot_net_cheque, tot_ded_cheque, tot_perc_cheque, TRIM ( BOTH ' ' FROM nom_emp), id_banco, cuenta, id_div_geografica, adscripcion, id_servicio, puesto, p1, c1, i1, p2, c2, i2, p3, c3, i3, p4, c4, i4, p5, c5, i5, p6, c6, i6, p7, c7, i7, p8, c8, i8, p9, c9, i9, p10, c10, i10, p11, c11, i11, p12, c12, i12, p13, c13, i13, p14, c14, i14, p15, c15, i15, p16, c16, i16, p17, c17, i17, p18, c18, i18, p19, c19, i19, p20, c20, i20, p21, c21, i21, p22, c22, i22, p23, c23, i23, p24, c24, i24, p25, c25, i25, p26, c26, i26, p27, c27, i27, p28, c28, i28, p29, c29, i29, p30, c30, i30, p31, c31, i31, p32, c32, i32, p33, c33, i33, p34, c34, i34, p35, c35, i35, p36, c36, i36, p37, c37, i37, p38, c38, i38, p39, c39, i39, p40, c40, i40
  from cosif_timbrado_2022
  where (and (and (and (and (= fec_pago, wfec_pago), (= id_empresa, wempresa)), (= tipo, wtipo)), (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<> c1, "26"), (<> c2, "26")), (<> c3, "26")), (<> c4, "26")), (<> c5, "26")), (<> c6, "26")), (<> c7, "26")), (<> c8, "26")), (<> c9, "26")), (<> c10, "26")), (<> c11, "26")), (<> c12, "26")), (<> c13, "26")), (<> c14, "26")), (<> c15, "26")), (<> c16, "26")), (<> c17, "26")), (<> c18, "26")), (<> c19, "26")), (<> c20, "26")), (<> c21, "26")), (<> c22, "26")), (<> c23, "26")), (<> c24, "26")), (<> c25, "26")), (<> c26, "26")), (<> c27, "26")), (<> c28, "26")), (<> c29, "26")), (<> c30, "26")), (<> c31, "26")), (<> c32, "26")), (<> c33, "26")), (<> c34, "26")), (<> c35, "26")), (<> c36, "26")), (<> c37, "26")), (<> c38, "26")), (<> c39, "26")), (<> c40, "26"))), (= rfc, "158125"))
  order by 2
select cursor iteration.
select cursor returns 01 , 158125 , 5339890 , $61236.82 , $25053.50 , $86290.32 , RAMON COLORADO FRANCISCO , BNTE , NULL. , 27 , 2702120100 , 17200 , M01010 , P  , 23 , $41290.32 , P  , 27 , $45000.00 , D                    , 53 , $25053.50 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,                      ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 ,    ,    , $0.00 
expression:
  (select TRIM ( BOTH ' ' FROM id_c_u_r_p_st), numero_ss, TRIM ( BOTH ' ' FROM id_legal), (|| (|| (|| (|| (nvl TRIM ( BOTH ' ' FROM apellido_1), " "), " "), (nvl TRIM ( BOTH ' ' FROM apellido_2), " ")), " "), (nvl TRIM ( BOTH ' ' FROM nombre), " "))
    from m4t_empleados
    where (and (= id_sociedad, id_sociedad), (= id_empleado, wemp)))
evaluates to RAMON COLORADO FRANCISCO ; RACF5203123P5 ; 80915230454 ; RACF520312HTCMLR06 ; 
let wcurp = RACF520312HTCMLR06 
let wnumero_ss = 80915230454 
let wid_legal = RACF5203123P5 
let wnombre2 = RAMON COLORADO FRANCISCO 
expression:
  (select (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 7)), (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), (<procedure> trunc, (/ (- (- (sum dias), (sum dias_descuento)), (* (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), 365)), 30.4)), (<procedure> trunc, (* (- (/ (- (- (sum dias), (sum dias_descuento)), (* (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), 365)), 30.4), (<procedure> trunc, (/ (- (- (sum dias), (sum dias_descuento)), (* (<procedure> trunc, (/ (- (sum dias), (sum dias_descuento)), 365)), 365)), 30.4))), 30.4))
    from m4_antiguedades
    where (and (= id_empleado, wemp), (<> tipo_incidencia, "ANTIGUEDAD FEDERAL")))
evaluates to 20 ; 1 ; 35 ; 1832 ; 
let wsem_trabajadas = 1832 
let wantig_anio = 35 
let wantig_meses = 1 
let wantig_dias = 20 
expression:(|| (|| (|| "llevo lay---> ", w_cont), " "), wemp)
evaluates to llevo lay---> 1 158125 
procedure spm4_layoutsatn_pruebas_2022 returns llevo lay---> 1 158125 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022
expression:(+ wnum_cons2, 1)
evaluates to 2324311 
let wnum_cons2 = 2324311 
expression:wnum_cons2
evaluates to 2324311 
let wnum_cons = 2324311 
let wdias_lab = 15 
let wdias = 15 
let wispt = 0 
expression:(= wc1, "53")
evaluates to f 
expression:(= wc2, "53")
evaluates to f 
expression:(= wc3, "53")
evaluates to t 
expression:wi3
evaluates to $25053.50 
let wispt = $25053.50 
expression:(< wispt, 0)
evaluates to f 
expression:(< wi1, 0)
evaluates to f 
expression:(< wi2, 0)
evaluates to f 
expression:(< wi3, 0)
evaluates to f 
expression:(< wi4, 0)
evaluates to f 
expression:(< wi5, 0)
evaluates to f 
expression:(< wi6, 0)
evaluates to f 
expression:(< wi7, 0)
evaluates to f 
expression:(< wi8, 0)
evaluates to f 
expression:(< wi9, 0)
evaluates to f 
expression:(< wi10, 0)
evaluates to f 
expression:(< wi11, 0)
evaluates to f 
expression:(< wi12, 0)
evaluates to f 
expression:(< wi13, 0)
evaluates to f 
expression:(< wi14, 0)
evaluates to f 
expression:(< wi15, 0)
evaluates to f 
expression:(< wi16, 0)
evaluates to f 
expression:(< wi17, 0)
evaluates to f 
expression:(< wi18, 0)
evaluates to f 
expression:(< wi19, 0)
evaluates to f 
expression:(< wi20, 0)
evaluates to f 
expression:(< wi21, 0)
evaluates to f 
expression:(< wi22, 0)
evaluates to f 
expression:(< wi23, 0)
evaluates to f 
expression:(< wi24, 0)
evaluates to f 
expression:(< wi25, 0)
evaluates to f 
expression:(< wi26, 0)
evaluates to f 
expression:(< wi27, 0)
evaluates to f 
expression:(< wi28, 0)
evaluates to f 
expression:(< wi29, 0)
evaluates to f 
expression:(< wi30, 0)
evaluates to f 
expression:(< wi31, 0)
evaluates to f 
expression:(< wi32, 0)
evaluates to f 
expression:(< wi33, 0)
evaluates to f 
expression:(< wi34, 0)
evaluates to f 
expression:(< wi35, 0)
evaluates to f 
expression:(< wi36, 0)
evaluates to f 
expression:(< wi37, 0)
evaluates to f 
expression:(< wi38, 0)
evaluates to f 
expression:(< wi39, 0)
evaluates to f 
expression:(< wi40, 0)
evaluates to f 
expression:(- wdeduc, wispt)
evaluates to 0.00 
let wimporte = 0.00 
expression:(= wc1, "26")
evaluates to f 
let flg1 = 0 
expression:(= wc2, "26")
evaluates to f 
let flg2 = 0 
expression:(= wc3, "26")
evaluates to f 
let flg3 = 0 
expression:(= wc4, "26")
evaluates to f 
let flg4 = 0 
expression:(= wc5, "26")
evaluates to f 
let flg5 = 0 
expression:(= wc6, "26")
evaluates to f 
let flg6 = 0 
expression:(= wc7, "26")
evaluates to f 
let flg7 = 0 
expression:(= wc8, "26")
evaluates to f 
let flg8 = 0 
expression:(= wc9, "26")
evaluates to f 
let flg9 = 0 
expression:(= wc10, "26")
evaluates to f 
let flg10 = 0 
expression:(= wc11, "26")
evaluates to f 
let flg11 = 0 
expression:(= wc12, "26")
evaluates to f 
let flg12 = 0 
expression:(= wc13, "26")
evaluates to f 
let flg13 = 0 
expression:(= wc14, "26")
evaluates to f 
let flg14 = 0 
expression:(= wc15, "26")
evaluates to f 
let flg15 = 0 
expression:(= wc16, "26")
evaluates to f 
let flg16 = 0 
expression:(= wc17, "26")
evaluates to f 
let flg17 = 0 
expression:(= wc18, "26")
evaluates to f 
let flg18 = 0 
expression:(= wc19, "26")
evaluates to f 
let flg19 = 0 
expression:(= wc20, "26")
evaluates to f 
let flg20 = 0 
expression:(= wc21, "26")
evaluates to f 
let flg21 = 0 
expression:(= wc22, "26")
evaluates to f 
let flg22 = 0 
expression:(= wc23, "26")
evaluates to f 
let flg23 = 0 
expression:(= wc24, "26")
evaluates to f 
let flg24 = 0 
expression:(= wc25, "26")
evaluates to f 
let flg25 = 0 
expression:(= wc26, "26")
evaluates to f 
let flg26 = 0 
expression:(= wc27, "26")
evaluates to f 
let flg27 = 0 
expression:(= wc28, "26")
evaluates to f 
let flg28 = 0 
expression:(= wc29, "26")
evaluates to f 
let flg29 = 0 
expression:(= wc30, "26")
evaluates to f 
let flg30 = 0 
expression:(= wc31, "26")
evaluates to f 
let flg31 = 0 
expression:(= wc32, "26")
evaluates to f 
let flg32 = 0 
expression:(= wc33, "26")
evaluates to f 
let flg33 = 0 
expression:(= wc34, "26")
evaluates to f 
let flg34 = 0 
expression:(= wc35, "26")
evaluates to f 
let flg35 = 0 
expression:(= wc36, "26")
evaluates to f 
let flg36 = 0 
expression:(= wc37, "26")
evaluates to f 
let flg37 = 0 
expression:(= wc38, "26")
evaluates to f 
let flg38 = 0 
expression:(= wc39, "26")
evaluates to f 
let flg39 = 0 
expression:(= wc40, "26")
evaluates to f 
let flg40 = 0 
expression:(= flg1, 0)
evaluates to t 
expression:(or (or (and (= wc1, "09"), (= wc2, "Y1")), (and (= wc1, "14"), (= wc2, "Y2"))), (and (= wc1, "18"), (= wc2, "Y3")))
evaluates to f 
let flg1 = 0 
expression:(= flg2, 0)
evaluates to t 
expression:(or (or (and (= wc2, "09"), (= wc3, "Y1")), (and (= wc2, "14"), (= wc3, "Y2"))), (and (= wc2, "18"), (= wc3, "Y3")))
evaluates to f 
let flg2 = 0 
expression:(= flg3, 0)
evaluates to t 
expression:(or (or (and (= wc3, "09"), (= wc4, "Y1")), (and (= wc3, "14"), (= wc4, "Y2"))), (and (= wc3, "18"), (= wc4, "Y3")))
evaluates to f 
let flg3 = 0 
expression:(= flg4, 0)
evaluates to t 
expression:(or (or (and (= wc4, "09"), (= wc5, "Y1")), (and (= wc4, "14"), (= wc5, "Y2"))), (and (= wc4, "18"), (= wc5, "Y3")))
evaluates to f 
let flg4 = 0 
expression:(= flg5, 0)
evaluates to t 
expression:(or (or (and (= wc5, "09"), (= wc6, "Y1")), (and (= wc5, "14"), (= wc6, "Y2"))), (and (= wc5, "18"), (= wc6, "Y3")))
evaluates to f 
let flg5 = 0 
expression:(= flg6, 0)
evaluates to t 
expression:(or (or (and (= wc6, "09"), (= wc7, "Y1")), (and (= wc6, "14"), (= wc7, "Y2"))), (and (= wc6, "18"), (= wc7, "Y3")))
evaluates to f 
let flg6 = 0 
expression:(= flg7, 0)
evaluates to t 
expression:(or (or (and (= wc7, "09"), (= wc8, "Y1")), (and (= wc7, "14"), (= wc8, "Y2"))), (and (= wc7, "18"), (= wc8, "Y3")))
evaluates to f 
let flg7 = 0 
expression:(= flg8, 0)
evaluates to t 
expression:(or (or (and (= wc8, "09"), (= wc9, "Y1")), (and (= wc8, "14"), (= wc9, "Y2"))), (and (= wc8, "18"), (= wc9, "Y3")))
evaluates to f 
let flg8 = 0 
expression:(= flg9, 0)
evaluates to t 
expression:(or (or (and (= wc9, "09"), (= wc10, "Y1")), (and (= wc9, "14"), (= wc10, "Y2"))), (and (= wc9, "18"), (= wc10, "Y3")))
evaluates to f 
let flg9 = 0 
expression:(= flg10, 0)
evaluates to t 
expression:(or (or (and (= wc10, "09"), (= wc11, "Y1")), (and (= wc10, "14"), (= wc11, "Y2"))), (and (= wc10, "18"), (= wc11, "Y3")))
evaluates to f 
let flg10 = 0 
expression:(= flg11, 0)
evaluates to t 
expression:(or (or (and (= wc11, "09"), (= wc12, "Y1")), (and (= wc11, "14"), (= wc12, "Y2"))), (and (= wc11, "18"), (= wc12, "Y3")))
evaluates to f 
let flg11 = 0 
expression:(= flg12, 0)
evaluates to t 
expression:(or (or (and (= wc12, "09"), (= wc13, "Y1")), (and (= wc12, "14"), (= wc13, "Y2"))), (and (= wc12, "18"), (= wc13, "Y3")))
evaluates to f 
let flg12 = 0 
expression:(= flg13, 0)
evaluates to t 
expression:(or (or (and (= wc13, "09"), (= wc14, "Y1")), (and (= wc13, "14"), (= wc14, "Y2"))), (and (= wc13, "18"), (= wc14, "Y3")))
evaluates to f 
let flg13 = 0 
expression:(= flg14, 0)
evaluates to t 
expression:(or (or (and (= wc14, "09"), (= wc15, "Y1")), (and (= wc14, "14"), (= wc15, "Y2"))), (and (= wc14, "18"), (= wc15, "Y3")))
evaluates to f 
let flg14 = 0 
expression:(= flg15, 0)
evaluates to t 
expression:(or (or (and (= wc15, "09"), (= wc16, "Y1")), (and (= wc15, "14"), (= wc16, "Y2"))), (and (= wc15, "18"), (= wc16, "Y3")))
evaluates to f 
let flg15 = 0 
expression:(= flg16, 0)
evaluates to t 
expression:(or (or (and (= wc16, "09"), (= wc17, "Y1")), (and (= wc16, "14"), (= wc17, "Y2"))), (and (= wc16, "18"), (= wc17, "Y3")))
evaluates to f 
let flg16 = 0 
expression:(= flg17, 0)
evaluates to t 
expression:(or (or (and (= wc17, "09"), (= wc18, "Y1")), (and (= wc17, "14"), (= wc18, "Y2"))), (and (= wc17, "18"), (= wc18, "Y3")))
evaluates to f 
let flg17 = 0 
expression:(= flg18, 0)
evaluates to t 
expression:(or (or (and (= wc18, "09"), (= wc19, "Y1")), (and (= wc18, "14"), (= wc19, "Y2"))), (and (= wc18, "18"), (= wc19, "Y3")))
evaluates to f 
let flg18 = 0 
expression:(= flg19, 0)
evaluates to t 
expression:(or (or (and (= wc19, "09"), (= wc20, "Y1")), (and (= wc19, "14"), (= wc20, "Y2"))), (and (= wc19, "18"), (= wc20, "Y3")))
evaluates to f 
let flg19 = 0 
expression:(= flg20, 0)
evaluates to t 
expression:(or (or (and (= wc20, "09"), (= wc21, "Y1")), (and (= wc20, "14"), (= wc21, "Y2"))), (and (= wc20, "18"), (= wc21, "Y3")))
evaluates to f 
let flg20 = 0 
expression:(= flg21, 0)
evaluates to t 
expression:(or (or (and (= wc21, "09"), (= wc22, "Y1")), (and (= wc21, "14"), (= wc22, "Y2"))), (and (= wc21, "18"), (= wc22, "Y3")))
evaluates to f 
let flg21 = 0 
expression:(= flg22, 0)
evaluates to t 
expression:(or (or (and (= wc22, "09"), (= wc23, "Y1")), (and (= wc22, "14"), (= wc23, "Y2"))), (and (= wc22, "18"), (= wc23, "Y3")))
evaluates to f 
let flg22 = 0 
expression:(= flg23, 0)
evaluates to t 
expression:(or (or (and (= wc23, "09"), (= wc24, "Y1")), (and (= wc23, "14"), (= wc24, "Y2"))), (and (= wc23, "18"), (= wc24, "Y3")))
evaluates to f 
let flg23 = 0 
expression:(= flg24, 0)
evaluates to t 
expression:(or (or (and (= wc24, "09"), (= wc25, "Y1")), (and (= wc24, "14"), (= wc25, "Y2"))), (and (= wc24, "18"), (= wc25, "Y3")))
evaluates to f 
let flg24 = 0 
expression:(= flg25, 0)
evaluates to t 
expression:(or (or (and (= wc25, "09"), (= wc26, "Y1")), (and (= wc25, "14"), (= wc26, "Y2"))), (and (= wc25, "18"), (= wc26, "Y3")))
evaluates to f 
let flg25 = 0 
expression:(= flg26, 0)
evaluates to t 
expression:(or (or (and (= wc26, "09"), (= wc27, "Y1")), (and (= wc26, "14"), (= wc27, "Y2"))), (and (= wc26, "18"), (= wc27, "Y3")))
evaluates to f 
let flg26 = 0 
expression:(= flg27, 0)
evaluates to t 
expression:(or (or (and (= wc27, "09"), (= wc28, "Y1")), (and (= wc27, "14"), (= wc28, "Y2"))), (and (= wc27, "18"), (= wc28, "Y3")))
evaluates to f 
let flg27 = 0 
expression:(= flg28, 0)
evaluates to t 
expression:(or (or (and (= wc28, "09"), (= wc29, "Y1")), (and (= wc28, "14"), (= wc29, "Y2"))), (and (= wc28, "18"), (= wc29, "Y3")))
evaluates to f 
let flg28 = 0 
expression:(= flg29, 0)
evaluates to t 
expression:(or (or (and (= wc29, "09"), (= wc30, "Y1")), (and (= wc29, "14"), (= wc30, "Y2"))), (and (= wc29, "18"), (= wc30, "Y3")))
evaluates to f 
let flg29 = 0 
expression:(= flg30, 0)
evaluates to t 
expression:(or (or (and (= wc30, "09"), (= wc31, "Y1")), (and (= wc30, "14"), (= wc31, "Y2"))), (and (= wc30, "18"), (= wc31, "Y3")))
evaluates to f 
let flg30 = 0 
expression:(= flg31, 0)
evaluates to t 
expression:(or (or (and (= wc31, "09"), (= wc32, "Y1")), (and (= wc31, "14"), (= wc32, "Y2"))), (and (= wc31, "18"), (= wc32, "Y3")))
evaluates to f 
let flg31 = 0 
expression:(= flg32, 0)
evaluates to t 
expression:(or (or (and (= wc32, "09"), (= wc33, "Y1")), (and (= wc32, "14"), (= wc33, "Y2"))), (and (= wc32, "18"), (= wc33, "Y3")))
evaluates to f 
let flg32 = 0 
expression:(= flg33, 0)
evaluates to t 
expression:(or (or (and (= wc33, "09"), (= wc34, "Y1")), (and (= wc33, "14"), (= wc34, "Y2"))), (and (= wc33, "18"), (= wc34, "Y3")))
evaluates to f 
let flg33 = 0 
expression:(= flg34, 0)
evaluates to t 
expression:(or (or (and (= wc34, "09"), (= wc35, "Y1")), (and (= wc34, "14"), (= wc35, "Y2"))), (and (= wc34, "18"), (= wc35, "Y3")))
evaluates to f 
let flg34 = 0 
expression:(= flg35, 0)
evaluates to t 
expression:(or (or (and (= wc35, "09"), (= wc36, "Y1")), (and (= wc35, "14"), (= wc36, "Y2"))), (and (= wc35, "18"), (= wc36, "Y3")))
evaluates to f 
let flg35 = 0 
expression:(= flg36, 0)
evaluates to t 
expression:(or (or (and (= wc36, "09"), (= wc37, "Y1")), (and (= wc36, "14"), (= wc37, "Y2"))), (and (= wc36, "18"), (= wc37, "Y3")))
evaluates to f 
let flg36 = 0 
expression:(= flg37, 0)
evaluates to t 
expression:(or (or (and (= wc37, "09"), (= wc38, "Y1")), (and (= wc37, "14"), (= wc38, "Y2"))), (and (= wc37, "18"), (= wc38, "Y3")))
evaluates to f 
let flg37 = 0 
expression:(= flg38, 0)
evaluates to t 
expression:(or (or (and (= wc38, "09"), (= wc39, "Y1")), (and (= wc38, "14"), (= wc39, "Y2"))), (and (= wc38, "18"), (= wc39, "Y3")))
evaluates to f 
let flg38 = 0 
expression:(= flg39, 0)
evaluates to t 
expression:(or (or (and (= wc39, "09"), (= wc40, "Y1")), (and (= wc39, "14"), (= wc40, "Y2"))), (and (= wc39, "18"), (= wc40, "Y3")))
evaluates to f 
let flg39 = 0 
expression:(= flg40, 0)
evaluates to t 
expression:(or (or (= wc40, "09"), (= wc40, "14")), (= wc40, "18"))
evaluates to f 
let desc_err = E01 
expression:
  (select pagaduria
    from ramo_ct_tim
    where (= ct10, wadscripcion))
evaluates to 27000 ; 
let wpagaduria = 27000 
expression:(null wpagaduria)
evaluates to f 
expression:
  (select cp
    from m4t_domicilios_issste
    where (= id_centro_pago, wpagaduria))
evaluates to NULL. ; 
let wcp = NULL. 
expression:(null wcp)
evaluates to t 
expression:(= wempresa, "01")
evaluates to t 
let wcp = 06080 
let wdpuesto =  
expression:
  (select n_puesto_plaza
    from m4t_puestos_plaza
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_puesto_plaza, wipuesto)))
evaluates to MEDICO ESPECIALISTA "B" ; 
let wdpuesto = MEDICO ESPECIALISTA "B" 
expression:(null wdpuesto)
evaluates to f 
let wdserv =  
expression:
  (select n_clave_servicio
    from m4t_clave_servicio
    where (and (and (= id_sociedad, "01"), (= id_empresa, wempresa)), (= id_clave_servicio, wiserv)))
evaluates to CONSULTA EXTERNA ; 
let wdserv = CONSULTA EXTERNA 
expression:(null wdserv)
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "DC@3.3@", "Serie@"), (<procedure> lpad, wnum_cons2, 9, "0")), "@"), (substring wfec_pagox, 1, 10)), "T"), (substring wfec_pagox, 12, 19)), "@"), "99"), "@"), wperc), "@"), wdeduc), "@MXN@"), "@"), wliquido), "@N@"), "PUE@"), wcp), "@@@@")
evaluates to DC@3.3@Serie@002324311@2022-07-25T17:55:51@99@86290.32@25053.50@MXN@@61236.82@N@PUE@06080@@@@ 
let cadenae01 = DC@3.3@Serie@002324311@2022-07-25T17:55:51@99@86290.32@25053.50@MXN@@61236.82@N@PUE@06080@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 1 
let wnum_linea = 1 
expression:wnum_linea
evaluates to 1 
let wnum_lini = 1 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae01);
let cadenac = EM@ISS6001015A3@Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado 
expression:(+ wnum_linea, 1)
evaluates to 2 
let wnum_linea = 2 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac);
expression:(|| (|| (|| "CNE@603@@", wramo), wpagaduria), "@@@")
evaluates to CNE@603@@63727000@@@ 
let cadenac2 = CNE@603@@63727000@@@ 
expression:(+ wnum_linea, 1)
evaluates to 3 
let wnum_linea = 3 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenac2);
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
expression:(<> (<procedure> length, wcurp), 18)
evaluates to f 
expression:(<> (<procedure> length, wid_legal), 13)
evaluates to f 
let wlongmal = 0 
let wcaracterr = 0 
expression:
  (select (count *)
    from m4t_empleados
    where (and (and (= id_sociedad, id_sociedad), (= id_empleado, wemp)), (<> (<procedure> length, id_c_u_r_p_st), 18)))
evaluates to 0 ; 
let wlongmal = 0 
expression:
  (select (count *)
    from m4t_empleados
    where (and (and (= id_sociedad, id_sociedad), (= id_empleado, wemp)), (matches id_c_u_r_p_st, "*Ã*")))
evaluates to 0 ; 
let wcaracterr = 0 
expression:(or (or (or (= wcurp[1, 2], "  "), (null wcurp)), (= wlongmal, 1)), (= wcaracterr, 1))
evaluates to f 
expression:(or (= wnumero_ss[1, 2], "  "), (null wnumero_ss))
evaluates to f 
expression:(or (or (= wnombre[1], " "), (null wnombre)), (= wnombre[1], ""))
evaluates to f 
expression:(like wnombre, "%  %")
evaluates to f 
expression:(+ wnum_linea, 1)
evaluates to 4 
let wnum_linea = 4 
expression:(|| (|| (|| (|| "RC@", wid_legal), "@"), TRIM ( BOTH ' ' FROM wnombre)), "@P01")
evaluates to RC@RACF5203123P5@RAMON COLORADO FRANCISCO@P01 
let cadenae02 = RC@RACF5203123P5@RAMON COLORADO FRANCISCO@P01 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenae02);
expression:
  (select porcent
    from porc_empn
    where (= id_empleado, wemp))
evaluates to 34.00 ; 
let wporcent = 34.00 
expression:wfec_inicio
evaluates to 01/07/2022 
let wfec_iniciox = 01/07/2022 
expression:wfec_fin
evaluates to 15/07/2022 
let wfec_finx = 15/07/2022 
expression:(<> wempresa, "02")
evaluates to t 
let desc_err = NOE inf_rl01 
expression:
  (select (min b.fecha_ini_ts)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 01/05/2022 ; 
let wfecha_ini_ts = 01/05/2022 
expression:
  (select case  when (= a.id_tipo_tabulador, "A") then a.id_nivel when (= a.id_tipo_tabulador, "B") then a.id_nivel when (= a.id_tipo_tabulador, "E") then a.id_nivel when (= a.id_tipo_tabulador, "F") then a.id_grupo_grado_nivel when (= a.id_tipo_tabulador, "M") then a.id_nivel when (= a.id_tipo_tabulador, "O") then a.id_nivel when (= a.id_tipo_tabulador, "R") then a.id_nivel end, case  when (= a.id_tipo_tabulador, "A") then a.id_sub_nivel when (= a.id_tipo_tabulador, "B") then a.id_sub_nivel when (= a.id_tipo_tabulador, "E") then a.id_sub_nivel when (= a.id_tipo_tabulador, "F") then a.id_integracion when (= a.id_tipo_tabulador, "M") then a.id_sub_nivel when (= a.id_tipo_tabulador, "O") then a.id_sub_nivel when (= a.id_tipo_tabulador, "R") then a.id_sub_nivel end as case, a.id_zona, (max a.fec_imputacion)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (and (= a.id_sociedad, b.id_sociedad), (= a.id_empleado, b.id_empleado)), (= a.fec_alta_empleado, b.fec_alta_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)), (= a.id_empleado, wemp)), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa))
    group by 1, 2, 3)
evaluates to 15/05/2022 ; 3 ; 8 ; 20 ; 
let wid_nivel_wid_grupo_grado_nivel = 20 
let wid_sub_nivel_wid_integracion = 8 
let wid_zona = 3 
let wfec_imputacion = 15/05/2022 
expression:
  (select (count *)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_pago, a.fec_imputacion)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 0 ; 
let wbandera01 = 0 
expression:(= wbandera01, 1)
evaluates to f 
let wdiaantig = 999 
let wsindl = 999 
let wsindn = 999 
let wfec_alta = 01/01/2021 
expression:
  (select (max a.fec_imputacion)
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 15/05/2022 ; 
let wfec_impu = 15/05/2022 
expression:
  (select a.c_sindic_local, a.c_sindic_nacion, a.d_antig_gob_fed, b.fecha_ingreso_st
    from m4t_acumulado_rl1_2011 as a, m4t_acumulado_rl_2011 as b
    where (and (and (and (and (and (and (= a.id_empleado, wemp), (= a.fec_pago, wfec_pago)), (= a.fec_imputacion, wfec_impu)), (= a.id_empresa, wempresa)), (= a.id_empleado, b.id_empleado)), (= a.fec_pago, b.fec_pago)), (= a.fec_imputacion, b.fec_imputacion)))
evaluates to 01/10/1986 ; 12826.0000 ; 0.0000 ; 0.0000 ; 
let wsindl = 0.0000 
let wsindn = 0.0000 
let wdiaantig = 12826.0000 
let wfec_alta = 01/10/1986 
let desc_err = NOE acum_rl03 
expression:(null wfec_impu)
evaluates to f 
let wd2puesto =  
exception : looking for handler
SQL error = -696 ISAM error = 0  error string =  = "wi2puesto"
exception : handler FOUND
expression:(|| (|| (|| (|| (|| "error en  ---> ", w_cont), " "), wemp), " "), error_num)
evaluates to error en  ---> 1 158125 -696 
procedure spm4_layoutsatn_pruebas_2022 returns error en  ---> 1 158125 -696 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022
expression:(+ wnum_linea, 1)
evaluates to 5 
let wnum_linea = 5 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| (|| (|| (|| (|| (|| (|| "Error-", desc_err), ":"), error_num), "-emp:"), wemp), "-Cons:"), wnum_cons2));
let desc_err = NOE fec_alta 
let wsindl_c = No 
expression:wfec_alta
evaluates to 01/10/1986 
let wfec_alta2 = 01/10/1986 
expression:(> wsindl, 0)
evaluates to f 
expression:(> wsindn, 0)
evaluates to f 
let desc_err = NOE Estado 
expression:
  (select c_estado
    from c_estado
    where (= id_div_geografica, wdivgeo))
evaluates to TAB ; 
let westado_c = TAB 
expression:(<> wempresa, "02")
evaluates to t 
expression:
  (select (count *)
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 1 ; 
let wbandera01 = 1 
expression:(= wbandera01, 1)
evaluates to t 
let desc_err = NOE DatosPago 
expression:
  (select id_forma_pago, id_banco, num_cuenta
    from m4t_datos_pago
    where (= id_empleado, wemp))
evaluates to 000000000665660982 ; BNTE ; CHEQUE ; 
let wforpago = CHEQUE 
let wbanco = BNTE 
let wcuenta = 000000000665660982 
expression:(or (= wcuenta, ""), (null wcuenta))
evaluates to f 
expression:(= wforpago, "CHEQUE")
evaluates to t 
let wbanco = BNMX 
expression:
  (select c_banco
    from c_banco
    where (= id_banco, wbanco))
evaluates to 002 ; 
let wbanco_c = 002 
let wcuenta = 99999999999 
let desc_err = NOE DatosPago02 
expression:(= wforpago, "TD")
evaluates to f 
expression:(= (<procedure> length, wcuenta), 18)
evaluates to f 
expression:(and (= (<procedure> length, wcuenta), 10), (= wbanco, "SPEI"))
evaluates to f 
expression:(/ (+ (- wfec_pago, wfec_alta), 1), 7)
evaluates to 1867.4285714285714286 
let wsem_ant = 1867.4285714285714286 
expression:(|| (|| "P", wsem_ant), "W")
evaluates to P1867W 
let wantigf = P1867W 
let desc_err = NOE DatosPago06 
expression:(|| (|| (|| (|| (|| (|| "NOE Arma", "-"), wforpago), "-"), wbanco), "-"), wcuenta)
evaluates to NOE Arma-CHEQUE-BNMX-99999999999 
let desc_err = NOE Arma-CHEQUE-BNMX-99999999999 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CNR", "@"), w_tipnom1), "@"), (substring wfec_finx, 1, 10)), "@"), wfecha_ini_ts), "@"), (substring wfec_finx, 1, 10)), "@"), wdias), "@"), wperc), "@"), wdeduc), "@0.00@"), wcurp), "@"), TRIM ( BOTH ' ' FROM wnumero_ss)), "@"), (substring wfec_alta2, 1, 10)), "@"), TRIM ( BOTH ' ' FROM wantigf)), "@"), w_tipcont1), "@"), wsindl_c), "@01@02@"), wemp), "@")
evaluates to CNR@O@2022-07-15@2022-05-01@2022-07-15@15@86290.32@25053.50@0.00@RACF520312HTCMLR06@80915230454@1986-10-01@P1867W@01@No@01@02@158125@ 
let cadnoea = CNR@O@2022-07-15@2022-05-01@2022-07-15@15@86290.32@25053.50@0.00@RACF520312HTCMLR06@80915230454@1986-10-01@P1867W@01@No@01@02@158125@ 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| TRIM ( BOTH ' ' FROM wdserv), "@"), TRIM ( BOTH ' ' FROM wd2puesto)), "@1@"), w_period1), "@"), TRIM ( BOTH ' ' FROM wbanco_c)), "@"), wcuenta), "@@0.00@"), westado_c), "@")
evaluates to CONSULTA EXTERNA@@1@04@002@99999999999@@0.00@TAB@ 
let cadnoeb = CONSULTA EXTERNA@@1@04@002@99999999999@@0.00@TAB@ 
expression:(+ wnum_linea, 1)
evaluates to 6 
let wnum_linea = 6 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| TRIM ( BOTH ' ' FROM cadnoea), TRIM ( BOTH ' ' FROM cadnoeb)));
exception : looking for handler
SQL error = -696 ISAM error = 0  error string =  = "wcon_pag"
exception : handler FOUND
expression:(|| (|| (|| (|| (|| "error en  ---> ", w_cont), " "), wemp), " "), error_num)
evaluates to error en  ---> 1 158125 -696 
procedure spm4_layoutsatn_pruebas_2022 returns error en  ---> 1 158125 -696 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022
expression:(+ wnum_linea, 1)
evaluates to 7 
let wnum_linea = 7 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| (|| (|| (|| (|| (|| (|| "Error-", desc_err), ":"), error_num), "-emp:"), wemp), "-Cons:"), wnum_cons2));
expression:(+ wnum_linea, 1)
evaluates to 8 
let wnum_linea = 8 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, TRIM ( BOTH ' ' FROM cadnoec));
exception : looking for handler
SQL error = -696 ISAM error = 0  error string =  = "cadnoec"
exception : handler FOUND
expression:(|| (|| (|| (|| (|| "error en  ---> ", w_cont), " "), wemp), " "), error_num)
evaluates to error en  ---> 1 158125 -696 
procedure spm4_layoutsatn_pruebas_2022 returns error en  ---> 1 158125 -696 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022
expression:(+ wnum_linea, 1)
evaluates to 9 
let wnum_linea = 9 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, (|| (|| (|| (|| (|| (|| (|| "Error-", desc_err), ":"), error_num), "-emp:"), wemp), "-Cons:"), wnum_cons2));
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| "CN@", "84111505@1@"), "ACT@"), TRIM ( BOTH ' ' FROM wdescrip)), "@"), wperc), "@"), wperc), "@"), wdeduc), "@@")
evaluates to CN@84111505@1@ACT@Pago de nÃ³mina@86290.32@86290.32@25053.50@@                                                                                                                                                                         
let cadenad01 = CN@84111505@1@ACT@Pago de nÃ³mina@86290.32@86290.32@25053.50@@                                                                                                                                                                         
expression:(+ wnum_linea, 1)
evaluates to 10 
let wnum_linea = 10 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenad01);
expression:(|| (|| (|| (|| (|| "CNP@", wperc), "@@@"), wperc), "@0.00"), "@@@@@@@@@@")
evaluates to CNP@86290.32@@@86290.32@0.00@@@@@@@@@@ 
let cadenak = CNP@86290.32@@@86290.32@0.00@@@@@@@@@@ 
expression:(+ wnum_linea, 1)
evaluates to 11 
let wnum_linea = 11 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenak);
expression:(= wp1, "P")
evaluates to t 
expression:(and (<> wi1, 0), (= flg1, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 158125 ,  xp1 = P ,  xi1 = 41290.32 ,  xc1 = 23 ,  wnum_linea = 11 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Premio por Antiguedad ; 
let xn_concepto = Premio por Antiguedad 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 41290.32 
let ximp_gra = 41290.32 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@023@Premio por Antiguedad@41290.32@0.00 
let xcadenanoi = NPD@@038@023@Premio por Antiguedad@41290.32@0.00 
expression:(+ wnum_linea, 1)
evaluates to 12 
let wnum_linea = 12 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 12 
procedure genlinsatn returns 12 

expression:(<procedure> genlinsatn, wemp, wp1, wi1, wc1, wnum_linea, wid_empresa)
evaluates to 12 
let wnum_linea = 12 
expression:(= wp2, "P")
evaluates to t 
expression:(and (<> wi2, 0), (= flg2, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 158125 ,  xp1 = P ,  xi1 = 45000.00 ,  xc1 = 27 ,  wnum_linea = 12 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 038 ; 1 ; Premio Moneda de Oro ; 
let xn_concepto = Premio Moneda de Oro 
let xgrav = 1 
let xtip_perc = 038 
expression:(<> xgrav, 0)
evaluates to t 
expression:xi1
evaluates to 45000.00 
let ximp_gra = 45000.00 
let ximp_exe = 0 
expression:(= xp1, "P")
evaluates to t 
let xkey = NPD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to t 
expression:(|| (|| (|| (|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_gra), "@"), ximp_exe)
evaluates to NPD@@038@027@Premio Moneda de Oro@45000.00@0.00 
let xcadenanoi = NPD@@038@027@Premio Moneda de Oro@45000.00@0.00 
expression:(+ wnum_linea, 1)
evaluates to 13 
let wnum_linea = 13 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 13 
procedure genlinsatn returns 13 

expression:(<procedure> genlinsatn, wemp, wp2, wi2, wc2, wnum_linea, wid_empresa)
evaluates to 13 
let wnum_linea = 13 
expression:(= wp3, "P")
evaluates to f 
expression:(= wp4, "P")
evaluates to f 
expression:(= wp5, "P")
evaluates to f 
expression:(= wp6, "P")
evaluates to f 
expression:(= wp7, "P")
evaluates to f 
expression:(= wp8, "P")
evaluates to f 
expression:(= wp9, "P")
evaluates to f 
expression:(= wp10, "P")
evaluates to f 
expression:(= wp11, "P")
evaluates to f 
expression:(= wp12, "P")
evaluates to f 
expression:(= wp13, "P")
evaluates to f 
expression:(= wp14, "P")
evaluates to f 
expression:(= wp15, "P")
evaluates to f 
expression:(= wp16, "P")
evaluates to f 
expression:(= wp17, "P")
evaluates to f 
expression:(= wp18, "P")
evaluates to f 
expression:(= wp19, "P")
evaluates to f 
expression:(= wp20, "P")
evaluates to f 
expression:(= wp21, "P")
evaluates to f 
expression:(= wp22, "P")
evaluates to f 
expression:(= wp23, "P")
evaluates to f 
expression:(= wp24, "P")
evaluates to f 
expression:(= wp25, "P")
evaluates to f 
expression:(= wp26, "P")
evaluates to f 
expression:(= wp27, "P")
evaluates to f 
expression:(= wp28, "P")
evaluates to f 
expression:(= wp29, "P")
evaluates to f 
expression:(= wp30, "P")
evaluates to f 
expression:(= wp31, "P")
evaluates to f 
expression:(= wp32, "P")
evaluates to f 
expression:(= wp33, "P")
evaluates to f 
expression:(= wp34, "P")
evaluates to f 
expression:(= wp35, "P")
evaluates to f 
expression:(= wp36, "P")
evaluates to f 
expression:(= wp37, "P")
evaluates to f 
expression:(= wp38, "P")
evaluates to f 
expression:(= wp39, "P")
evaluates to f 
expression:(= wp40, "P")
evaluates to f 
expression:(and (= wc1, "09"), (> wi1, 0))
evaluates to f 
expression:(and (= wc2, "09"), (> wi2, 0))
evaluates to f 
expression:(and (= wc3, "09"), (> wi3, 0))
evaluates to f 
expression:(and (= wc4, "09"), (> wi4, 0))
evaluates to f 
expression:(and (= wc5, "09"), (> wi5, 0))
evaluates to f 
expression:(and (= wc6, "09"), (> wi6, 0))
evaluates to f 
expression:(and (= wc7, "09"), (> wi7, 0))
evaluates to f 
expression:(and (= wc8, "09"), (> wi8, 0))
evaluates to f 
expression:(and (= wc9, "09"), (> wi9, 0))
evaluates to f 
expression:(and (= wc10, "09"), (> wi10, 0))
evaluates to f 
expression:(and (= wc11, "09"), (> wi11, 0))
evaluates to f 
expression:(and (= wc12, "09"), (> wi12, 0))
evaluates to f 
expression:(and (= wc13, "09"), (> wi13, 0))
evaluates to f 
expression:(and (= wc14, "09"), (> wi14, 0))
evaluates to f 
expression:(and (= wc15, "09"), (> wi15, 0))
evaluates to f 
expression:(and (= wc16, "09"), (> wi16, 0))
evaluates to f 
expression:(and (= wc17, "09"), (> wi17, 0))
evaluates to f 
expression:(and (= wc18, "09"), (> wi18, 0))
evaluates to f 
expression:(and (= wc19, "09"), (> wi19, 0))
evaluates to f 
expression:(and (= wc20, "09"), (> wi20, 0))
evaluates to f 
expression:(and (= wc21, "09"), (> wi21, 0))
evaluates to f 
expression:(and (= wc22, "09"), (> wi22, 0))
evaluates to f 
expression:(and (= wc23, "09"), (> wi23, 0))
evaluates to f 
expression:(and (= wc24, "09"), (> wi24, 0))
evaluates to f 
expression:(and (= wc25, "09"), (> wi25, 0))
evaluates to f 
expression:(and (= wc26, "09"), (> wi26, 0))
evaluates to f 
expression:(and (= wc27, "09"), (> wi27, 0))
evaluates to f 
expression:(and (= wc28, "09"), (> wi28, 0))
evaluates to f 
expression:(and (= wc29, "09"), (> wi29, 0))
evaluates to f 
expression:(and (= wc30, "09"), (> wi30, 0))
evaluates to f 
expression:(and (= wc31, "09"), (> wi31, 0))
evaluates to f 
expression:(and (= wc32, "09"), (> wi32, 0))
evaluates to f 
expression:(and (= wc33, "09"), (> wi33, 0))
evaluates to f 
expression:(and (= wc34, "09"), (> wi34, 0))
evaluates to f 
expression:(and (= wc35, "09"), (> wi35, 0))
evaluates to f 
expression:(and (= wc36, "09"), (> wi36, 0))
evaluates to f 
expression:(and (= wc37, "09"), (> wi37, 0))
evaluates to f 
expression:(and (= wc38, "09"), (> wi38, 0))
evaluates to f 
expression:(and (= wc39, "09"), (> wi39, 0))
evaluates to f 
expression:(and (= wc40, "09"), (> wi40, 0))
evaluates to f 
expression:(|| (|| (|| "CND@", wimporte), "@"), wispt)
evaluates to CND@0.00@25053.50 
let cadenaq = CND@0.00@25053.50 
expression:(+ wnum_linea, 1)
evaluates to 14 
let wnum_linea = 14 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadenaq);
expression:(= wp1, "D")
evaluates to f 
expression:(= wp2, "D")
evaluates to f 
expression:(= wp3, "D")
evaluates to t 
expression:(and (<> wi3, 0), (= flg3, 0))
evaluates to t 

execute function m4prod.genlinsatn[procid=40514] ( xemp = 158125 ,  xp1 = D ,  xi1 = 25053.50 ,  xc1 = 53 ,  wnum_linea = 14 ,  xid_empresa = 01 )
let xband = 1 
expression:(= xband, 1)
evaluates to t 
expression:(< xi1, 0)
evaluates to f 
expression:
  (select n_concepto, gravado, sat_tipoperded
    from cptos_grav
    where (= id_concepto, xc1))
evaluates to 002 ; 0 ; Impuesto sobre la Renta ; 
let xn_concepto = Impuesto sobre la Renta 
let xgrav = 0 
let xtip_perc = 002 
expression:(<> xgrav, 0)
evaluates to f 
let ximp_gra = 0 
expression:xi1
evaluates to 25053.50 
let ximp_exe = 25053.50 
expression:(= xp1, "P")
evaluates to f 
let xkey = NDD 
expression:(null xn_concepto)
evaluates to f 
expression:(= xp1, "P")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| xkey, "@"), xtip_perc), "@"), (<procedure> lpad, xc1, 3, "0")), "@"), TRIM ( BOTH ' ' FROM xn_concepto)), "@"), ximp_exe)
evaluates to NDD@002@053@Impuesto sobre la Renta@25053.50 
let xcadenanoi = NDD@002@053@Impuesto sobre la Renta@25053.50 
expression:(+ wnum_linea, 1)
evaluates to 15 
let wnum_linea = 15 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, xid_empresa, xemp, xcadenanoi);
expression:wnum_linea
evaluates to 15 
procedure genlinsatn returns 15 

expression:(<procedure> genlinsatn, wemp, wp3, wi3, wc3, wnum_linea, wid_empresa)
evaluates to 15 
let wnum_linea = 15 
expression:(= wp4, "D")
evaluates to f 
expression:(= wp5, "D")
evaluates to f 
expression:(= wp6, "D")
evaluates to f 
expression:(= wp7, "D")
evaluates to f 
expression:(= wp8, "D")
evaluates to f 
expression:(= wp9, "D")
evaluates to f 
expression:(= wp10, "D")
evaluates to f 
expression:(= wp11, "D")
evaluates to f 
expression:(= wp12, "D")
evaluates to f 
expression:(= wp13, "D")
evaluates to f 
expression:(= wp14, "D")
evaluates to f 
expression:(= wp15, "D")
evaluates to f 
expression:(= wp16, "D")
evaluates to f 
expression:(= wp17, "D")
evaluates to f 
expression:(= wp18, "D")
evaluates to f 
expression:(= wp19, "D")
evaluates to f 
expression:(= wp20, "D")
evaluates to f 
expression:(= wp21, "D")
evaluates to f 
expression:(= wp22, "D")
evaluates to f 
expression:(= wp23, "D")
evaluates to f 
expression:(= wp24, "D")
evaluates to f 
expression:(= wp25, "D")
evaluates to f 
expression:(= wp26, "D")
evaluates to f 
expression:(= wp27, "D")
evaluates to f 
expression:(= wp28, "D")
evaluates to f 
expression:(= wp29, "D")
evaluates to f 
expression:(= wp30, "D")
evaluates to f 
expression:(= wp31, "D")
evaluates to f 
expression:(= wp32, "D")
evaluates to f 
expression:(= wp33, "D")
evaluates to f 
expression:(= wp34, "D")
evaluates to f 
expression:(= wp35, "D")
evaluates to f 
expression:(= wp36, "D")
evaluates to f 
expression:(= wp37, "D")
evaluates to f 
expression:(= wp38, "D")
evaluates to f 
expression:(= wp39, "D")
evaluates to f 
expression:(= wp40, "D")
evaluates to f 
expression:(|| (|| (|| (|| (|| (|| (|| (|| "NOP@", "002"), "@"), "00001518"), "@"), "SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)"), "@0.00"), "@0.00"), "@@@")
evaluates to NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
let cadnop = NOP@002@00001518@SUBSIDIO PARA EL EMPLEO (EFECTIVAMENTE ENTREGADO AL TRABAJADOR)@0.00@0.00@@@ 
expression:(+ wnum_linea, 1)
evaluates to 16 
let wnum_linea = 16 

insert into info_satn(num_linea, id_empresa, id_empleado, linea)
  values (wnum_linea, wid_empresa, wemp, cadnop);
expression:(+ w_cont, 1)
evaluates to 2 
let w_cont = 2 
select cursor iteration.
end cursor
system : echo unload to 'Archivo.txt' > sql01.sql

system : echo select linea from info_satn order by num_linea >> sql01.sql

system : dbaccess m4prod sql01.sql

system : sed '1,$s/|//g' Archivo.txt > Archivo1.txt

system : sed '1,$s/@/|/g' Archivo1.txt > ArchivoSAT_2022.txt

expression:(- w_cont, 1)
evaluates to 1 
let w_cont = 1 

update timb_cons20 set
    (num_consf) = (wnum_cons2)
  where (and (and (and (and (= empresa, wid_empresa), (= fec_pago, wfec_pago)), (= fec_crea, wfec_pagox)), (= descripcion, w_nomdes)), (= num_cons, wnum_consi));
expression:(|| (|| (|| (|| (|| (|| (|| (|| "Informe --> ", w_nomdes), "; "), w_tipcont), "; "), w_period), "; "), w_tipnom), ".")
evaluates to Informe --> O; 01-TiemInd; 04-Quincen; O-Ordinari. 
procedure spm4_layoutsatn_pruebas_2022 returns Informe --> O; 01-TiemInd; 04-Quincen; O-Ordinari. 

iteration of cursory procedure spm4_layoutsatn_pruebas_2022
procedure spm4_layoutsatn_pruebas_2022 returned no data

